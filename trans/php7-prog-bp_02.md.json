["```php\n Class DB { \n\n  public $db; \n\n  //constructor \n  function __construct($server, $dbname,$user,$pass) { \n    //returns mysqli $link $link = mysqli_connect(''); \n    return $this->db = mysqli_connect($server, $dbname, $user, $pass); \n  } \n} \n\n```", "```php\npublic function query($sql) { \n $results =   $this->db->query($sql); \n return $results; \n} \n\n```", "```php\nINSERT INTO [TABLE] VALUES ([val1], [val2], [val3]); \n\n```", "```php\n function create ($table, $arrayValues) { \n  $query = \"INSERT INTO  `\" . $table . \" ($arrayVal);  //TODO: setup arrayVal \n  $results = $this->db->query($link, $query); \n} \n\n```", "```php\nSELECT * FROM [table] WHERE [key] = [value] \n\n```", "```php\npublic function read($table, $key, $value){ \n         $query  = SELECT * FROM $table WHERE `\". $key . \"` =  \" . $value; \n     return $this->db->query($query); \n} \n\n```", "```php\nSELECT * FROM [table]; \n\n```", "```php\npublic function select_all($table){ \n         $query  = \"SELECT * FROM \" . $table; \n     return $this ->query($query); \n} \n\n```", "```php\nDELETE FROM [table] WHERE [key] = [val]; \n\n```", "```php\npublic function delete($table, $key, $value){ \n         $query  = DELETE FROM $table WHERE `\". $key . \"` =  \" . $value; \n     return $this->query($query); \n} \n\n```", "```php\nUPDATE [table] SET [key1] = [val1], [key2] => [val2]  WHERE [key] = [value] \n\n```", "```php\nfirstname='John' AND lastname='Doe' \n\n```", "```php\npublic function update($table, $updateSetArray, $where){ \n     Foreach($updateSetArray as $key => $value) { \n         $update_fields .= $key . \"=\" . $value . \",\"; \n     } \n      //remove last comma from the foreach loop above \n     $update_fields = substr($update_fields,0, str_len($update_fields)-1); \n    $query  = \"UPDATE \" . $table. \" SET \" . $updateFields . \" WHERE \" $where; //the where \n    return $this->query($query); \n} \n\n```", "```php\n//inside DB class  \npublic function first_of($results) { \n  return reset($results); \n} \n\n```", "```php\n//inside DB class  \npublic function last_of($results) { \n  Return end($results); \n} \n\n```", "```php\npublic function iterate_over($prefix, $postfix, $items) { \n    $ret_val = ''; \n    foreach($items as $item) { \n        $ret_val .= $prefix. $item . $postfix; \n    } \n    return $ret_val; \n} \n\n```", "```php\n    SELECT * FROM {table} WHERE {field} LIKE '%{searchString}%';\n```", "```php\npublic function search_string($table, $column, $needle) { \n $results = $this->query(\"SELECT * FROM `\".$table.\"` WHERE \" .    $column . \" LIKE '%\" . $needle. \"%'\"); \n   return $results; \n} \n\n```", "```php\nfunction convertToJSON($object) { \n   return json_encode($object); \n   } \n\n```", "```php\n//accepts the database results as an array and calls db functions render_shopping_items($items) \n{ \n$db->iterate_over(\"<td>\", \"</td>\", $item_name); \n    foreach($items as $item) { \n     $item->name.  ' ' .$item->price . ' ' . $item->pic; \n\n   } \n$resultTable .= \"</table>\"; \n} \n\n```", "```php\n<html> \n<!doctype html> \n<head> \n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\"> \n</head> \n<body> \n\n```", "```php\n<div class=\"footer\">Copyright 2016</div></body> \n</html> \n\n```", "```php\n<?php \nrequire('header.php'); \n//render item_list code goes here \nrequire('itemslist.php'); //to be coded  \nrequire('footer.php'); \n?> \n\n```", "```php\n<?php  \ninclude('DB.php'); \n$db = new DB(); \n$table = 'shopping_items'; \n$results = $db->select_all($table); \n//calling the render function created earlier: \nforeach(as $item) { \n  echo render_shopping_items($results);  \n} \n\n?> \n//shopping items list goes here. \n\n```", "```php\nCREATE TABLE shopping_items ( \n    id INT(11) NOT NULL AUTO_INCREMENT, \n    name VARCHAR(255) NOT NULL, \n    price DECIMAL(6,2) NOT NULL, \n   image VARCHAR(255) NOT NULL, \nPRIMARY KEY  (id)  \n); \n\n```", "```php\nINSERT INTO `shopping_items` VALUES (NULL,'Tablet', '199.99', 'tablet.png'); \nINSERT INTO `shopping_items` VALUES (NULL, 'Cellphone', '199.99', 'cellphone.png'); \nINSERT INTO `shopping_items` (NULL,'Laptop', '599.99', 'Laptop.png'); \nINSERT INTO `shopping_items` (NULL,'Cable', '14.99', 'Cable.png'); \nINSERT INTO `shopping_items` (NULL, 'Watch', '100.99', 'Watch.png'); \n\n```", "```php\n    **mysql -u root -p**\n\n    ```", "```php\n    **mysql>  use <database>;**\n\n    ```", "```php\n    **mysql> source insert_shopping_items.sql**\n\n    ```", "```php\n//items.php \n\n<html> \n<body> \n\n<form action=\"post_profile.php\" method=\"POST\"> \n<table> \n  <input type=\"checkbox\" value=\"<item_id>\"> <td><item_image></td> \n  <td><item_name></td><td> \n </table> \n</form> \n</body> \n</html> \n\n```", "```php\npublic function render_items($itemsArray)  { \n\nforeach($itemsArray as $item) { \n  return '<tr> \n           <td><input type=\"checkbox\" name=\"item[]\" value=\"' . $item->id. '\">' .  . '</td><td>' . $item->image .'</td> \n<td>'. $item->name . '</td> \n'<td>'.$item->price . '</td> \n'</tr>'; \n} \n} \n\n```", "```php\n$db = new DB(); \n$itemsArray= []; //to contain our items - since PHP 5.4, an array can be defined with []; \nforeach($_POST['item'] as $itemId) { \n\n   $item = $db->read('shopping_items', 'id', $itemId); \n   //this produces the equivalent SQL code: SELECT * FROM shopping_items WHERE id = '$itemId'; \n   $itemsArray[$item->name] = $item-price;  \n\n} \n\n```", "```php\nsetcookie('purchased_items', serialize($itemsArray), time() + 900); \n\n```", "```php\nCREATE TABLE purchases ( \n    id INT(11) NOT NULL AUTO_INCREMENT, \n    customer_name VARCHAR(255) NOT NULL, \n    address DECIMAL(6,2) NOT NULL, \n    email DECIMAL(6,2) NOT NULL, \n    credit_card VARCHAR(255) NOT NULL, \n    items TEXT NOT NULL, \n    total DECIMAL(6,2) NOT NULL, \n    created DATETIME NOT NULL, \n    PRIMARY KEY (id) \n); \n\n```", "```php\n**USE <databasename>**\n\n```", "```php\n**SOURCE purchases.sql** \n\n```", "```php\n<form action=\"save_checkout.php\" method=\"post\"> \n<table> \n  <tr> \n   <td>Name</td><td><input type=\"text\" name=\"fullname\"></td>  \n  </tr>  \n\n <tr> \n<td>Address</td><td><input type=\"text\" name=\"address\"></td> \n</tr> \n<tr> \n<td>Email</td><td><input type=\"text\" name=\"email\"></td> \n</tr> \n\n<tr>  \n  <td>Credit Card</td><td><input type=\"text\" name=\"credit_card\"></td> \n </tr> \n<tr>  \n  <td colspan=\"2\"><input type=\"submit\" name=\"submit\" value=\"Purchase\"></td> \n </tr> \n\n</table> \n</form> \n\n```", "```php\n$db = new DB($server,$dbname,$name,$password); \n\n//let's get the other details of the customer \n$customer_name = $_POST['fullname']; \n$address = $_POST['address']; \n$email = $_POST['email']; \n$credit_card = $_POST['credit_card]; \n$time_now = date('Y-m-d H:i:s'); \n\nforeach($purchased_items as $item) { \n  $prices[] = $item->price; \n} \n\n//get total using array_sum \n$total = array_sum($prices); \n\n$db->insert('purchases', [ \n   'address' => $address, \n'email' => $email, \n'credit_card' => $credit_card, \n **'items' => //<all the items and prices>//,** \n   'total' => $total, \n    'purchase_date' => $timenow \n  ]);  \n?> \n\n```", "```php\nforeach($purchased_items as $item) { \n   $items_text .= $item->name \":\" . $item->price .  \",\" \n} \n\n```", "```php\n... \n  'items' => $items_text \n ... \n\n```", "```php\n<!DOCTYPE html> \n<html> \n<head> \n   <!-- Latest compiled and minified CSS --> \n   <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" integrity=\"sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7\" crossorigin=\"anonymous\"> \n   <title>Thank you for shopping at example.info</title> \n</head> \n<body> \n <div class=\"container\"> \n        <div class=\"row\"> \n            <div class=\"col-lg-12 text-center\"> \n                <h1>Thank you for shopping at example.info</h1> \n                     <p>Yey! We're really happy for choosing us to shop online. We've sent you an email of your purchases. </p> \n                     <p>Let us know right away if you need anything</p> \n            </div> \n        </div> \n    </div> \n</body> \n</html> \n\n```", "```php\nmail(\"<to address>\", \"Your purchase at example.com\",\"Thank you for purchasing...\", \"From: <from address>\"); \n\n```", "```php\n$mail_message = 'Thank you for purchasing the following items'; \n$prices = []; \n$purchased_items = unserialize($_COOKIE['purchased_items']); \nforeach($purchased_items as $itemName => $itemPrice) { \n  $mail_message .=  $itemName . \": \" .$itemPrice . \"\\r\\n \\r\\n\"; \n  //since this is a plain text email, we will use \\r\\n - which are escape strings for us to add a new line after each price. \n  $prices[] = $itemPrice; \n} \n\n$mail_message .= \"The billing total of your purchases is \" . array_sum($prices); \n\nmail($_POST['email'], \"Thank you for shopping at example.info here is your bill\", $mail_message, \"From: billing@example.info\"); \n\n```", "```php\n//Taken from http://www.tcpdf.org/examples/example_001.phps \n\n// Include the main TCPDF library (search for installation path). \nrequire_once('tcpdf_include.php'); \n\n// create new PDF document \n$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false); \n\n// set document information \n$pdf->SetCreator(PDF_CREATOR); \n$pdf->SetAuthor('Nicola Asuni'); \n$pdf->SetTitle('TCPDF Example 001'); \n$pdf->SetSubject('TCPDF Tutorial'); \n$pdf->SetKeywords('TCPDF, PDF, example, test, guide'); \n\n// set default header data \n$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 001', PDF_HEADER_STRING, array(0,64,255), array(0,64,128)); \n$pdf->setFooterData(array(0,64,0), array(0,64,128)); \n\n// set header and footer fonts \n$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN)); \n$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA)); \n\n// set default monospaced font \n$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED); \n\n// set margins \n$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT); \n$pdf->SetHeaderMargin(PDF_MARGIN_HEADER); \n$pdf->SetFooterMargin(PDF_MARGIN_FOOTER); \n\n// set auto page breaks \n$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM); \n\n// set image scale factor \n$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO); \n\n// set some language-dependent strings (optional) \nif (@file_exists(dirname(__FILE__).'/lang/eng.php')) { \n    require_once(dirname(__FILE__).'/lang/eng.php'); \n    $pdf->setLanguageArray($l); \n} \n\n// --------------------------------------------------------- \n\n// set default font subsetting mode \n$pdf->setFontSubsetting(true); \n\n// Set font \n// dejavusans is a UTF-8 Unicode font, if you only need to \n// print standard ASCII chars, you can use core fonts like \n// helvetica or times to reduce file size. \n$pdf->SetFont('dejavusans', '', 14, '', true); \n\n// Add a page \n// This method has several options, check the source code documentation for more information. \n$pdf->AddPage(); \n\n// set text shadow effect \n$pdf->setTextShadow(array('enabled'=>true, 'depth_w'=>0.2, 'depth_h'=>0.2, 'color'=>array(196,196,196), 'opacity'=>1, 'blend_mode'=>'Normal')); \n\n// Set some content to print \n$html = <<<EOD \n<h1>Welcome to <a href=\"http://www.tcpdf.org\" style=\"text-decoration:none;background-color:#CC0000;color:black;\">&nbsp;<span style=\"color:black;\">TC</span><span style=\"color:white;\">PDF</span>&nbsp;</a>!</h1> \n<i>This is the first example of TCPDF library.</i> \n<p>This text is printed using the <i>writeHTMLCell()</i> method but you can also use: <i>Multicell(), writeHTML(), Write(), Cell() and Text()</i>.</p> \n<p>Please check the source code documentation and other examples for further information.</p> \n<p style=\"color:#CC0000;\">TO IMPROVE AND EXPAND TCPDF I NEED YOUR SUPPORT, PLEASE <a href=\"http://sourceforge.net/donate/index.php?group_id=128076\">MAKE A DONATION!</a></p> \nEOD; \n\n// Print text using writeHTMLCell() \n$pdf->writeHTMLCell(0, 0, '', '', $html, 0, 1, 0, true, '', true); \n\n// --------------------------------------------------------- \n\n// Close and output PDF document \n// This method has several options, check the source code documentation for more information. \n$pdf->Output('example_001.pdf', 'I'); \n\n```", "```php\nrequire_once('tcpdf_include.php'); \n\n```", "```php\n$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false); \n\n$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false); \n\n// set document information \n$pdf->SetCreator(PDF_CREATOR); \n$pdf->SetAuthor('Example.Info'); \n$pdf->SetTitle('Invoice Purchases'); \n$pdf->SetSubject('Invoice'); \n$pdf->SetKeywords('Purchases, Invoice, Shopping'); \ns \n\n$html = <<<EOD \n<h1>Example.info Invoice </h1> \n<i>Invoice #0001.</i> \nEOD; \n\n```", "```php\n$html .= <<<EOD \n<table> \n  <tr> \n    <td>Item Purchases</td> \n    <td>Price</td> \n  </tr> \nEOD; \n\n```", "```php\n$db = new DBClass('localhost','root','password', 'databasename'); \nWe shall now query our database with our database class: \n\n$table = 'purchases'; \n$column = 'id';  \n$findVal = $_GET['purchase_id']; \n\n   $result = $db->read ($table, $column, $findVal); \n\nforeach($item = $result->fetch_assoc()) { \n$html .=   \"<tr> \n         <td>\". $item['customer_name']. \"</td> \n         <td>\" . $item['items'] . \" \n</tr>\"; \n\n$total = $items['total']; //let's save the total in a variable for printing in a new row \n\n} \n\n$html .= '<tr><td colspan=\"2\" align=\"right\">TOTAL: ' \".$total. \" ' </td></tr>'; \n\n$html .= <<<EOD \n</table> \nEOD; \n\n$pdf->writeHTML($html, true, false, true, false, ''); \n\n$pdf->Output('customer_invoice.pdf', 'I'); \n\n```", "```php\n<?php \n//create an html variable for printing the html of our page: \n$html = '<!DOCTYPE html><html><body>'; \n\n$table = 'purchases'; \n$results = $db->select_all($table); \n\n//start a new table structure and set the headings of our table: \n$html .= '<table><tr> \n    <th>Customer name</th> \n    <th>Email</th> \n    <th>Address</th> \n    <th>Total Purchase</th> \n</tr>'; \n\n//loop through the results of our query: \nwhile($row = $results->fetch_assoc()){ \n    $html .= '<tr><td>'$row['customer_name'] . '</td>'; \n    $html .= '<td>'$row['email'] . '</td>'; \n    $html .= '<td>'$row['address'] . '</td>'; \n    $html .= '<td>'$row['purchase_date'] . '</td>'; \n    $html .= '</tr>'; \n} \n\n$html .= '</table>'; \n$html .= '</body></html>; \n\n//print out the html \necho $html; \n\n```", "```php\n    $html .= '<tr><td><a href=\"view_purchases.php?pid='.$row['id'] .'\">'$row['customer_name'] . '</a></td>'; \n\n```", "```php\n<?php \n//create an html variable for printing the html of our page: \n$html = '<!DOCTYPE html><html><body>'; \n\n$table = 'purchases; \n$column = 'id'; \n**$purchase_id = $_GET['pid'];** \n$results = $db->read($table, $column, $purchase_id);  \n//outputs: \n// SELECT * FROM purchases WHERE id = '$purchase_id'; \n\n//start a new table structure and set the headings of our table: \n$html .= '<table><tr><th>Customer name</thth>Total Purchased</th></tr>'; \n//loop through the results of our query: \nwhile($row = $results->fetch_assoc()){ \n    $html .= '<tr><td>'$row['customer_name'] . '</td>'; \n    $html .= '<tr><td>'$row['email'] . '</td>'; \n    $html .= '<tr><td>'$row['address'] . '</td>'; \n    $html .= '<tr><td>'$row['purchase_date'] . '</td>'; \n    $html .= '</tr>'; \n} \n$html .= '</table>'; \necho $html; \n\n```"]