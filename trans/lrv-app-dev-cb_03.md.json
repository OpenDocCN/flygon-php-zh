["```php\n    **'driver' => 'native'**\n\n    ```", "```php\n    'driver' => 'eloquent',\n    'model' => 'User',\n    'table' => 'users',\n    ```", "```php\n    'default' => 'mysql',\n\n    'connections' => array(\n\n        'mysql' => array(\n            'driver'   => 'mysql',\n            'host'     => 'localhost',\n            'database' => 'authapp',\n            'username' => 'root',\n            'password' => '',\n            'charset'  => 'utf8',\n            'prefix'   => '',\n        ),\n    ),\n    ```", "```php\n    **php artisan migrate:install**\n\n    ```", "```php\n    **php artisan migrate:make create_users_table**\n\n    ```", "```php\n    <?php\n\n    use Illuminate\\Database\\Migrations\\Migration;\n\n    class CreateUsersTable extends Migration {\n\n        /**\n        * Run the migrations.\n        *\n        * @return void\n        */\n        public function up()\n        {\n            Schema::create('users', function($table)\n            {\n                $table->increments('id');\n                $table->string('email');\n                $table->string('password', 64);\n                $table->string('name');\n                $table->boolean('admin');\n                $table->timestamps();\n            });\n\n        }\n\n        /**\n        * Reverse the migrations.\n        *\n        * @return void\n        */\n        public function down()\n        {\n            Schema::drop('users');\n        }\n\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n    Route::get('registration', function()\n    {\n        return View::make('registration');\n    });\n    ```", "```php\n    <!DOCTYPE html>\n    <html>\n        <head>\n            <title>Laravel Authentication - Registration</title>\n            <meta charset=\"utf-8\">\n        </head>\n        <body>\n            <h2>Laravel Authentication - Registration</h2>\n            <?php $messages =  $errors->all('<p style=\"color:red\">:message</p>') ?>\n            <?php foreach ($messages as $msg): ?>\n                <?= $msg ?>\n            <?php endforeach; ?>\n\n    <?= Form::open() ?>\n            <?= Form::label('email', 'Email address: ') ?>\n            <?= Form::text('email', Input::old('email')) ?>\n            <br>\n            <?= Form::label('password', 'Password: ') ?>\n            <?= Form::password('password') ?>\n            <br>\n            <?= Form::label('password_confirm','Retype Password: ') ?>\n            <?= Form::password('password_confirm') ?>\n            <br>\n            <?= Form::label('name', 'Name: ') ?>\n            <?= Form::text('name', Input::old('name')) ?>\n            <br>\n            <?= Form::label('admin', 'Admin?: ') ?>\n            <?= Form::checkbox('admin','true',Input::old('admin')) ?>\n            <br>\n            <?= Form::submit('Register!') ?>\n            <?= Form::close() ?>\n        </body>\n    </html>\n    ```", "```php\n    Route::post('registration', array('before' => 'csrf',function()\n    {\n        $rules = array(\n            'email'    => 'required|email|unique:users',\n            'password' => 'required|same:password_confirm',\n            'name'     => 'required'\n        );\n        $validation = Validator::make(Input::all(), $rules);\n\n        if ($validation->fails())\n        {\n            return Redirect::to('registration')->withErrors($validation)->withInput();\n        }\n\n        $user           = new User;\n        $user->email    = Input::get('email');\n        $user->password = Hash::make(Input::get('password'));\n        $user->name     = Input::get('name');\n        $user->admin    = Input::get('admin') ? 1 : 0;\n        if ($user->save())\n        {\n            Auth::loginUsingId($user->id);\n            return Redirect::to('profile');\n        }\n        return Redirect::to('registration')->withInput();\n    }));\n    ```", "```php\n    Route::get('profile', function()\n    {\n        if (Auth::check())\n        {\n            return 'Welcome! You have been authorized!';\n        }\n        else\n        {\n            return 'Please <a href=\"login\">Login</a>';\n        }\n    });\n    ```", "```php\n    Route::get('login', function()\n    {\n        return View::make('login');\n    });\n    ```", "```php\n    <!DOCTYPE html>\n    <html>\n        <head>\n            <title>Laravel Authentication - Login</title>\n            <meta charset=\"utf-8\">\n        </head>\n        <body>\n            <h2>Laravel Authentication - Login</h2>\n            <?= '<span style=\"color:red\">' .Session::get('login_error') . '</span>' ?>\n\n            <?= Form::open() ?>\n            <?= Form::label('email', 'Email address: ') ?>\n            <?= Form::text('email', Input::old('email')) ?>\n            <br>\n            <?= Form::label('password', 'Password: ') ?>\n            <?= Form::password('password') ?>\n            <br>\n            <?= Form::submit('Login!') ?>\n            <?= Form::close() ?>\n        </body>\n    </html>\n    ```", "```php\n    Route::post('login', function()\n    {\n        $user = array(\n            'username' => Input::get('email'),\n            'password' => Input::get('password')\n        );\n\n        if (Auth::attempt($user))\n        {\n            return Redirect::to('profile');\n        }\n\n        return Redirect::to('login')->with('login_error','Could not log in.');\n    });\n    ```", "```php\n    Route::get('secured', array('before' => 'auth', function()\n    {\n        return 'This is a secured page!';\n    }));\n    ```", "```php\n    Route::get('profile', function()\n    {\n        if (Auth::check())\n        {\n            return View::make('profile')->with('user',Auth::user());\n        }\n        else\n        {\n            return Redirect::to('login')->with('login_error','You must login first.');\n        }\n    });\n    ```", "```php\n    <?php echo Session::get('notify') ?  \"<p style='color:\n        green'>\" . Session::get('notify') . \"</p>\" : \"\" ?>\n    <h1>Welcome <?php echo $user->name ?></h1>\n    <p>Your email: <?php echo $user->email ?></p>\n    <p>Your account was created on: <?php echo $user\n        ->created_at ?></p>\n    <p><a href=\"<?= URL::to('profile-edit') ?>\">Edit your\n        information</a></p>\n    ```", "```php\n    Route::get('profile-edit', function()\n    {\n        if (Auth::check())\n        {\n            $user = Input::old() ? (object) Input::old() :Auth::user();\n            return View::make('profile_edit')->with('user',$user);\n        }\n    });\n    ```", "```php\n    <h2>Edit User Info</h2>\n    <?php $messages =  $errors->all('<p style=\"color:red\">:message</p>') ?>\n    <?php foreach ($messages as $msg): ?>\n        <?= $msg ?>\n    <?php endforeach; ?>\n    <?= Form::open() ?>\n    <?= Form::label('email', 'Email address: ') ?>\n    <?= Form::text('email', $user->email) ?>\n    <br>\n    <?= Form::label('password', 'Password: ') ?>\n    <?= Form::password('password') ?>\n    <br>\n    <?= Form::label('password_confirm', 'Retype Password: ') ?>\n    <?= Form::password('password_confirm') ?>\n    <br>\n    <?= Form::label('name', 'Name: ') ?>\n    <?= Form::text('name',  $user->name) ?>\n    <br>\n    <?= Form::submit('Update!') ?>\n    <?= Form::close() ?>\n    ```", "```php\n    Route::post('profile-edit', function()\n    {\n        $rules = array(\n            'email'    => 'required|email',\n            'password' => 'same:password_confirm',\n            'name'     => 'required'\n        );\n        $validation = Validator::make(Input::all(), $rules);\n\n        if ($validation->fails())\n        {\n            return Redirect::to('profile-edit')->withErrors($validation)->withInput();\n        }\n\n        $user = User::find(Auth::user()->id);\n        $user->email = Input::get('email');\n        if (Input::get('password')) {\n            $user->password = Hash::make(Input::get('password'));\n        }\n        $user->name = Input::get('name');\n        if ($user->save())\n        {\n            return Redirect::to('profile')->with('notify','Information updated');\n        }\n        return Redirect::to('profile-edit')->withInput();\n    });\n    ```", "```php\n    Route::filter('auth', function()\n    {\n        if (Auth::guest()) return Redirect::guest('login');\n    });\n    ```", "```php\n    Route::filter('auth_admin', function()\n    {\n        if (Auth::guest()) return Redirect::guest('login');\n        if (Auth::user()->admin != TRUE)\n            return Redirect::to('restricted');\n    });\n    ```", "```php\n    Route::get('restricted', array('before' => 'auth',\n        function()\n    {\n        return 'This page is restricted to logged-in users!\n            <a href=\"admin\">Admins Click Here.</a>';\n    }));\n    ```", "```php\n    Route::get('admin', array('before' => 'auth_admin',function()\n    {\n        return 'This page is restricted to Admins only!';\n    }));\n    ```", "```php\n    \"require\": {\n        \"laravel/framework\": \"4.0.*\",\n        \"hybridauth/hybridauth\": \"dev-master\"\n    },\n    ```", "```php\n    **php composer.phar update**\n\n    ```", "```php\n    <?php\n    return array(\n        \"base_url\"   => \"http://path/to/our/app/oauth/auth\",\n        \"providers\"  => array (\n            \"OpenID\" => array (\"enabled\" => true),\n            \"Facebook\" => array (\n                \"enabled\"  => TRUE,\n                \"keys\"     => array (\"id\" => \"APP_ID\", \"secret\"=> \"APP_SECRET\"),\n                \"scope\"    => \"email\",\n            ),\n            \"Twitter\" => array (\n                \"enabled\" => true,\n                \"keys\"    => array (\"key\" => \"CONSUMER_KEY\",\"secret\" => \"CONSUMER_SECRET\")\n            ),\n            \"LinkedIn\" => array (\n                \"enabled\" => true,\n                \"keys\" => array (\"key\" => \"APP_KEY\", \"secret\"=> \"APP_SECRET\")\n            )\n        )\n    );\n    ```", "```php\n    <?php\n    return array(\n        \"base_url\"   => \"http://path/to/our/app/openid/auth\",\n        \"providers\"  => array (\n            \"OpenID\" => array (\"enabled\" => TRUE)\n        )\n    );\n    ```", "```php\n    Route::get('login', function()\n    {\n        return View::make('login');\n    });\n    ```", "```php\n    <!DOCTYPE html>\n    <html>\n        <head>\n            <title>Laravel Open ID Login</title>\n            <meta charset=\"utf-8\">\n        </head>\n        <body>\n            <h1>OpenID Login</h1>\n            <?= Form::open(array('url' => 'openid', 'method' =>'POST')) ?>\n            <?= Form::label('openid_identity', 'OpenID') ?>\n            <?= Form::text('openid_identity', Input::old('openid_identity')) ?>\n            <br>\n            <?= Form::submit('Log In!') ?>\n            <?= Form::close() ?>\n        </body>\n    </html>\n    ```", "```php\n    Route::any('openid/{auth?}', function($auth = NULL)\n    {\n        if ($auth == 'auth') {\n            try {\n                Hybrid_Endpoint::process();\n            } catch (Exception $e) {\n                return Redirect::to('openid');\n            }\n            return;\n        }\n\n        try {\n            $oauth = new Hybrid_Auth(app_path(). '/config/openid_auth.php');\n            $provider = $oauth->authenticate('OpenID',array('openid_identifier' =>Input::get('openid_identity')));\n            $profile = $provider->getUserProfile();\n        }\n        catch(Exception $e) {\n            return $e->getMessage();\n        }\n        echo 'Welcome ' . $profile->firstName . ' ' . $profile->lastName . '<br>';\n        echo 'Your email: ' . $profile->email . '<br>';\n        dd($profile);\n    });\n    ```", "```php\n    <?php\n    return array(\n        \"base_url\" => \"http://path/to/our/app/fbauth/auth\",\n        \"providers\" => array (\n            \"Facebook\" => array (\n                \"enabled\"  => TRUE,\n                \"keys\" => array (\"id\" => \"APP_ID\", \"secret\" =>\"APP_SECRET\"),\n                \"scope\" => \"email\"\n            )\n        )\n    );\n    ```", "```php\n    Route::get('facebook', function()\n    {\n        return \"<a href='fbauth'>Login with Facebook</a>\";\n    });\n    ```", "```php\n    Route::get('fbauth/{auth?}', function($auth = NULL)\n    {\n        if ($auth == 'auth') {\n            try {\n                Hybrid_Endpoint::process();\n            } catch (Exception $e) {\n                return Redirect::to('fbauth');\n            }\n            return;\n        }\n\n        try {\n            $oauth = new Hybrid_Auth(app_path(). '/config/fb_auth.php');\n            $provider = $oauth->authenticate('Facebook');\n            $profile = $provider->getUserProfile();\n        }\n        catch(Exception $e) {\n            return $e->getMessage();\n        }\n        echo 'Welcome ' . $profile->firstName . ' '. $profile->lastName . '<br>';\n        echo 'Your email: ' . $profile->email . '<br>';\n        dd($profile);\n    });\n    ```", "```php\n    <?php\n    return array(\n        \"base_url\"   => \"http://path/to/our/app/twauth/auth\",\n        \"providers\"  => array (\n            \"Twitter\" => array (\n                \"enabled\" => true,\n                \"keys\"    => array (\"key\" => \"CONSUMER_KEY\",\n    \t\t\t     \"secret\" => \"CONSUMER_SECRET\")\n            )\n        )\n    );\n    ```", "```php\n    Route::get('twitter', function()\n    {\n        return \"<a href='twauth'>Login with Twitter</a>\";\n    });\n    ```", "```php\n    Route::get('twauth/{auth?}', function($auth = NULL)\n    {\n        if ($auth == 'auth') {\n            try {\n                Hybrid_Endpoint::process();\n            } catch (Exception $e) {\n                return Redirect::to('twauth');\n            }\n            return;\n        }\n\n        try {\n            $oauth = new Hybrid_Auth(app_path(). '/config/tw_auth.php');\n            $provider = $oauth->authenticate('Twitter');\n            $profile = $provider->getUserProfile();\n        }\n        catch(Exception $e) {\n            return $e->getMessage();\n        }\n        echo 'Welcome ' . $profile->displayName . '<br>';\n        echo 'Your image: <img src=\"' . $profile->photoURL. '\">';\n        dd($profile);\n    });\n    ```", "```php\n    <?php\n    return array(\n        \"base_url\"   => \"http://path/to/our/app/liauth/auth\",\n        \"providers\"  => array (\n            \"LinkedIn\" => array (\n                \"enabled\" => true,\n                \"keys\"    => array (\"key\" => \"API_KEY\",\"secret\" => \"SECRET_KEY\")\n            )\n        )\n    );\n    ```", "```php\n    Route::get('linkedin', function()\n    {\n        return \"<a href='liauth'>Login with LinkedIn</a>\";\n    });\n    ```", "```php\n    Route::get('liauth/{auth?}', function($auth = NULL)\n    {\n        if ($auth == 'auth') {\n            try {\n                Hybrid_Endpoint::process();\n            } catch (Exception $e) {\n                return Redirect::to('liauth');\n            }\n            return;\n        }\n\n        try {\n            $oauth = new Hybrid_Auth(app_path(). '/config/li_auth.php');\n            $provider = $oauth->authenticate('LinkedIn');\n            $profile = $provider->getUserProfile();\n        }\n        catch(Exception $e) {\n            return $e->getMessage();\n        }\n        echo 'Welcome ' . $profile->firstName . ' ' . $profile->lastName . '<br>';\n        echo 'Your email: ' . $profile->email . '<br>';\n        echo 'Your image: <img src=\"' . $profile->photoURL. '\">';\n        dd($profile);\n    });\n    ```"]