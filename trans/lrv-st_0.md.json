["```php\n**git clone git@github.com:laravel/laravel.git**\n\n```", "```php\n127.0.0.1 myfirst.dev\n```", "```php\n<VirtualHost *:80>\n  ServerName myfirst.dev\n  DocumentRoot c:/sites/myfirst/public\n</VirtualHost>\n```", "```php\n**# php -v** \n\n```", "```php\n**# export PATH=/path/to/php/binary:$PATH**\n\n```", "```php\n**# php artisan migrate:install**\n\n```", "```php\n**# php artisan migrate:makecreate_users_table**\n\n```", "```php\nclassCreate_Users_Table\n{\n\n  /**\n  * Make changes to the database.\n  *\n  * @return void\n  */\n  public function up()\n  {\n    Schema::table('users', function($table)\n    {\n      $table->create();\n\n      $table->increments('id');\n\n      $table->string('email');\n      $table->string('real_name');\n      $table->string('password');\n\n      $table->timestamps();\n    });\n  }\n\n  /**\n  * Revert the changes to the database.\n  *\n  * @return void\n  */\n  public function down()\n  {\n    Schema::drop('users');\n  }\n\n}\n```", "```php\n$table->create();\n```", "```php\n$table->increments('id');\n```", "```php\n$table->string('email');\n$table->string('real_name');\n$table->string('password');\n```", "```php\n$table->string('email', 300);\n```", "```php\n$table->timestamps();\n```", "```php\nSchema::drop('users');\n```", "```php\n**# php artisan migrate**\n\n```", "```php\n**# php artisan migrate:rollback**\n\n```", "```php\n**# php artisan migrate**\n\n```", "```php\nclass User extends Eloquent\n{\n\n}\n```", "```php\npublic static $table = 'my_users_table';\n```", "```php\nclass User extends Eloquent\n{\n  public function set_password($string)\n  {\n    $this->set_attribute('password', Hash::make($string));\n  }\n}\n```", "```php\nRoute::get('test', function(){\n  return \"This is the test route.\";\n});\n```", "```php\nRoute::get('test', function()\n{\n  $user = new User;\n\n  $user->email = \"test@test.com\";\n  $user->real_name = \"Test Account\";\n  $user->password = \"test\";\n\n  $user->save();\n\n  return \"The test user has been saved to the database.\";});\n```", "```php\n$user = new User;\n```", "```php\n$user->email = \"test@test.com\";\n$user->real_name = \"Test Account\";\n$user->password = \"test\";\n```", "```php\n$user->save();\n```", "```php\nreturn \"The test user has been saved to the database.\";\n```", "```php\n<?php\n\nclass Users_Controller extends Base_Controller\n{\n\n  public function action_index()\n  {\n    return \"Welcome to the users controller.\";\n  }\n\n}\n```", "```php\nRoute::controller('users');\n```", "```php\n<h1>Users</h1>\n\n<ul>\n  <li>Real Name - Email</li>\n</ul>\n```", "```php\npublic function action_index()\n{\n  return View::make('users.index');\n} \n```", "```php\npublic function action_index()\n{\n  $users = User::all();\n\n  return View::make('users.index')->with('users', $users);\n}\n```", "```php\n$users = User::all();\n```", "```php\nreturn View::make('users.index')->with('users', $users);\n```", "```php\n<h1>Users</h1>\n\n@if($users)\n  <ul>\n    @foreach($users as $user)\n      <li>{{ $user->real_name }} - {{ $user->email }}</li>\n    @endforeach\n  </ul>\n@else\n  Looks like we haven't added any users, yet!\n@endif\n```", "```php\nclassBase_Controller extends Controller{\n  public $restful = true;\n\n  /**\n  * Catch-all method for requests that can't be matched.\n  *\n  * @param  string    $method\n  * @param  array     $parameters\n  * @return Response\n  */\n  public function __call($method, $parameters)\n  {\n    return Response::error('404');\n  }\n\n}\n```", "```php\npublic function action_index()\n```", "```php\npublic function get_index()\n```", "```php\nclassUsers_Controller extends Base_Controller\n{\n\n  public function get_index()\n  {\n    $users = User::all();\n\n    return View::make('users.index')->with('users', $users);\n  }\n\n}\n```", "```php\n<h1>Create a User</h1>\n\n<form method=\"POST\">\n  Real Name: <input type=\"text\" name=\"real_name\"/><br />\n  Email: <input type=\"text\" name=\"email\"/><br />\n  Password: <input type=\"password\" name=\"password\" /><br />\n  <input type=\"submit\" value=\"Create User\"/>\n</form>\n```", "```php\npublic function get_create()\n{\n  return View::make('users.create');\n}\n```", "```php\npublic function post_create()\n{\n  return \"The form has been posted here.\";\n}\n```", "```php\npublic function post_create()\n{\n  $user = new User;\n\n  $user->real_name = Input::get('real_name');\n  $user->email = Input::get('email');\n  $user->password = Input::get('password');\n\n  $user->save();\n\n  return Redirect::to ('users');\n}\n```", "```php\nreturn Redirect::to('users');\n```", "```php\n{{ HTML::link('users/create', 'Create a User') }}\n```", "```php\n{{ HTML::link('users/create', 'Create a User', array('class' => 'btn')) }}\n```", "```php\n<?php $create_link_attributes = array('class' => 'btn'); ?>\n\n{{ HTML::link('users/create', 'Create a User', $create_link_attributes) }}\n```", "```php\npublic function get_delete($user_id)\n{\n  $user = User::find($user_id);\n\n  if(is_null($user))\n  {\n    return Redirect::to('users');\n  }\n\n  $user->delete();\n\n  return Redirect::to('users');\n}\n```", "```php\npublic function get_delete($user_id)\n```", "```php\npublic function get_delete($user_id, $emotion)\n```", "```php\n$user = User::find($user_id);\n```", "```php\nif(is_null($user))\n{\n  return Redirect::to('users');\n}\n```", "```php\n$user->delete();\nreturn Redirect::to('users');\n```", "```php\n<li>{{ $user->real_name }} - {{ $user->email }} - {{ HTML::link('users/delete/'.$user->id, 'Delete') }}</li>\n```", "```php\npublic function get_update($user_id)\n{\n  $user = User::find($user_id);\n\n  if(is_null($user))\n  {\n    return Redirect::to('users');\n  }\n\n  return View::make('users.update')->with('user', $user);\n}\n```", "```php\npublic function post_update($user_id)\n{\n  $user = User::find($user_id);\n\n  if(is_null($user))\n  {\n    return Redirect::to('users');\n  }\n\n  $user->real_name = Input::get('real_name');\n  $user->email = Input::get('email');\n\n  if(Input::has('password'))\n  {\n    $user->password = Input::get('password');\n  }\n\n  $user->save();\n\n  return Redirect::to('users');\t\n}\n```", "```php\n<h1>Update a User</h1>\n\n{{ Form::open() }}\n\n  Real Name: {{ Form::text('real_name', $user->real_name) }}<br />\n  Email: {{ Form::text('email', $user->email) }}<br />\n  Change Password: {{ Form::password('password') }}<br />\n\n{{ Form::submit('Update User') }}\n\n{{ Form::close() }}\n```", "```php\nReal Name: {{ Form::text('real_name', $user->real_name) }}\n```", "```php\nChange Password: {{ Form::password('password') }}\n```", "```php\nclass User extends Eloquent\n{\n  public function passport()\n  {\n    return $this->has_one('Passport');\n  }\n}\n```", "```php\nclass Passport extends Eloquent\n{\n  public function users()\n  {\n    return $this->belongs_to('User');\n  }\n}\n```", "```php\n$user = User::find(1);\n\nIf(is_null($user))\n{\n  echo \"No user found.\";\n  return;\n}\n\nIf($user->passport)\n{\n  echo \"The user's passport number is \" . $user->passport->number;\n}\nelse\n{\n  echo \"This user has no passport.\";\n}\n```", "```php\nclass Team extends Eloquent\n{\n  public function players()\n  {\n    return $this->has_many('Player');\n  }\n}\n\nclass Player extends Eloquent\n{\n  public function team()\n  {\n    return $this->belongs_to('Team');\n  }\n}\n```", "```php\n$team = Team::find(2);\n\nif(is_null($team))\n{\n  echo \"The team could not be found.\";\n}\n\nif(!$team->players)\n{\n  echo \"The team has no players.\";\n}\n\nforeach($team->players as $player)\n{\n  echo \"$player->name is on team $team->name. \";\n}\n```", "```php\nclass Student extends Eloquent\n{\n  public function courses()\n  {\n    return $this->has_many_and_belongs_to('Course');\n  }\n}\n\nclass Course extends Eloquent\n{\n  public function students()\n  {\n    return $this->has_many_and_belongs_to('Student');\n  }   \n}\n```", "```php\n$student = Student::find(1);\n\nif(is_null($student))\n{\n    echo \"The student can't be found.\";\n    exit;\n}\n\nif(!$student->courses)\n{\n    echo \"The student $student->name is not enrolled in any courses.\";\n    exit;\n}\n\nforeach($student->courses as $course)\n{\n    echo \"The student $student->name is enrolled in the course $course->name.\";\n}\n```", "```php\n$course = Course::find(1);\n\nif(is_null($course))\n{\n    echo \"The course can't be found.\";\n    exit;\n}\n\nif(!$course->students)\n{\n    echo \"The course $course->name seems to have no students enrolled.\";\n    exit;\n}\n\nforeach($course->students as $student)\n{\n    echo \"The student $student->name is enrolled in the course $course->name.\";\n}\n```", "```php\n$course = Course::find(13);\n\nif(is_null($course))\n{\n    echo \"The course can't be found.\";\n    exit;\n}\n\n$new_student_information = array(\n    'name' => 'Danielle'\n);\n\n$course->students()->insert($new_student_information);\n```", "```php\n$course->students()->insert($new_student_information);\n```", "```php\n$role_ids = Input::get('role_ids');\n```", "```php\n$user->roles()->sync($role_ids);\n```", "```php\n<?php\n\nclass Auth_Controller extends Base_Controller\n{\n\n  public function get_login()\n  {\n    return View::make('auth.login');\n  }\n\n}\n```", "```php\nRoute::any('login', 'auth@login');\n```", "```php\n{{ Form::open() }}\n  Email: {{ Form::text('email', Input::old('email')) }}<br />\n  Password: {{ Form::password('password') }}<br />\n  {{ Form::submit('Login') }}\n{{ Form::close() }}\n```", "```php\npublic function post_login()\n{\n  $credentials = array(\n    'username' => Input::get('email'),\n    'password' => Input::get('password'),\n  );\n\n  if(Auth::attempt($credentials))\n  {\n    return \"User has been logged in.\";\n  }\n  else\n  {\n    return Redirect::back()->with_input();\n  }\n}\n```", "```php\npublic function get_logout()\n{\n  Auth::logout();\n\n  return Redirect::to('');\n}\n```", "```php\nRoute::get('logout', 'auth@logout');\n```", "```php\n@if(Auth::check())\n  <strong>You're logged in as {{ Auth::user()->real_name }}</strong>\n@endif\n```", "```php\nRoute::filter('auth', function()\n{\n  if (Auth::guest()) return Redirect::to('login');\n});\n```", "```php\nRoute::get('admin', array('before' => 'auth', function()\n{\n  return View::make('admin.dashboard');\n}));\n```", "```php\nclass Users_Controller extends Base_Controller\n{\n\n  public function __construct()\n  {\n    parent::__construct();\n\n    $this->filter('before', 'auth');\n  }\n```", "```php\npublic function post_create()\n{\n  // validate input\n  $rules = array(\n    'real_name' => 'required|max:50',\n    'email'     => 'required|email|unique:users',\n    'password'  => 'required|min:5',\n  );\n\n  $validation = Validator::make(Input::all(), $rules);\n\n  if($validation->fails())\n  {\n    return Redirect::back()->with_input()->with_errors($validation);\n  }\n\n  // create a user\n  $user = new User;\n\n  $user->real_name = Input::get('real_name');\n  $user->email = Input::get('email');\n  $user->password = Input::get('password');\n\n  $user->save();\n\n  return Redirect::to_action('users@index');\n}\n```", "```php\n{{ $errors->first('email', '<span class=\"help-inline\">:message</span>') }}\n```", "```php\nreturn array(\n\n  'docs' => array('handles' => 'docs'),\n\n);\n```", "```php\n**# php artisan bundle:install swiftmailer**\n**Fetching [swiftmailer]...done! Bundle installed.**\n\n```", "```php\nreturn array(\n\n  'docs' => array('handles' => 'docs'),\n  'swiftmailer',\n\n);\n```", "```php\nreturn array(\n\n  'docs' => array('handles' => 'docs'),\n  'swiftmailer' => array('auto' => true),\n\n);\n```"]