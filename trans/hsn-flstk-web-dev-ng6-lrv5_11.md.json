["```php\n version: \"3.1\"\n services:\n     mysql:\n       image: mysql:5.7\n       container_name: chapter-11-mysql\n       working_dir: /application\n       volumes:\n         - .:/application\n         - ./storage-db:/var/lib/mysql\n       environment:\n         - MYSQL_ROOT_PASSWORD=123456\n         - MYSQL_DATABASE=chapter-11\n         - MYSQL_USER=chapter-11\n         - MYSQL_PASSWORD=123456\n       ports:\n         - \"8083:3306\"\n     webserver:\n       image: nginx:alpine\n       container_name: chapter-11-webserver\n       working_dir: /application\n       volumes:\n         - .:/application\n         - ./phpdocker/nginx/nginx.conf:/etc/nginx/conf.d/default.\n            conf\n       ports:\n         - \"8081:80\"\n     php-fpm:\n       build: phpdocker/php-fpm\n       container_name: chapter-11-php-fpm\n       working_dir: /application\n       volumes:\n         - ./Server:/application\n         - ./phpdocker/php-fpm/php-ini-\n            overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini\n```", "```php\n DB_CONNECTION=mysql\n DB_HOST=mysql\n DB_PORT=3306\n DB_DATABASE=chapter-11\n DB_USERNAME=chapter-11\n DB_PASSWORD=123456\n```", "```php\n git add .\n git commit -m \"Initial commit chapter 11\"\n```", "```php\n npm install stylelint --save-dev &&\n npm install stylelint-config-standard --save-dev &&\n npm install stylelint-scss --save-dev\n```", "```php\n     \"sasslint\": \"./node_modules/.bin/stylelint \\\"src/**/*.scss\\\" --syntax scss || echo \\\"Ops: Stylelint faild for some file(s).\\\"\",\n```", "```php\n     {\n        \"extends\": [\"stylelint-config-standard\"],\n        \"rules\": {\n                \"font-family-name-quotes\": \"always-where-recommended\",\n                \"function-url-quotes\": [\n                        \"always\",\n                        {\n                        \"except\": [\"empty\"]\n                        }\n                ],\n                \"selector-attribute-quotes\": \"always\",\n                \"string-quotes\": \"double\",\n                \"max-nesting-depth\": 3,\n                \"selector-max-compound-selectors\": 3,\n                \"selector-max-specificity\": \"0,3,2\",\n                \"declaration-no-important\": true,\n                \"at-rule-no-vendor-prefix\": true,\n                \"media-feature-name-no-vendor-prefix\": true,\n                \"property-no-vendor-prefix\": true,\n                \"selector-no-vendor-prefix\": true,\n                \"value-no-vendor-prefix\": true,\n                \"no-empty-source\": null,\n                \"selector-class-pattern\": \"[a-z-]+\",\n                \"selector-id-pattern\": \"[a-z-]+\",\n                \"selector-max-id\": 0,\n                \"selector-no-qualifying-type\": true,\n                \"selector-max-universal\": 0,\n                \"selector-pseudo-element-no-unknown\": [\n                        true,\n                        {\n                        \"ignorePseudoElements\": [\"ng-deep\"]\n                        }\n                ],\n                \"unit-whitelist\": [\"px\", \"%\", \"em\", \"rem\", \"vw\", \"vh\", \"deg\"],\n                \"max-empty-lines\": 2\n        }\n }\n```", "```php\n\"unit-whitelist\": [\"px\"],\n```", "```php\nnpm run sasslint\n```", "```php\n {\n        \"css.validate\": false,\n        \"less.validate\": false,\n        \"scss.validate\": false\n }\n```", "```php\n /* Sticky footer styles\n -------------------------------------------------- */\n html {\n        position: relative;\n        min-height: 100%;\n }\n\n body {\n        /* Margin bottom by footer height */\n        margin-bottom: 60px;\n }\n\n .footer {\n        position: absolute;\n        bottom: 0;\n        width: 100%;\n        /* Set the fixed height of the footer here */\n        height: 60px;\n        line-height: 60px; /* Vertically center the text there */\n        background-color: #f5f5f5;\n }\n\n main {\n        padding-top: 3.5em;\n }\n\n form {\n        .form-signin,\n        .form-register {\n                width: 80%;\n                margin: 0 auto;\n        }\n\n        .form-group {\n                height: 80px;\n        }\n\n        .has-error {\n                .form-control {\n                        border-color: red;\n                }\n\n                .form-feedback {\n                        color: red;\n                        font-size: 0.9rem;\n                }\n        }\n }\n\n // Loading spinner\n .spinner {\n        width: 40px;\n        height: 40px;\n        position: relative;\n        margin: 100px auto;\n }\n\n .double-bounce1,\n .double-bounce2 {\n        width: 100%;\n        height: 100%;\n        border-radius: 50%;\n        background-color: #333;\n        opacity: 0.6;\n        position: absolute;\n        top: 0;\n        left: 0;\n        animation: sk-bounce 2 infinite ease-in-out;\n }\n .double-bounce2 {\n        animation-delay: -1;\n }\n @keyframes sk-bounce {\n        0%,\n        100% { transform: scale(0); }\n        50% { transform: scale(1); }\n }\n @keyframes sk-bounce {\n        0%,\n        100% { transform: scale(0); }\n        50% { transform: scale(1); }\n }\n```", "```php\n\"tslint\": \"./node_modules/.bin/tslint --project tsconfig.json || echo \\\"Ops: TSlint faild for some file(s).\\\"\",\n```", "```php\n npm install tslint-angular --save-dev\n```", "```php\n {\n        \"extends\": [\"../tslint.json\", \"../node_modules/tslint-angular\"],\n        \"rules\": {\n                \"angular-whitespace\": [true, \"check-interpolation\", \"check-semicolon\"],\n                \"no-unused-variable\": true,\n                \"no-unused-css\": true,\n                \"banana-in-box\": true,\n                \"use-view-encapsulation\": true,\n                \"contextual-life-cycle\": true,\n                \"directive-selector\": [\n                        true,\n                        \"attribute\",\n                        \"app\",\n                        \"camelCase\"\n                ],\n                \"component-selector\": [\n                        true,\n                        \"element\",\n                        \"app\",\n                        \"kebab-case\"\n                ]\n        }\n }\n```", "```php\n \"lint:dev\": \"npm run sasslint && npm run tslint\",\n```", "```php\nplugins: [\n  require('karma-jasmine'),\n  require('karma-chrome-launcher'),\n  require('karma-jasmine-html-reporter'),\n  require('karma-coverage-istanbul-reporter'),\n  require('@angular-devkit/build-angular/plugins/karma')\n],\n```", "```php\nbrowsers: ['Chrome'],\n```", "```php\nng test\n```", "```php\nExecuted 25 of 25 (18 FAILED) (1.469 secs / 0.924 secs)\n```", "```php\nAppHttpInterceptorService should be created FAILED\n                Error: StaticInjectorError(DynamicTestModule)[BuildersService -> HttpClient]:\n                StaticInjectorError(Platform: core)[BuildersService -> HttpClient]:\n                        NullInjectorError: No provider for HttpClient!\n```", "```php\nng test --watch \n```", "```php\nFailed: Template parse errors: 'app-nav' is not a known element:\n1\\. If 'app-nav' is an Angular component, then verify that it is part of this module.\n2\\. If 'app-nav' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message. (\"[ERROR ->]<app-nav></app-nav> <router-outlet class=\"main\"></router-outlet> <footer class=\"footer\">\n```", "```php\nimport { NavComponent } from './layout/nav/nav.component';\n@NgModule({\ndeclarations: [\n        AppComponent,\n        NavComponent\n],\n```", "```php\n import { TestBed, async, ComponentFixture } from '@angular/core/testing';\n import { RouterTestingModule } from '@angular/router/testing';\n import { NO_ERRORS_SCHEMA } from '@angular/core';\n\n // App imports\n import { AppComponent } from './app.component';\n\n describe('AppComponent', () => {\n        let component: AppComponent;\n        let fixture: ComponentFixture<AppComponent>;\n\n        beforeEach(async(() => {\n                TestBed.configureTestingModule({\n                imports: [\n                        RouterTestingModule\n                ],\n                declarations: [\n                        AppComponent\n                ],\n                schemas: [NO_ERRORS_SCHEMA]\n                }).compileComponents();\n        }));\n\n        beforeEach(() => {\n                fixture = TestBed.createComponent(AppComponent);\n                component = fixture.componentInstance;\n                fixture.detectChanges();\n        });\n\n        it('should create', async(() => {\n                expect(component).toBeTruthy();\n        }));\n\n        it('should render footer tag', async(() => {\n                const compiled = fixture.debugElement.nativeElement;\n                expect(compiled.querySelector('footer').textContent).toContain('2018 \u00a9 All Rights Reserved');\n        }));\n });\n```", "```php\n     TestBed.configureTestingModule({\n                imports: [\n                        RouterTestingModule\n                ],\n                declarations: [\n                        AppComponent\n                ],\n                schemas: [NO_ERRORS_SCHEMA]\n        }).compileComponents();\n```", "```php\nFailed: Template parse errors:\nCan't bind to 'routerLink' since it isn't a known property of 'a'.\n```", "```php\n import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n\n import { NavComponent } from './nav.component';\n import { RouterTestingModule } from '@angular/router/testing';\n import { HttpClientModule } from '@angular/common/http';\n\n describe('NavComponent', () => {\n        let component: NavComponent;\n        let fixture: ComponentFixture<NavComponent>;\n\n        beforeEach(async(() => {\n                TestBed.configureTestingModule({\n                imports: [\n                        RouterTestingModule,\n                        HttpClientModule\n                ],\n                declarations: [ NavComponent ]\n                })\n                .compileComponents();\n        }));\n\n        beforeEach(() => {\n                fixture = TestBed.createComponent(NavComponent);\n                component = fixture.componentInstance;\n                fixture.detectChanges();\n        });\n\n        it('should create', () => {\n                expect(component).toBeTruthy();\n        });\n });\n```", "```php\nimports: [ \n        RouterTestingModule\n        ...\n], \n```", "```php\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { TestBed, async, inject } from '@angular/core/testing';\nimport { HttpClient, HttpHandler } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n//  App imports\nimport { AuthGuard } from './auth.guard';\nimport { AuthService } from '../_services/auth.service';\n\ndescribe('AuthGuard Tests: ', () => {\nconst router = {\n        navigate: jasmine.createSpy('navigate')\n};\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule.withRoutes([\n                {path: 'bikes:id'}\n                ])\n        ],\n        providers: [AuthGuard, AuthService, HttpClient, HttpHandler, { provide: Router, useValue: router } ]\n        });\n}));\n\nit('should AuthGuartd to be defined', inject([AuthGuard], (guard: AuthGuard) => {\n        expect(guard).toBeTruthy();\n}));\n\nit('should AuthService to be defined', inject([AuthService], (auth: AuthService) => {\n        expect(auth).toBeTruthy();\n}));\n\n});\n```", "```php\n import { TestBed, inject } from '@angular/core/testing';\n import { AuthService } from './auth.service';\n import { HttpClientModule } from '@angular/common/http';\n import { RouterTestingModule } from '@angular/router/testing';\n describe('AuthService', () => {\n beforeEach(() => { \n         TestBed.configureTestingModule({ \n         imports: [ \n                 RouterTestingModule, \n                 HttpClientModule \n                 ], \n                 providers: [AuthService]\n                 }); \n }); it('should be created', inject([AuthService], \n (service: AuthService) => \n  { expect(service).toBeTruthy();\n })); \n});\n```", "```php\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { HttpClientModule } from '@angular/common/http';\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { FormsModule } from '@angular/forms';\n\n// App imports\nimport { LoginComponent } from './login.component';\nimport { AuthService } from '../_services/auth.service';\n\ndescribe('LoginComponent', () => {\nlet component: LoginComponent;\nlet fixture: ComponentFixture<LoginComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule,\n                FormsModule,\n                HttpClientModule\n        ],\n        declarations: [ LoginComponent ],\n        providers: [AuthService]\n        })\n        .compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(LoginComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', () => {\n        expect(component).toBeTruthy();\n});\n});\n```", "```php\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { NO_ERRORS_SCHEMA } from '@angular/core';\n\n// App imports\nimport { RegisterComponent } from './register.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\n\ndescribe('RegisterComponent', () => {\nlet component: RegisterComponent;\nlet fixture: ComponentFixture<RegisterComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule,\n                HttpClientModule,\n                FormsModule,\n                ReactiveFormsModule\n        ],\n        declarations: [ RegisterComponent ],\n        schemas: [NO_ERRORS_SCHEMA],\n        providers: [FormBuilder]\n        })\n        .compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(RegisterComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', () => {\n        expect(component).toBeTruthy();\n});\n});\n```", "```php\nimport { TestBed, inject } from '@angular/core/testing';\nimport { HttpClientModule } from '@angular/common/http';\n\n// App imports\nimport { BikesService } from './bikes.service';\nimport { HttpErrorHandler } from '../../../shared/_services/http-handle-error.service';\n\ndescribe('BikesService', () => {\nbeforeEach(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                HttpClientModule\n        ],\n        providers: [\n                BikesService,\n                HttpErrorHandler\n        ]\n        });\n});\n\nit('should be created', inject([BikesService], (service: BikesService) => {\n        expect(service).toBeTruthy();\n}));\n});\n```", "```php\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { NO_ERRORS_SCHEMA } from '@angular/core';\n\n// App imports\nimport { BikeDetailComponent } from './bike-detail.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpErrorHandler } from '../../../shared/_services/http-handle-error.service';\n\ndescribe('BikeDetailComponent', () => {\nlet component: BikeDetailComponent;\nlet fixture: ComponentFixture<BikeDetailComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule,\n                FormsModule,\n                HttpClientModule\n        ],\n        declarations: [\n                BikeDetailComponent\n        ],\n        schemas: [NO_ERRORS_SCHEMA],\n        providers: [HttpErrorHandler]\n        })\n        .compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(BikeDetailComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', () => {\n        expect(component).toBeTruthy();\n});\n});\n```", "```php\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { HttpClientModule } from '@angular/common/http';\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { NO_ERRORS_SCHEMA } from '@angular/core';\n\n// App imports\nimport { BikeListComponent } from './bike-list.component';\nimport { BikeSearchPipe } from '../_pipes/bike-search.pipe';\nimport { HttpErrorHandler } from './../../../shared/_services/http-handle-error.service';\n\ndescribe('BikeListComponent', () => {\nlet component: BikeListComponent;\nlet fixture: ComponentFixture<BikeListComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule,\n                HttpClientModule\n        ],\n        declarations: [\n                BikeListComponent,\n                BikeSearchPipe\n        ],\n        schemas: [NO_ERRORS_SCHEMA],\n        providers: [HttpErrorHandler]\n        })\n        .compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(BikeListComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', () => {\n        expect(component).toBeTruthy();\n});\n});\n```", "```php\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\n\n// App imports\nimport { BikesComponent } from './bikes.component';\n\ndescribe('BikesComponent', () => {\nlet component: BikesComponent;\nlet fixture: ComponentFixture<BikesComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule\n        ],\n        declarations: [\n                BikesComponent\n        ]\n        })\n        .compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(BikesComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', () => {\n        expect(component).toBeTruthy();\n});\n\n});\n```", "```php\nimport { HttpClientModule } from '@angular/common/http';\nimport { TestBed, inject } from '@angular/core/testing';\n\n// App imports\nimport { BuildersService } from './builders.service';\nimport { HttpErrorHandler } from './../../../shared/_services/http-handle-error.service';\n\ndescribe('BuildersService', () => {\nbeforeEach(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                HttpClientModule\n        ],\n        providers: [\n                BuildersService,\n                HttpErrorHandler\n        ]\n        });\n});\n\nit('should be created', inject([BuildersService], (service: BuildersService) => {\n        expect(service).toBeTruthy();\n}));\n});\n```", "```php\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { HttpClientModule } from '@angular/common/http';\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { BuilderDetailComponent } from './builder-detail.component';\nimport { HttpErrorHandler } from '../../../shared/_services/http-handle-error.service';\n\ndescribe('BuilderDetailComponent', () => {\nlet component: BuilderDetailComponent;\nlet fixture: ComponentFixture<BuilderDetailComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule,\n                HttpClientModule\n        ],\n        declarations: [\n                BuilderDetailComponent\n        ],\n        providers: [HttpErrorHandler]\n        })\n        .compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(BuilderDetailComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', () => {\n        expect(component).toBeTruthy();\n});\n});\n```", "```php\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { HttpClientModule } from '@angular/common/http';\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\n\n// App imports\nimport { BuilderListComponent } from './builder-list.component';\nimport { HttpErrorHandler } from '../../../shared/_services/http-handle-error.service';\n\ndescribe('BuilderListComponent', () => {\nlet component: BuilderListComponent;\nlet fixture: ComponentFixture<BuilderListComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule,\n                HttpClientModule\n        ],\n        declarations: [\n                BuilderListComponent\n        ],\n        providers: [HttpErrorHandler]\n        })\n        .compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(BuilderListComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', () => {\n        expect(component).toBeTruthy();\n});\n});\n```", "```php\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\n\n// App imports\nimport { BuildersComponent } from './builders.component';\n\ndescribe('BuildersComponent', () => {\nlet component: BuildersComponent;\nlet fixture: ComponentFixture<BuildersComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule\n        ],\n        declarations: [\n                BuildersComponent\n        ]\n        })\n        .compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(BuildersComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', () => {\n        expect(component).toBeTruthy();\n});\n\n});\n```", "```php\nimport { TestBed , async, ComponentFixture } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\n\n// App imports\nimport { HomeComponent } from './home.component';\n\ndescribe('HomeComponent', () => {\nlet component: HomeComponent;\nlet fixture: ComponentFixture<HomeComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule\n        ],\n        declarations: [\n                HomeComponent\n        ]\n        }).compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(HomeComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', () => {\n```", "```php\n        expect(component).toBeTruthy();\n});\n\n});\n```", "```php\nimport { TestBed, async, ComponentFixture } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { NO_ERRORS_SCHEMA } from '@angular/core';\n\n// App imports\nimport { AppComponent } from './app.component';\n\ndescribe('AppComponent', () => {\nlet component: AppComponent;\nlet fixture: ComponentFixture<AppComponent>;\n\nbeforeEach(async(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule\n        ],\n        declarations: [\n                AppComponent\n        ],\n        schemas: [NO_ERRORS_SCHEMA]\n        }).compileComponents();\n}));\n\nbeforeEach(() => {\n        fixture = TestBed.createComponent(AppComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n});\n\nit('should create', async(() => {\n        expect(component).toBeTruthy();\n}));\n});\n```", "```php\nimport { HttpClientModule } from '@angular/common/http';\nimport { TestBed, inject } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\n\n// App imports\nimport { AppHttpInterceptorService } from './app-http-interceptor.service';\n\ndescribe('AppHttpInterceptorService', () => {\nbeforeEach(() => {\n        TestBed.configureTestingModule({\n        imports: [\n                RouterTestingModule,\n                HttpClientModule\n        ],\n        providers: [AppHttpInterceptorService]\n        });\n});\n\nit('should be created', inject([AppHttpInterceptorService], (service: AppHttpInterceptorService) => {\n        expect(service).toBeTruthy();\n}));\n});\n```", "```php\nit('should create router-outlet', async(() => {\n const compiled = fixture.debugElement.nativeElement;\n expect(compiled.querySelector('router-outlet')).toBeDefined();\n }));\n```", "```php\nit('should AuthService to be defined', inject([AuthService], (auth: AuthService) => {\n expect(auth).toBeTruthy();\n }));\nit('should not allow user to pass', inject([AuthGuard],     (guard: AuthGuard) => {\nexpect(guard.canActivate(new ActivatedRouteSnapshot(), fakeSnapshot)).toBe(false);\n}));\n```", "```php\nit('should create router-outlet', async(() => {\n const compiled = fixture.debugElement.nativeElement;\n expect(compiled.querySelector('router-outlet')).toBeDefined();\n }));\n```", "```php\nit('should create router-outlet', async(() => {\n const compiled = fixture.debugElement.nativeElement;\n expect(compiled.querySelector('router-outlet')).toBeDefined();\n }));\n```", "```php\nit('should render title tag', async(() => {\n const compiled = fixture.debugElement.nativeElement;\n expect(compiled.querySelector('h1').textContent).toContain('Custom Bikes Garage');\n }));\n```", "```php\nit('should render footer tag', async(() => {\n const compiled = fixture.debugElement.nativeElement;\n expect(compiled.querySelector('footer').textContent).toContain('2018 \u00a9 All Rights Reserved');\n }));\n```", "```php\nExecuted 24 of 24 SUCCESS (2.695 secs / 2.398 secs)\n```", "```php\n import { AppPage } from './app.po';\n\n describe('workspace-project App', () => {\n        let page: AppPage;\n\n        beforeEach(() => {\n                page = new AppPage();\n        });\n\n        it('should display app title', () => {\n                page.navigateTo();\n                expect(page.getParagraphText()).toEqual('Custom Bikes Garage');\n        });\n });\n```", "```php\n npm run e2e\n```", "```php\nFROM nginx:alpine\n\nCOPY nginx.conf /etc/nginx/nginx.conf\n\nWORKDIR /usr/share/nginx/html\nCOPY dist/ .\n```", "```php\nworker_processes  1;\n\nevents {\n        worker_connections  1024;\n}\n\nhttp {\n        server {\n                listen 81;\n                server_name  localhost;\n\n                root   /usr/share/nginx/html;\n                index  index.html index.htm;\n                include /etc/nginx/mime.types;\n\n                gzip on;\n                gzip_min_length 1000;\n                gzip_proxied expired no-cache no-store private auth;\n                gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;\n\n                location / {\n                        try_files $uri $uri/ /index.html;\n                }\n        }\n}\n```", "```php\n\"build:docker\":\"npm run lint:dev && npm run test && npm run e2e && npm rum build && npm rum docker:image\",\n \"docker:image\":\"./_scripts/create-docker-image.sh\"\n```", "```php\n #!/bin/bash\n set -e\n # Docker command to create the front-end application\n docker image build -t angular-laravel-book .\n```", "```php\n\"outputPath\": \"dist\",\n```", "```php\nnpm run build:docker\n```", "```php\nappserver:\n  image: 'angular-laravel-book'\n  container_name: chapter-11-appserver\n  # Build the image if don't exist\n  build: './Client'\n  ports:\n    - 3000:81\n```", "```php\ndocker system prune -a\n```", "```php\n docker ps -a\n```", "```php\n docker images -a\n```", "```php\n docker-compose up -d\n```"]