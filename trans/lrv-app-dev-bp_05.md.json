["```php\n**php artisan migrate:make create_feeds_table --table=feeds --create**\n\n```", "```php\n<?php\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateFeedsTable extends Migration {\n\n  /**\n   * Run the migrations.\n   *\n   * @return void\n   */\n  public function up()\n  {\n    Schema::create('feeds', function(Blueprint $table)\n    {\n      $table->increments('id');\n      $table->enum('active', array('0', '1'));\n      $table->string('title,100)->default('');\n      $table->enum('category', array('News', 'Sports','Technology'));\n      $table->string('feed',1000)->default('');\n      $table->timestamps();\n    });\n  }\n\n  /**\n   * Reverse the migrations.\n   *\n   * @return void\n   */\n  public function down()\n  {\n    Schema::drop('feeds');\n  }\n\n}\n```", "```php\n**php artisan migrate**\n\n```", "```php\n<?php\nClass Feeds Extends Eloquent{\n    protected $table = 'feeds';\n    protected $fillable = array('feed', 'title', 'active','category');\n}\n```", "```php\n    **php artisan controller:make FeedsController**\n\n    ```", "```php\n    **//We defined a RESTful controller and all its via route directly**\n    **Route::controller('feeds', 'FeedsController');**\n\n    ```", "```php\n      //The method to show the form to add a new feed\n      public function getCreate() {\n        //We load a view directly and return it to be served\n        return View::make('create_feed');\n          }\n    ```", "```php\n    <!doctype html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>Save a new ATOM Feed to Database</title>\n    </head>\n    <body>\n      <h1>Save a new ATOM Feed to Database</h1>\n      @if(Session::has('message'))\n        <h2>{{Session::get('message')}}</h2>\n      @endif\n        {{Form::open(array('url' => 'feeds/create', 'method' => 'post'))}}\n        <h3>Feed Category</h3>\n      {{Form::select('category',array('News'=>'News','Sports'=>'Sports','Technology'=>'Technology'),Input::old('category'))}}\n      <h3>Title</h3>\n        {{Form::text('title',Input::old('title'))}}\n        <h3>Feed URL</h3>\n        {{Form::text('feed',Input::old('feed'))}}\n\n        <h3>Show on Site?</h3>\n    {{Form::select('active',array('1'=>'Yes','2'=>'No'),Input::old('active'))}}\n        {{Form::submit('Save!',array('style'=>'margin:20px 100% 0 0'))}}\n        {{Form::close()}}\n    </body>\n    </html>\n    ```", "```php\n    //Validation rules\n    public static $form_rules = array(\n      'feed'    => 'required|url|active_url',\n      'title'  => 'required'\n      'active'  => 'required|between:0,1',\n      'category'  => 'required| in:News,Sports,Technology'\n    );\n    ```", "```php\n    //Processing the form\n    public function postCreate(){\n\n    //Let's first run the validation with all provided input\n      $validation = Validator::make(Input::all(),Feeds::$form_rules);\n      //If the validation passes, we add the values to the database and return to the form \n      if($validation->passes()) {\n        //We try to insert a new row with Eloquent\n        $create = Feeds::create(array(\n          'feed'    => Input::get('feed'),\n          'title'  => Input::get('title'),\n          'active'  => Input::get('active'),\n          'category'  => Input::get('category')\n        ));\n\n        //We return to the form with success or error message due to state of the \n        if($create) {\n          return Redirect::to('feeds/create')\n            ->with('message','The feed added to the database successfully!');\n        } else {\n          return Redirect::to('feeds/create')\n            ->withInput()\n            ->with('message','The feed could not be added, please try again later!');\n        }\n      } else {\n        //If the validation does not pass, we return to the form with first error message as flash data\n        return Redirect::to('feeds/create')\n            ->withInput()\n            ->with('message',$validation->errors()->first());\n\n      }\n    }\n    ```", "```php\n    <?php namespace app\\lib\\Support;\n    class Str extends \\Illuminate\\Support\\Str {\n        //Our shiny extended codes will come here\n      }\n    ```", "```php\n    'Str'             => 'Illuminate\\Support\\Str',\n    ```", "```php\n    'Str'             => 'app\\lib\\Support\\Str',\n    ```", "```php\n    \"app/lib\",\n    \"app/lib/Support\"\n    ```", "```php\n    **php composer.phar dump-autoload**\n\n    ```", "```php\n    public static function parse_feed($url) {\n        //First, we get our well-formatted external feed\n        $feed = simplexml_load_file($url);\n        //if cannot be found, or a parse/syntax error occurs, we return a blank array\n        if(!count($feed)) {\n          return array();\n        } else {\n          //If found, we return the newest five <item>s in the <channel>\n          $out = array();\n          $items = $feed->channel->item;\n          for($i=0;$i<5;$i++) {\n            $out[] = $items[$i];\n          }\n          //and we return the output\n          return $out;\n        }\n      }\n    ```", "```php\n    Route::get('/', array('as'=>'index', 'uses' =>'FeedsController@getIndex'));\n    ```", "```php\n    public function getIndex(){\n      //First we get all the records that are active category by category:\n        $news_raw   = Feeds::whereActive(1)->whereCategory('News')->get();\n        $sports_raw  = Feeds::whereActive(1)->whereCategory('Sports')->get();\n        $technology_raw = Feeds::whereActive(1)->whereCategory('Technology')->get();\n\n      //Now we load our view file and send variables to the view\n      return View::make('index')\n        ->with('news',$news_raw)\n        ->with('sports',$sports_raw)\n        ->with('technology',$technology_raw);\n      }\n    ```", "```php\n    <!doctype html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>Your awesome news aggregation site</title>\n        <style type=\"text/css\">\n        body { font-family: Tahoma, Arial, sans-serif; }\n        h1, h2, h3, strong { color: #666; }\n        blockquote{ background: #bbb; border-radius: 3px; }\n        li { border: 2px solid #ccc; border-radius: 5px; list-style-type: none; margin-bottom: 10px }\n        a { color: #1B9BE0; }\n        </style>\n    </head>\n    <body>\n       <h1>Your awesome news aggregation site</h1>\n       <h2>Latest News</h2>\n        @if(count($news))\n            {{--We loop all news feed items --}}\n            @foreach($news as $each)\n                <h3>News from {{$each->title}}:</h3>\n                <ul>\n                {{-- for each feed item, we get and parse its feed elements --}}\n                <?php $feeds = Str::parse_feed($each->feed); ?>\n                @if(count($feeds))\n                    {{-- In a loop, we show all feed elements one by one --}}\n                    @foreach($feeds as $eachfeed)\n                        <li>\n                            <strong>{{$eachfeed->title}}</strong><br />\n                            <blockquote>{{Str::limit(strip_tags($eachfeed->description),250)}}</blockquote>\n                            <strong>Date: {{$eachfeed->pubDate}}</strong><br />\n                            <strong>Source: {{HTML::link($eachfeed->link,Str::limit($eachfeed->link,35))}}</strong>\n\n                        </li>\n                    @endforeach\n                @else\n                    <li>No news found for {{$each->title}}.</li>\n                @endif\n                </ul>\n            @endforeach\n        @else\n            <p>No News found :(</p>\n        @endif\n\n        <hr />\n\n        <h2>Latest Sports News</h2>\n        @if(count($sports))\n            {{--We loop all news feed items --}}\n            @foreach($sports as $each)\n                <h3>Sports News from {{$each->title}}:</h3>\n                <ul>\n                {{-- for each feed item, we get and parse its feed elements --}}\n                <?php $feeds = Str::parse_feed($each->feed); ?>\n                @if(count($feeds))\n                    {{-- In a loop, we show all feed elements one by one --}}\n                    @foreach($feeds as $eachfeed)\n                        <li>\n                            <strong>{{$eachfeed->title}}</strong><br />\n                            <blockquote>{{Str::limit(strip_tags($eachfeed->description),250)}}</blockquote>\n                            <strong>Date: {{$eachfeed->pubDate}}</strong><br />\n                            <strong>Source: {{HTML::link($eachfeed->link,Str::limit($eachfeed->link,35))}}</strong>\n                        </li>\n                    @endforeach\n                @else\n                    <li>No Sports News found for {{$each->title}}.</li>\n                @endif\n                </ul>\n            @endforeach\n        @else\n            <p>No Sports News found :(</p>\n        @endif\n\n        <hr />\n\n        <h2>Latest Technology News</h2>\n        @if(count($technology))\n           {{--We loop all news feed items --}}\n            @foreach($technology as $each)\n                <h3>Technology News from {{$each->title}}:</h3>\n                <ul>\n                {{-- for each feed item, we get and parse its feed elements --}}\n                <?php $feeds = Str::parse_feed($each->feed); ?>\n                @if(count($feeds))\n                    {{-- In a loop, we show all feed elements one by one --}}\n                    @foreach($feeds as $eachfeed)\n                        <li>\n                            <strong>{{$eachfeed->title}}</strong><br />\n                            <blockquote>{{Str::limit(strip_tags($eachfeed->description),250)}}</blockquote>\n                            <strong>Date: {{$eachfeed->pubDate}}</strong><br />\n                            <strong>Source: {{HTML::link($eachfeed->link,Str::limit($eachfeed->link,35))}}</strong>\n                        </li>\n                    @endforeach\n                @else\n                    <li>No Technology News found for {{$each->title}}.</li>\n                @endif\n                </ul>\n            @endforeach\n        @else\n            <p>No Technology News found :(</p>\n        @endif\n\n    </body>\n    </html>\n    ```"]