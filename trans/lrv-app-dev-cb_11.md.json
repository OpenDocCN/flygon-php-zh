["```php\n    \"require\": {\n    \"laravel/framework\": \"4.0.*\",\n    \"iron-io/iron_mq\": \"dev-master\"\n    }\n    ```", "```php\n    **php composer.phar update**\n\n    ```", "```php\n    Route::get('queueships', function() {\n    $ships = array(\n      array(\n        'name' => 'Galactica',\n        'show' => 'Battlestar Galactica'),\n        array(\n        'name' => 'Millennium Falcon',\n        'show' => 'Star Wars'),\n        array(\n        'name' => 'USS Prometheus',\n        'show' => 'Stargate SG-1')\n    );\n    $queue = Queue::push('Spaceship', array('ships' => \n    $ships));\n      return 'Ships are queued.';\n    });\n    ```", "```php\n    <?php\n\n    class Spaceship extends Eloquent{\n\n      protected $table = 'spaceships';\n\n      public function fire($job, $data)\n    {\n    // Could be added to database here!\n      Log::info('We can put this in the database: ' . print_r($data, TRUE));\n      $job->delete();\n    }\n    }\n    ```", "```php\n     **php artisan queue:listen**\n\n    ```", "```php\n    **git clone git@git.pagodabox.com:erratic-eladia.git pagodaapp**\n\n    ```", "```php\n    Route::get('cool', function()\n    {\n      return 'Pagoda Box is awesome!';\n    });\n    ```", "```php\n     **git commit \u2013am 'Added route'**\n     **git push origin master**\n\n    ```", "```php\n    \"require\": {\n      \"laravel/framework\": \"4.0.*\",\n      \"stripe/stripe-php\": \"dev-master\"\n    },\n    ```", "```php\n     **php composer.phar update**\n\n    ```", "```php\n    <?php\n\n    return array(\n      'key' => 'fakeKey-qWerTyuuIo4f5'\n    );\n    ```", "```php\n    Route::get('pay', function()\n    {\n      return View::make('pay');\n    });\n    ```", "```php\n    {{ Form::open(array('url' => 'pay', 'method' => 'post')) }}\n      Card Number: {{ Form::text('cc_number', \n        '4242424242424242') }}<br>\n\n      Expiration (month):\n        {{ Form::select('cc_exp_month', array(1 => '01', 2 => \n        '02', 3 => '03', 4 => '04', 5 => '05',6 => '06', 7 => \n        '07', 8 => '08', 9 => '09', 10 => '10', 11 \n        => '11', 12 => '12')) }}<br>\n\n      Expiration (year):\n        {{ Form::select('cc_exp_year', array(2013 => 2013,\n        2014 => 2014, 2015 => 2015, 2016 => 2016)) }}<br>\n\n      {{ Form::submit('Charge $37 to my card') }}\n      {{ Form::close() }}\n    ```", "```php\n    Route::post('pay', function()\n    {\n      Stripe::setApiKey(Config::get('stripe.key'));\n      $chargeCard = array(\n        'number' => Input::get('cc_number'),\n        'exp_month' => Input::get('cc_exp_month'),\n        'exp_year'  => Input::get('cc_exp_year')\n    );\n      $charge = Stripe_Charge::create(array('card' => \n        $chargeCard, 'amount' => 3700, 'currency' => 'usd'));\n\n    // Save returned info here\n      var_dump($charge);\n    });\n    ```", "```php\n    \"require\": {\n      \"laravel/framework\": \"4.0.*\",\n      \"geoip/geoip\": \"dev-master\"\n    },\n    ```", "```php\n     **php composer.phar update**\n\n    ```", "```php\n    <?php\n\n    return array(\n      'path' => realpath(\"path/to/GeoIP.dat\")\n    );\n    ```", "```php\n      Route::filter('geoip', function($route, $request, $value = NULL)\n    {\n      $ip = is_null($value) ? Request::getClientIp() : $value;\n      $gi = geoip_open(Config::get('geoip.path'), GEOIP_STANDARD);\n      $code = geoip_country_code_by_addr($gi, $ip);\n      return Redirect::to('geo/' . strtolower($code));\n    });\n    ```", "```php\n    Route::get('geo', array('before' => 'geoip:80.24.24.24', function()\n    {\n    return '';\n    }));\n    Route::get('geo/{country_code}', function($country_code)\n    {\n    return 'Welcome! Your country code is: ' . $country_code;\n    });\n    ```", "```php\n    \"autoload\": {\n        \"classmap\": [\n        \"app/commands\",\n        \"app/controllers\",\n        \"app/models\",\n        \"app/database/migrations\",\n        \"app/database/seeds\",\n        \"app/tests/TestCase.php\",\n        \"app/libraries\"\n    ]\n    },\n\n    ```", "```php\n     **php composer.phar dump-autoload**\n\n    ```", "```php\n    <?php\n\n    return array(\n      'key' => 'mykey12345abcde-us1',\n      'list' => 'q1w2e3r4t5'\n    );\n    ```", "```php\n    Route::get('lists', function()\n    {\n      $mc = new MCAPI(Config::get('mailchimp.key'));\n      $lists = $mc->lists();\n\n      if($mc->errorCode) {\n        echo 'Error loading list: ' . $mc->errorMessage;\n      } else {\n        echo '<h1>Lists and IDs</h1><h3>Total lists: '\n        $lists['total'] . '</h3>';\n      foreach($lists['data'] as $list) {\n       echo '<strong>' . $list['name'] . ':</strong> ' .\n       $list['id'] . '<br>';\n    }\n    }\n    });\n\n    ```", "```php\n    Route::get('subscribe', function()\n    {\n      return View::make('subscribe');\n    });\n    ```", "```php\n      {{ Form::open() }}\n      First Name: {{ Form::text('fname') }} <br>\n      Last Name: {{ Form::text('lname') }} <br>\n      Email: {{ Form::text('email') }} <br>\n      {{ Form::submit() }}\n      {{ Form::close() }}\n    ```", "```php\n    Route::post('subscribe', function()\n    {\n      $mc = new MCAPI(Config::get('mailchimp.key'));\n\n      $merge_vars = array('FNAME' => Input::get('fname'), 'LNAME' => Input::get('lname'));\n      $ret = $mc->listSubscribe(Config::get('mailchimp.list'), Input::get('email'), $merge_vars);\n\n    if ($mc->errorCode){\n      return 'There was an error: ' . $mc->errorMessage;\n    } else {\n      return 'Thank you for your subscription!';\n    }\n    });\n    ```", "```php\n    \"require\": {\n      \"laravel/framework\": \"4.0.*\",\n      \"aws/aws-sdk-php-laravel\": \"dev-master\"\n    },\n    ```", "```php\n     **php composer.phar update**\n\n    ```", "```php\n    <?php\n\n    return array(\n      'key'    => 'MYKEY12345',\n      'secret' => 'aLongS3cretK3y1234abcdef',\n      'region' => '',\n    );\n    ```", "```php\n      'Aws\\Laravel\\AwsServiceProvider',\n    ```", "```php\n      'AWS' => 'Aws\\Laravel\\AwsFacade',\n    ```", "```php\n    Route::get('buckets', function()\n    {\n      $list = AWS::get('s3')->listBuckets();\n        foreach ($list['Buckets'] as $bucket) {\n        echo $bucket['Name'] . '<br>';\n    }\n    });\n\n    ```", "```php\n    Route::get('cloud', function()\n    {\n      return View::make('cloud');\n    });\n    ```", "```php\n      {{ Form::open(array('files' => true)) }}\n      Image: {{ Form::file('my_image') }} <br>\n      {{ Form::submit() }}\n      {{ Form::close() }}\n    ```", "```php\n    Route::post('cloud', function()\n    {\n      $my_image = Input::file('my_image');\n      $s3_name = date('Ymdhis') . '-' . $my_image\n        >getClientOriginalName();\n      $path = $my_image->getRealPath();\n\n      $s3 = AWS::get('s3');\n      $obj = array(\n        'Bucket'     => 'laravelcookbook',\n        'Key'        => $s3_name,\n        'SourceFile' => $path,\n        'ACL'        => 'public-read',\n    );\n\n      if ($s3->putObject($obj)) {\n      return\n        Redirect::to('https://s3.amazonaws.com/laravelcookbook/\n        ' . $s3_name);\n    } else {\n      return 'There was an S3 error';\n    }\n    });\n\n    ```"]