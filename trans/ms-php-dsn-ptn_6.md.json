["```php\n**echo 'deb http://www.rabbitmq.com/debian/ testing main' | sudo tee /etc/apt/sources.list.d/rabbitmq.list**\n\n```", "```php\n**wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add -**\n\n```", "```php\n**rabbitmq-plugins enable rabbitmq_management**\n\n```", "```php\n**rabbitmqctl add_user junade insecurepassword**\n\n```", "```php\n**rabbitmqctl set_user_tags junade administrator**\n**rabbitmqctl set_permissions -p / junade \".*\" \".*\" \".*\"**\n\n```", "```php\n{ \n  \"require\": { \n    \"php-amqplib/php-amqplib\": \"2.5.*\" \n  } \n} \n\n```", "```php\n<?php \n\nrequire_once(__DIR__ . '/vendor/autoload.php'); \nuse PhpAmqpLib\\Connection\\AMQPStreamConnection; \nuse PhpAmqpLib\\Message\\AMQPMessage; \n\n$connection = new AMQPStreamConnection('localhost', 5672, 'junade', 'insecurepassword'); \n$channel    = $connection->channel(); \n\n$channel->queue_declare( \n  'sayHello',     // queue name \n  false,          // passive \n  true,           // durable \n  false,          // exclusive \n  false           // autodelete \n); \n\n$msg = new AMQPMessage(\"Hello world!\"); \n\n$channel->basic_publish( \n  $msg,           // message \n  '',             // exchange \n  'sayHello'      // routing key \n); \n\n$channel->close(); \n$connection->close(); \n\necho \"Sent hello world message.\" . PHP_EOL; \n\n```", "```php\n**php send.php**\n\n```", "```php\n<?php \n\nrequire_once(__DIR__ . '/vendor/autoload.php'); \nuse PhpAmqpLib\\Connection\\AMQPStreamConnection; \nuse PhpAmqpLib\\Message\\AMQPMessage; \n\n$connection = new AMQPStreamConnection('localhost', 5672, 'junade', 'insecurepassword'); \n$channel    = $connection->channel(); \n\n$channel->queue_declare( \n  'sayHello',     // queue name \n  false,          // passive \n  false,          // durable \n  false,          // exclusive \n  false           // autodelete \n); \n\n$callback = function ($msg) { \n  echo \"Received: \" . $msg->body . PHP_EOL; \n}; \n\n$channel->basic_consume( \n  'sayHello',                     // queue \n  '',                             // consumer tag \n  false,                          // no local \n  true,                           // no ack \n  false,                          // exclusive \n  false,                          // no wait \n  $callback                       // callback \n); \n\nwhile (count($channel->callbacks)) { \n  $channel->wait(); \n} \n\n```", "```php\n<?php \n\nrequire_once(__DIR__ . '/vendor/autoload.php'); \nuse PhpAmqpLib\\Connection\\AMQPStreamConnection; \nuse PhpAmqpLib\\Message\\AMQPMessage; \n\n$connection = new AMQPStreamConnection('localhost', 5672, 'junade', 'insecurepassword'); \n$channel    = $connection->channel(); \n\n$channel->exchange_declare( \n  'helloHello',   // exchange \n  'fanout',       // exchange type \n  false,          // passive \n  false,          // durable \n  false           // auto-delete \n); \n\n$msg = new AMQPMessage(\"Hello world!\"); \n\n$channel->basic_publish( \n  $msg,           // message \n  'helloHello'    // exchange \n); \n\n$channel->close(); \n$connection->close(); \n\necho \"Sent hello world message.\" . PHP_EOL; \n\n```", "```php\n<?php \n\nrequire_once(__DIR__ . '/vendor/autoload.php'); \nuse PhpAmqpLib\\Connection\\AMQPStreamConnection; \nuse PhpAmqpLib\\Message\\AMQPMessage; \n\n$connection = new AMQPStreamConnection('localhost', 5672, 'junade', 'insecurepassword'); \n$channel    = $connection->channel(); \n\n$channel->exchange_declare( \n  'helloHello',   // exchange \n  'fanout',       // exchange type \n  false,          // passive \n  false,          // durable \n  false           // auto-delete \n); \n\n$callback = function ($msg) { \n  echo \"Received: \" . $msg->body . PHP_EOL; \n}; \n\nlist($queueName, ,) = $channel->queue_declare(\"\", false, false, true, false); \n\n$channel->queue_bind($queueName, 'helloHello'); \n\n$channel->basic_consume($queueName, '', false, true, false, false, $callback); \n\nwhile (count($channel->callbacks)) { \n  $channel->wait(); \n} \n\n$channel->close(); \n$connection->close(); \n\n```"]