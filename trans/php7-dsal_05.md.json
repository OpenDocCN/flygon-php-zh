["```php\nfunction factorial(int $n): int {\n\n   if ($n == 0)\n\n    return 1;\n\n   return $n * factorial($n - 1);\n\n}\n\n```", "```php\nfunction factorial(int $n): int { \n\n    $result = 1; \n\n    for ($i = $n; $i > 0; $i--) {\n\n      $result *= $i; \n\n    } \n\n    return $result; \n\n}\n\n```", "```php\nfunction fibonacci(int $n): int { \n\n    if ($n == 0) { \n\n    return 1; \n\n    } else if ($n == 1) { \n\n    return 1; \n\n    } else { \n\n    return fibonacci($n - 1) + fibonacci($n - 2); \n\n    } \n\n}\n\n```", "```php\nfunction gcd(int $a, int $b): int { \n\n    if ($b == 0) { \n\n     return $a; \n\n    } else { \n\n     return gcd($b, $a % $b); \n\n    } \n\n}\n\n```", "```php\nCREATE TABLE `categories` ( \n\n  `id` int(11) NOT NULL, \n\n  `categoryName` varchar(100) NOT NULL, \n\n  `parentCategory` int(11) DEFAULT 0, \n\n  `sortInd` int(11) NOT NULL \n\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n```", "```php\n$dsn = \"mysql:host=127.0.0.1;port=3306;dbname=packt;\"; \n\n$username = \"root\"; \n\n$password = \"\"; \n\n$dbh = new PDO($dsn, $username, $password); \n\n$result = $dbh->query(\"Select * from categories order by parentCategory asc, sortInd asc\", PDO::FETCH_OBJ); \n\n$categories = []; \n\nforeach($result as $row) { \n\n    $categories[$row->parentCategory][] = $row;\n\n}\n\n```", "```php\nfunction showCategoryTree(Array $categories, int $n) {\n\n    if(isset($categories[$n])) { \n\n      foreach($categories[$n] as $category) {        \n\n          echo str_repeat(\"-\", $n).\"\".$category->categoryName.\"\\n\"; \n\n          showCategoryTree($categories, $category->id);          \n\n      }\n\n    }\n\n    return;\n\n}\n\n```", "```php\nshowCategoryTree($categories, 0);\n\n```", "```php\nFirst\n\n-Second\n\n--Tenth\n\n-Third\n\n---Fourth\n\n----fifth\n\n-----Sixth\n\n------seventh\n\n-------Eighth\n\n-Nineth\n\n```", "```php\n$sql = \"Select * from comments where postID = :postID order by parentID asc, datetime asc\"; \n\n$stmt = $dbh->prepare($sql, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY)); \n\n$stmt->setFetchMode(PDO::FETCH_OBJ); \n\n$stmt->execute(array(':postID' => 1)); \n\n$result = $stmt->fetchAll(); \n\n$comments = []; \n\nforeach ($result as $row) { \n\n    $comments[$row->parentID][] = $row;\n\n}\n\n```", "```php\nfunction displayComment(Array $comments, int $n) { \n\n   if (isset($comments[$n])) { \n\n      $str = \"<ul>\"; \n\n      foreach ($comments[$n] as $comment) { \n\n          $str .= \"<li><div class='comment'><span class='pic'>\n\n            {$comment->username}</span>\"; \n\n          $str .= \"<span class='datetime'>{$comment->datetime}</span>\"; \n\n          $str .= \"<span class='commenttext'>\" . $comment->comment . \"\n\n            </span></div>\"; \n\n          $str .= displayComment($comments, $comment->id); \n\n          $str .= \"</li>\"; \n\n       } \n\n      $str .= \"</ul>\"; \n\n      return $str; \n\n    } \n\n    return \"\"; \n\n} \n\necho displayComment($comments, 0); \n\n```", "```php\n  ul { \n\n      list-style: none; \n\n      clear: both; \n\n  }\n\n  li ul { \n\n      margin: 0px 0px 0px 50px; \n\n  } \n\n  .pic { \n\n      display: block; \n\n      width: 50px; \n\n      height: 50px; \n\n      float: left; \n\n      color: #000; \n\n      background: #ADDFEE; \n\n      padding: 15px 10px; \n\n      text-align: center; \n\n      margin-right: 20px; \n\n  }\n\n  .comment { \n\n      float: left; \n\n      clear: both; \n\n      margin: 20px; \n\n      width: 500px; \n\n  }\n\n  .datetime { \n\n      clear: right; \n\n      width: 400px; \n\n      margin-bottom: 10px; \n\n      float: left; \n\n  }\n\n```", "```php\nfunction showFiles(string $dirName, Array &$allFiles = []) { \n\n    $files = scandir($dirName); \n\n    foreach ($files as $key => $value) { \n\n      $path = realpath($dirName . DIRECTORY_SEPARATOR . $value); \n\n      if (!is_dir($path)) { \n\n          $allFiles[] = $path; \n\n      } else if ($value != \".\" && $value != \"..\") { \n\n          showFiles($path, $allFiles); \n\n          $allFiles[] = $path; \n\n      } \n\n   } \n\n    return; \n\n} \n\n$files = []; \n\nshowFiles(\".\", $files);\n\n```", "```php\nforeach($files as $file) {\n\n    echo $file.\"\\n\";\n\n}\n\n```", "```php\n/home/mizan/packtbook/chapter_1_1.php\n\n/home/mizan/packtbook/chapter_1_2.php\n\n/home/mizan/packtbook/chapter_2_1.php\n\n/home/mizan/packtbook/chapter_2_2.php\n\n/home/mizan/packtbook/chapter_3_.php\n\n/home/mizan/packtbook/chapter_3_1.php\n\n/home/mizan/packtbook/chapter_3_2.php\n\n/home/mizan/packtbook/chapter_3_4.php\n\n/home/mizan/packtbook/chapter_4_1.php\n\n/home/mizan/packtbook/chapter_4_10.php\n\n/home/mizan/packtbook/chapter_4_11.php\n\n/home/mizan/packtbook/chapter_4_2.php\n\n/home/mizan/packtbook/chapter_4_3.php\n\n/home/mizan/packtbook/chapter_4_4.php\n\n/home/mizan/packtbook/chapter_4_5.php\n\n/home/mizan/packtbook/chapter_4_6.php\n\n/home/mizan/packtbook/chapter_4_7.php\n\n/home/mizan/packtbook/chapter_4_8.php\n\n/home/mizan/packtbook/chapter_4_9.php\n\n/home/mizan/packtbook/chapter_5_1.php\n\n/home/mizan/packtbook/chapter_5_2.php\n\n/home/mizan/packtbook/chapter_5_3.php\n\n/home/mizan/packtbook/chapter_5_4.php\n\n/home/mizan/packtbook/chapter_5_5.php\n\n/home/mizan/packtbook/chapter_5_6.php\n\n/home/mizan/packtbook/chapter_5_7.php\n\n/home/mizan/packtbook/chapter_5_8.php\n\n/home/mizan/packtbook/chapter_5_9.php\n\n```", "```php\nfunction factorial(int $n): int { \n\n    if ($n == 0) \n\n    return 1; \n\n    return $n * factorial($n - 1); \n\n} \n\n```", "```php\nfunction maxDepth() {\n\n    static $i = 0;\n\n    print ++$i . \"\\n\";\n\n    maxDepth();\n\n}\n\nmaxDepth();\n\n```", "```php\n$path = realpath('.'); \n\n$files = new RecursiveIteratorIterator( \n\n   new RecursiveDirectoryIterator($path), RecursiveIteratorIterator::SELF_FIRST); \n\nforeach ($files as $name => $file) { \n\n    echo \"$name\\n\"; \n\n}\n\n```", "```php\n$teams = array( \n\n    'Popular Football Teams', \n\n    array( \n\n  'La Lega', \n\n  array('Real Madrid', 'FC Barcelona', 'Athletico Madrid', 'Real  \n\n    Betis', 'Osasuna') \n\n    ), \n\n    array( \n\n  'English Premier League', \n\n  array('Manchester United', 'Liverpool', 'Manchester City', 'Arsenal',   \n\n    'Chelsea') \n\n    ) \n\n); \n\n$tree = new RecursiveTreeIterator( \n\n  new RecursiveArrayIterator($teams), null, null, RecursiveIteratorIterator::LEAVES_ONLY \n\n); \n\nforeach ($tree as $leaf) \n\n    echo $leaf . PHP_EOL;\n\n```", "```php\n|-Popular Football Teams\n\n| |-La Lega\n\n|   |-Real Madrid\n\n|   |-FC Barcelona\n\n|   |-Athletico Madrid\n\n|   |-Real Betis\n\n|   \\-Osasuna\n\n |-English Premier League\n\n |-Manchester United\n\n |-Liverpool\n\n |-Manchester City\n\n |-Arsenal\n\n \\-Chelsea\n\n```", "```php\nfunction array_sum_recursive(Array $array) { \n\n    $sum = 0; \n\n    array_walk_recursive($array, function($v) use (&$sum) { \n\n      $sum += $v; \n\n    }); \n\n    return $sum; \n\n} \n\n$arr =  \n\n[1, 2, 3, 4, 5, [6, 7, [8, 9, 10, [11, 12, 13, [14, 15, 16]]]]]; \n\necho array_sum_recursive($arr); \n\n```"]