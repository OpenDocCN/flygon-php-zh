["```php\n<?php\n\n// side effect: change ini settings\nini_set('error_reporting', E_ALL);\n\n// side effect: loads a file\ninclude 'authenticate.php';\n\n// side effect: generates output\necho \"<h1>Hello</h1>\";\n\n// declaration\nfunction log($msg)\n{\n  // body\n}\n\n```", "```php\n<?php\n\n// declaration\nfunction log()\n{\n  // body\n}\n\n// conditional declaration is *not* a side effect\nif (!function_exists('hello')) {\n function hello($msg)\n {\n   // body\n }\n}\n\n```", "```php\n<?php\n\nclass Foggyline_User_Model\n{\n  // body\n}\n\n```", "```php\n<?php\n\nnamespace Foggyline\\Model;\n\nclass User \n{\n  // body\n}\n\n```", "```php\n<?php\n\nclass xmlParser \n{\n  // body\n}\n\nclass XML_Parser \n{\n  // body\n}\n\n```", "```php\n<?php\n\nclass XmlParser \n{\n  // body\n}\n\nclass XMLParser \n{\n  // body\n}\n\n```", "```php\n<?php\n\nclass XmlParser \n{\n  public const APPVERSION = 1.2;\n  private const app_package = 'net.foggyline.xml.parser';\n  protected const appLicence = 'OSL';\n}\n\n```", "```php\n<?php\n\nclass XmlParser \n{\n  public const APP_VERSION = 1.2;\n  private const APP_PACKAGE = 'net.foggyline.xml.parser';\n  protected const APP_LICENCE = 'OSL';\n}\n\n```", "```php\n<?php\n\nclass User \n{\n  function say_hello($name) { /* \u2026 */ }\n  function Pay($salary) { /* \u2026 */ }\n  function RegisterBankAccount($account) { /* \u2026 */ }\n}\n\n```", "```php\n<?php\n\nclass User \n{\n  function sayHello($name) { /* \u2026 */ }\n  function pay($salary) { /* \u2026 */ }\n  function registerBankAccount($account) { /* \u2026 */ }\n}\n\n```", "```php\n<?php\nnamespace Foggyline\\User\\Model;\nuse Foggyline\\User\\Model\\Director;\n\nclass Employee \n{\n}\n\n```", "```php\n<?php\nnamespace Foggyline\\User\\Model;\nuse Foggyline\\User\\Model\\Director;\n\nclass Employee \n{\n}\n\n```", "```php\n<?php\n\nclass Employee {\n  // body\n}\n\n```", "```php\n<?php\n\nclass Employee \n{\n  // body\n}\n\n```", "```php\n<?php\n\nclass Employee {\n  public function pay() {\n    // body\n  }\n}\n\n```", "```php\n<?php\n\nclass Employee \n{\n  public function pay()\n  {\n    // body\n  }\n}\n\n```", "```php\n<?php\n\nabstract class User\n{\n  public function func1()\n  {\n    // body\n  }\n\n  private function func2()\n  {\n    // body\n  }\n\n  protected function func3()\n  {\n    // body\n  }\n\n  public static abstract function func4();\n\n  static public final function func5()\n  {\n    // body\n  }\n}\n\nclass Employee extends User\n{\n  public function func4()\n  {\n    // body\n  }\n}\n\n```", "```php\n<?php\n\nabstract class User\n{\n  public function func1()\n  {\n    // body\n  }\n\n  private function func2()\n  {\n    // body\n  }\n\n  protected function func3()\n  {\n    // body\n  }\n\n  abstract public static function func4();\n\n  final public static function func5()\n  {\n    // body\n  }\n}\n\nclass Employee extends User\n{\n  public static function func4()\n  {\n    // body\n  }\n}\n\n```", "```php\n<?php\n\nclass Logger\n{\n  public function log($msg, $code)\n  {\n    if($code >= 500) {\n      // logic\n    }\n  }\n}\n\n```", "```php\n<?php\n\nclass Logger\n{\n  public function log($msg, $code)\n  {\n    if ($code >= 500)\n    {\n\n    }\n  }\n}\n\n```", "```php\n<?php\n\nclass Logger\n{\n  public function log($msg, $code)\n  {\n    if ($code === 500)\n    {\n      // logic\n    }\n    elseif ($code === 600)\n    {\n      // logic\n    }\n    elseif ($code === 700)\n    {\n      // logic\n    }\n    else\n    {\n      // logic\n    }\n  }\n}\n\n```", "```php\n<?php\n\nclass Logger\n{\n  public function log($msg, $code)\n  {\n    if ($code === 500) {\n      // logic\n    } elseif ($code === 600) {\n      // logic\n    } elseif ($code === 700) {\n      // logic\n    } else {\n      // logic\n    }\n  }\n}\n\n```", "```php\n<?php\n\ninterface LoggerInterface\n{\n  public function emergency($message, array $context = array());\n  public function alert($message, array $context = array());\n  public function critical($message, array $context = array());\n  public function error($message, array $context = array());\n  public function warning($message, array $context = array());\n  public function notice($message, array $context = array());\n  public function info($message, array $context = array());\n  public function debug($message, array $context = array());\n  public function log($level, $message, array $context = array());\n}\n\n```", "```php\n<?php\n\n//...\n$message = \"User {email} created, with role {role}.\";\n//...\n$context = array('email' => \u2018john@mail.com', \u2018role\u2019 => 'CUSTOMER');\n//...\n\n```", "```php\n\\<NamespaceName>(\\<SubNamespaceNames>)*\\<ClassName>\n\n```", "```php\n<?php\n\nnamespace Magento\\Newsletter\\Model;\n\nuse Magento\\Customer\\Api\\AccountManagementInterface;\nuse Magento\\Customer\\Api\\CustomerRepositoryInterface;\n\nclass Subscriber extends \\Magento\\Framework\\Model\\AbstractModel\n{\n  // ...\n\n  public function __construct(\n    \\Magento\\Framework\\Model\\Context $context,\n    \\Magento\\Framework\\Registry $registry,\n    \\Magento\\Newsletter\\Helper\\Data $newsletterData,\n    \\Magento\\Framework\\App\\Config\\ScopeConfigInterface $scopeConfig,\n    \\Magento\\Framework\\Mail\\Template\\TransportBuilder\n      $transportBuilder,\n    \\Magento\\Store\\Model\\StoreManagerInterface $storeManager,\n    \\Magento\\Customer\\Model\\Session $customerSession,\n    CustomerRepositoryInterface $customerRepository,\n      AccountManagementInterface $customerAccountManagement,\n    \\Magento\\Framework\\Translate\\Inline\\StateInterface\n      $inlineTranslation,\n    \\Magento\\Framework\\Model\\ResourceModel\\AbstractResource\n      $resource = null,\n    \\Magento\\Framework\\Data\\Collection\\AbstractDb\n      $resourceCollection = null,\n    array $data = []\n  ) {\n   // ...\n  }\n\n  // ...\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Cache;\n\ninterface CacheItemInterface\n{\n  public function getKey();\n  public function get();\n  public function isHit();\n  public function set($value);\n  public function expiresAt($expiration);\n  public function expiresAfter($time);\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Cache;\n\ninterface CacheItemPoolInterface\n{\n  public function getItem($key);\n  public function getItems(array $keys = array());\n  public function hasItem($key);\n  public function clear();\n  public function deleteItem($key);\n  public function deleteItems(array $keys);\n  public function save(CacheItemInterface $item);\n  public function saveDeferred(CacheItemInterface $item);\n  public function commit();\n}\n\n```", "```php\n<?php   namespace Psr\\Http\\Message;   interface MessageInterface {\n  public function getProtocolVersion();\n  public function withProtocolVersion($version);\n  public function getHeaders();\n  public function hasHeader($name);\n  public function getHeader($name);\n  public function getHeaderLine($name);\n  public function withHeader($name, $value);\n  public function withAddedHeader($name, $value);\n  public function withoutHeader($name);\n  public function getBody();\n  public function withBody(StreamInterface $body); }\n\n```", "```php\n<?php namespace Psr\\Http\\Message; interface RequestInterface extends MessageInterface {\n  public function getRequestTarget();\n  public function withRequestTarget($requestTarget);\n  public function getMethod();\n  public function withMethod($method);\n  public function getUri();\n  public function withUri(UriInterface $uri, $preserveHost = false); }\n\n```", "```php\n<?php\n\nnamespace Psr\\Http\\Message;\n\ninterface ServerRequestInterface extends RequestInterface\n{\n  public function getServerParams();\n  public function getCookieParams();\n  public function withCookieParams(array $cookies);\n  public function getQueryParams();\n  public function withQueryParams(array $query);\n  public function getUploadedFiles();\n  public function withUploadedFiles(array $uploadedFiles);\n  public function getParsedBody();\n  public function withParsedBody($data);\n  public function getAttributes();\n  public function getAttribute($name, $default = null);\n  public function withAttribute($name, $value);\n  public function withoutAttribute($name);\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Http\\Message;\n\ninterface ResponseInterface extends MessageInterface\n{\n  public function getStatusCode();\n  public function withStatus($code, $reasonPhrase = '');\n  public function getReasonPhrase();\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Http\\Message;\n\ninterface StreamInterface\n{\n  public function __toString();\n  public function close();\n  public function detach();\n  public function getSize();\n  public function tell();\n  public function eof();\n  public function isSeekable();\n  public function seek($offset, $whence = SEEK_SET);\n  public function rewind();\n  public function isWritable();\n  public function write($string);\n  public function isReadable();\n  public function read($length);\n  public function getContents();\n  public function getMetadata($key = null);\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Http\\Message;\n\ninterface UriInterface\n{\n  public function getScheme();\n  public function getAuthority();\n  public function getUserInfo();\n  public function getHost();\n  public function getPort();\n  public function getPath();\n  public function getQuery();\n  public function getFragment();\n  public function withScheme($scheme);\n  public function withUserInfo($user, $password = null);\n  public function withHost($host);\n  public function withPort($port);\n  public function withPath($path);\n  public function withQuery($query);\n  public function withFragment($fragment);\n  public function __toString();\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Http\\Message;\n\ninterface UploadedFileInterface\n{\n  public function getStream();\n  public function moveTo($targetPath);\n  public function getSize();\n  public function getError();\n  public function getClientFilename();\n  public function getClientMediaType();\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Link;\n\ninterface LinkInterface\n{\n  public function getHref();\n  public function isTemplated();\n  public function getRels();\n  public function getAttributes();\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Link;\n\ninterface LinkProviderInterface\n{\n  public function getLinks();\n  public function getLinksByRel($rel);\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Link;\n\ninterface EvolvableLinkInterface extends LinkInterface\n{\n  public function withHref($href);\n  public function withRel($rel);\n  public function withoutRel($rel);\n  public function withAttribute($attribute, $value);\n  public function withoutAttribute($attribute);\n}\n\n```", "```php\n<?php\n\nnamespace Psr\\Link;\n\ninterface EvolvableLinkProviderInterface extends LinkProviderInterface\n{\n  public function withLink(LinkInterface $link);\n  public function withoutLink(LinkInterface $link);\n}\n\n```"]