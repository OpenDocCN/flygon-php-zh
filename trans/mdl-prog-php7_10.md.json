["```php\nnamespace Foggyline\\SalesBundle\\Interface;\n\ninterface Shipment\n{\n  function getInfo($street, $city, $country, $postcode, $amount, $qty);\n  function process($street, $city, $country, $postcode, $amount, $qty);\n}\n```", "```php\n**php bin/console generate:bundle --namespace=Foggyline/ShipmentBundle**\n\n```", "```php\nnew Foggyline\\PaymentBundle\\FoggylineShipmentBundle(),\n```", "```php\nfoggyline_payment:\n  resource: \"@FoggylineShipmentBundle/Resources/config/routing.xml\"\n  prefix:   /\n```", "```php\n<service id=\"foggyline_shipment.dynamicrate_shipment\"class=\"Foggyline\\ShipmentBundle\\Service\\DynamicRateShipment\">\n  <argument type=\"service\" id=\"router\"/>\n  <tag name=\"shipment_method\"/>\n</service>\n```", "```php\nnamespace Foggyline\\ShipmentBundle\\Service;\nclass FlatRateShipment\n{\n  private $router;\n\n  public function __construct(\n    \\Symfony\\Bundle\\FrameworkBundle\\Routing\\Router $router\n  )\n  {\n    $this->router = $router;\n  }\n\n  public function getInfo($street, $city, $country, $postcode, $amount, $qty)\n  {\n    return array(\n      'shipment' => array(\n        'title' =>'Foggyline FlatRate Shipment',\n        'code' =>'flat_rate',\n        'delivery_options' => array(\n        'title' =>'Fixed',\n        'code' =>'fixed',\n        'price' => 9.99\n      ),\n      'url_process' => $this->router->generate('foggyline_shipment_flat_rate_process'),\n    )\n  ;\n  }\n}\n```", "```php\n<route id=\"foggyline_shipment_flat_rate_process\"path=\"/flat_rate/process\">\n  <default key=\"_controller\">FoggylineShipmentBundle:FlatRate:process\n  </default>\n</route>\n```", "```php\nnamespace Foggyline\\ShipmentBundle\\Controller;\n\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\n\nclass FlatRateController extends Controller\n{\n  public function processAction(Request $request)\n  {\n    // Simulating some transaction id, if any\n    $transaction = md5(time() . uniqid());\n\n    return new JsonResponse(array(\n      'success' => $transaction\n    ));\n  }\n}\n```", "```php\n<service id=\"foggyline_shipment.dynamicrate_shipment\"class=\"Foggyline\\ShipmentBundle\\Service\\DynamicRateShipment\">\n  <argument type=\"service\" id=\"router\"/>\n  <tag name=\"shipment_method\"/>\n</service>\n```", "```php\nnamespace Foggyline\\ShipmentBundle\\Service;\n\nclass DynamicRateShipment\n{\n  private $router;\n\n  public function __construct(\n    \\Symfony\\Bundle\\FrameworkBundle\\Routing\\Router $router\n  )\n  {\n    $this->router = $router;\n  }\n\n  public function getInfo($street, $city, $country, $postcode, $amount, $qty)\n  {\n    return array(\n      'shipment' => array(\n        'title' =>'Foggyline DynamicRate Shipment',\n        'code' =>'dynamic_rate_shipment',\n        'delivery_options' => $this->getDeliveryOptions($street, $city, $country, $postcode, $amount, $qty),\n        'url_process' => $this->router->generate('foggyline_shipment_dynamic_rate_process'),\n      )\n    );\n  }\n\n  public function getDeliveryOptions($street, $city, $country, $postcode, $amount, $qty)\n  {\n    // Imagine we are hitting the API with: $street, $city, $country, $postcode, $amount, $qty\n    return array(\n      array(\n        'title' =>'Same day delivery',\n        'code' =>'dynamic_rate_sdd',\n        'price' => 9.99\n      ),\n      array(\n        'title' =>'Standard delivery',\n        'code' =>'dynamic_rate_sd',\n        'price' => 4.99\n      ),\n    );\n  }\n}\n```", "```php\n<route id=\"foggyline_shipment_dynamic_rate_process\" path=\"/dynamic_rate/process\">\n  <default key=\"_controller\">FoggylineShipmentBundle:DynamicRate:process\n  </default>\n</route>\n```", "```php\nnamespace Foggyline\\ShipmentBundle\\Controller;\n\nuse Foggyline\\ShipmentBundle\\Entity\\DynamicRate;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType;\n\nclass DynamicRateController extends Controller\n{\n  public function processAction(Request $request)\n  {\n    // Just a dummy string, simulating some transaction id\n    $transaction = md5(time() . uniqid());\n\n    if ($transaction) {\n      return new JsonResponse(array(\n'success' => $transaction\n      ));\n    }\n\n    return new JsonResponse(array(\n      'error' =>'Error occurred while processing DynamicRate shipment.'\n    ));\n  }\n}\n```", "```php\n<directory>src/Foggyline/ShipmentBundle/Tests</directory>\n```", "```php\nnamespace Foggyline\\ShipmentBundle\\Tests\\Service;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\KernelTestCase;\n\nclass FlatRateShipmentTest extends KernelTestCase\n{\n  private $container;\n  private $router;\n\n  private $street = 'Masonic Hill Road';\n  private $city = 'Little Rock';\n  private $country = 'US';\n  private $postcode = 'AR 72201';\n  private $amount = 199.99;\n  private $qty = 7;\n\n  public function setUp()\n  {\n    static::bootKernel();\n    $this->container = static::$kernel->getContainer();\n    $this->router = $this->container->get('router');\n  }\n\n  public function testGetInfoViaService()\n  {\n    $shipment = $this->container->get('foggyline_shipment.flat_rate');\n\n    $info = $shipment->getInfo(\n      $this->street, $this->city, $this->country, $this->postcode, $this->amount, $this->qty\n    );\n\n    $this->validateGetInfoResponse($info);\n  }\n\n  public function testGetInfoViaClass()\n  {\n    $shipment = new \\Foggyline\\ShipmentBundle\\Service\\FlatRateShipment($this->router);\n\n    $info = $shipment->getInfo(\n      $this->street, $this->city, $this->country, $this->postcode, $this->amount, $this->qty\n    );\n\n    $this->validateGetInfoResponse($info);\n  }\n\n  public function validateGetInfoResponse($info)\n  {\n    $this->assertNotEmpty($info);\n    $this->assertNotEmpty($info['shipment']['title']);\n    $this->assertNotEmpty($info['shipment']['code']);\n    $this->assertNotEmpty($info['shipment']['delivery_options']);\n    $this->assertNotEmpty($info['shipment']['url_process']);\n  }\n}\n```", "```php\nnamespace Foggyline\\ShipmentBundle\\Tests\\Service;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\KernelTestCase;\nclass DynamicRateShipmentTest extends KernelTestCase\n{\n  private $container;\n  private $router;\n\n  private $street = 'Masonic Hill Road';\n  private $city = 'Little Rock';\n  private $country = 'US';\n  private $postcode = 'AR 72201';\n  private $amount = 199.99;\n  private $qty = 7;\n\n  public function setUp()\n  {\n    static::bootKernel();\n    $this->container = static::$kernel->getContainer();\n    $this->router = $this->container->get('router');\n  }\n\n  public function testGetInfoViaService()\n  {\n    $shipment = $this->container->get('foggyline_shipment.dynamicrate_shipment');\n    $info = $shipment->getInfo(\n      $this->street, $this->city, $this->country, $this->postcode, $this->amount, $this->qty\n    );\n    $this->validateGetInfoResponse($info);\n  }\n\n  public function testGetInfoViaClass()\n  {\n    $shipment = new \\Foggyline\\ShipmentBundle\\Service\\DynamicRateShipment($this->router);\n    $info = $shipment->getInfo(\n      $this->street, $this->city, $this->country, $this->postcode, $this->amount, $this->qty\n    );\n\n    $this->validateGetInfoResponse($info);\n  }\n\n  public function validateGetInfoResponse($info)\n  {\n    $this->assertNotEmpty($info);\n    $this->assertNotEmpty($info['shipment']['title']);\n    $this->assertNotEmpty($info['shipment']['code']);\n\n    // Could happen that dynamic rate has none?!\n    //$this->assertNotEmpty($info['shipment']['delivery_options']);\n\n    $this->assertNotEmpty($info['shipment']['url_process']);\n  }\n}\n```", "```php\nnamespace Foggyline\\ShipmentBundle\\Tests\\Controller;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\nclass FlatRateControllerTest extends WebTestCase\n{\n  private $client;\n  private $router;\n\n  public function setUp()\n  {\n    $this->client = static::createClient();\n    $this->router = $this->client->getContainer()->get('router');\n  }\n\n  public function testProcessAction()\n  {\n    $this->client->request('GET', $this->router->generate('foggyline_shipment_flat_rate_process'));\n    $this->assertSame(200, $this->client->getResponse()->getStatusCode());\n    $this->assertSame('application/json', $this->client->getResponse()->headers->get('Content-Type'));\n    $this->assertContains('success', $this->client->getResponse()->getContent());\n    $this->assertNotEmpty($this->client->getResponse()->getContent());\n  }\n}\n```", "```php\nnamespace Foggyline\\ShipmentBundle\\Tests\\Controller;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\n\nclass DynamicRateControllerTest extends WebTestCase\n{\n  private $client;\n  private $router;\n\n  public function setUp()\n  {\n    $this->client = static::createClient();\n    $this->router = $this->client->getContainer()->get('router');\n  }\n\n  public function testProcessAction()\n  {\n    $this->client->request('GET', $this->router->generate('foggyline_shipment_dynamic_rate_process'));\n    $this->assertSame(200, $this->client->getResponse()->getStatusCode());\n    $this->assertSame('application/json', $this->client->getResponse()->headers->get('Content-Type'));\n    $this->assertContains('success', $this->client->getResponse()->getContent());\n    $this->assertNotEmpty($this->client->getResponse()->getContent());\n  }\n}\n```"]