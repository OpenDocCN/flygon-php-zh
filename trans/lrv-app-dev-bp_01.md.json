["```php\n    **CREATE DATABASE urls**\n\n    ```", "```php\n    'mysql' => array(\n      'driver' => 'mysql',\n      'host' => 'localhost',\n      'database' => 'database',\n      'username' => 'root',\n      'password' => '',\n      'charset' => 'utf8',\n      'collation' => 'utf8_unicode_ci',\n      'prefix' => '',\n    ),\n    ```", "```php\n    **php artisan migrate:make create_links_table --table=links --create**\n\n    ```", "```php\n    <?php\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    class CreateLinksTable extends Migration {\n      /**\n      * Run the migrations.\n      *\n      * @return void\n      */\n      public function up()\n      {\n        Schema::create('links', function(Blueprint $table)\n        {\n          $table->increments('id');\n        });\n      }\n      /**\n      * Reverse the migrations.\n      *\n      * @return void\n      */\n      public function down()\n      {\n        Schema::drop('links');\n      }\n    }\n    ```", "```php\n    **php artsian migrate**\n\n    ```", "```php\n    **php artisan migrate:rollback**\n\n    ```", "```php\n    **php artisan migrate:reset**\n\n    ```", "```php\n    **php artisan migrate:refresh**\n\n    ```", "```php\n    <?php\n    use Illuminate\\Database\\Migrations\\Migration;\n    class CreateLinksTable extends Migration {\n      /**\n      * Run the migrations.\n      *\n      * @return void\n      */\n      public function up()\n      {\n        Schema::create('links', function(Blueprint $table)\n        {\n          $table->increments('id');\n          $table->text('url');\n          $table->string('hash',400);\n        });\n      }\n      /**\n      * Reverse the migrations.\n      *\n      * @return void\n      */\n      public function down()\n      {\n        Schema::drop('links');\n      }\n    }\n    ```", "```php\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <title>URL Shortener</title>\n        <link rel=\"stylesheet\" href=\"/assets/css/styles.css\" />\n      </head>\n      <body>\n        <div id=\"container\">\n          <h2>Uber-Shortener</h2>\n          {{Form::open(array('url'=>'/','method'=>'post'))}}\n\n          {{Form::text('link',Input::old('link'),array('placeholder'=>'Insert your URL here and press enter!'))}}\n          {{Form::close()}}\n        </div>\n      </body>\n    </html>\n    ```", "```php\n    div#container{padding-top:100px;\n      text-align:center;\n      width:75%;\n      margin:auto;\n      border-radius:4px}\n    div#container h2{font-family:Arial,sans-serif;\n      font-size:28px;\n      color:#555}\n    div#container h3{font-family:Arial,sans-serif;\n      font-size:28px}\n    div#container h3.error{color:#a00}\n    div#container h3.success{color:#0a0}\n    div#container input{display:block;\n      width:90%;\n      float:left;\n      font-size:24px;\n      border-radius:5px}\n    div#error,div#success{border-radius:3px;\n      display:block;\n      width:90%;\n      padding:10px}\n    div#error{background:#ff8080;\n      border:1px solid red}\n    div#success{background:#80ff80;\n      border:1px solid #0f0}\n    ```", "```php\n<?php\nclass Link extends Eloquent {\n  protected $table = 'links';\n  protected $fillable = array('url','hash');\n  public $timestamps = false;\n}\n```", "```php\nRoute::get('/', function()\t\n{\n  return View::make('form');\n});\n```", "```php\nRoute::post('/',function(){\n  //We first define the Form validation rule(s)\n  $rules = array(\n    'link' => 'required|url'\n  );\n  //Then we run the form validation\n  $validation = Validator::make(Input::all(),$rules);\n  //If validation fails, we return to the main page with an error info\n  if($validation->fails()) {\n    return Redirect::to('/')\n    ->withInput()\n    ->withErrors($validation);\n  } else {\n    //Now let's check if we already have the link in our database. If so, we get the first result\n    $link = Link::where('url','=',Input::get('link'))\n    ->first();\n    //If we have the URL saved in our database already, we provide that information back to view.\n    if($link) {\n      return Redirect::to('/')\n      ->withInput()\n      ->with('link',$link->hash);\n      //Else we create a new unique URL\n    } else {\n      //First we create a new unique Hash\n      do {\n        $newHash = Str::random(6);\n      } while(Link::where('hash','=',$newHash)->count() > 0);\n\n      //Now we create a new database record\n      Link::create(array('url' => Input::get('link'),'hash' => $newHash\n      ));\n\n      //And then we return the new shortened URL info to our action\n      return Redirect::to('/')\n      ->withInput()\n      ->with('link',$newHash);\n    }\n  }\n});\n```", "```php\n//If validation fails, we return to the main page with an error info\nif($validation->fails()) {\n  return Redirect::to('/')\n  ->withInput()\n  ->withErrors($validation);\n}\n```", "```php\n@if(Session::has('errors'))\n<h3 class=\"error\">{{$errors->first('link')}}</h3>\n@endif\n```", "```php\n    // Now let's check if we already have the link in our database. If so, we get the first result\n    $link = Link::where('url','=',Input::get('link'))\n    ->first();\n    ```", "```php\n    //If we have the URL saved in our database already, we provide that information back to view.\n    if($link) {\n      return Redirect::to('/')\n      ->withInput()\n      ->with('link',$link->hash);\n    ```", "```php\n    @if(Session::has('link'))\n    <h3 class=\"success\">\n      {{Html::link(Session::get('link'),'Click here for your shortened URL')}}</h3>\n    @endif\n    ```", "```php\n    //Else we create a new unique URL\n    } else {\n      //First we create a new unique Hash\n      do {\n        $newHash = Str::random(6);\n      } while(Link::where('hash','=',$newHash)->count() > 0);\n    ```", "```php\n    //Now we create a new database record\n    Link::create(array(\n      'url' => Input::get('link'),\n      'hash' => $newHash\n    ));\n    ```", "```php\n    //And then we return the new shortened URL info to our action return Redirect::to('/')\n    ->withInput()\n    ->with('link',$newHash);\n    ```", "```php\nRoute::get('{hash}',function($hash) {\n  //First we check if the hash is from a URL from our database\n  $link = Link::where('hash','=',$hash)\n  ->first();\n  //If found, we redirect to the URL\n  if($link) {\n    return Redirect::to($link->url);\n    //If not found, we redirect to index page with error message\n  } else {\n    return Redirect::to('/')\n    ->with('message','Invalid Link');\n  }\n})->where('hash', '[0-9a-zA-Z]{6}');\n```", "```php\n    //First we check if the hash is from an URL from our database\n    $link = Link::where('hash','=',$hash)\n    ->first();\n    ```", "```php\n    //If found, we redirect to the link\n    if($link) {\n      return Redirect::to($link->url);\n    }\n    ```", "```php\n    //If not found, we redirect to index page with error message\n    } else {\n      return Redirect::to('/')\n      ->with('message','Invalid Link');\n    }\n    ```", "```php\n    @if(Session::has('message'))\n    <h3 class=\"error\">{{Session::get('message')}}</h3>\n    @endif\n    ```"]