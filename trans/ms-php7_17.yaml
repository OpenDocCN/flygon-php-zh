- en: Hosting, Provisioning, and Deployment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 托管、配置和部署
- en: 'Hosting, provisioning, and deployment are admittedly three very distinct activities that
    often go hand in hand with the overall application life cycle management. Whereas,
    some types of hosting solutions make it near impossible to achieve seamless deployments,
    others make it an ultimately joyful and time-effective experience for developers.
    This brings us to the most important point of all, which is, *Why would developers
    even bother with these system operations things*? There are plenty of answers
    for this one. Whereas, the real sales pitch is simple as: market demands it. Nowadays,
    developers are tangled in a web of multidisciplinary activities, which often goes
    beyond coding skills itself and into system operations at some level. The *not
    my job* mantra is all but reserved for us here, which is ultimately alright, as
    having a strong knowledge about activities supporting an entire application life
    cycle makes us more responsive in the face of possible outages.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 托管、配置和部署无疑是三个非常不同的活动，通常与整个应用程序生命周期管理紧密相连。一些类型的托管解决方案几乎不可能实现无缝部署，而其他一些解决方案则使开发人员的体验变得愉快且节省时间。这带我们来到最重要的一点，那就是，*为什么开发人员要费心这些系统操作*？对于这个问题有很多答案。而真正的销售点很简单：市场需要。如今，开发人员陷入了一个超越编码技能本身的多学科活动网络中，甚至涉及到某种程度的系统操作。*不是我的工作*的口号几乎是为我们保留的，这其实没什么，因为对整个应用程序生命周期支持活动有很强的了解，使我们在可能的中断面前更加响应。
- en: 'In this chapter, we will take a high-level overview on some of these activities
    through the following few sections:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过以下几个部分对一些活动进行高层次的概述：
- en: Choosing the right hosting plan
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择正确的托管计划
- en: Automating provisioning
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化配置
- en: Automating deployment
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化部署
- en: Continuous integration
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续集成
- en: Choosing the right hosting plan
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择正确的托管计划
- en: 'Choosing the right hosting plan for our next project can be a tedious challenge. There
    are many types of solutions to choose from, some of which include the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为我们的下一个项目选择正确的托管计划可能是一个繁琐的挑战。有许多类型的解决方案可供选择，其中包括以下内容：
- en: Shared server
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享服务器
- en: Virtual private server
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟专用服务器
- en: Dedicated server
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专用服务器
- en: PaaS
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PaaS
- en: They all have their *pros* and *cons*. Whereas once decision factors were dominated
    by features such as memory, CPU, bandwidth, and disk storage, those became ever *cheaper* over
    the years. Nowadays,** auto-scaling** and **ease of deployment** emerged as an
    equally important metrics. While ultimately the pricing plays a crucial role,
    great deal of modern hosting solutions have a lot to offer for an affordable price.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 它们都有各自的*优点*和*缺点*。曾经决策因素主要是由内存、CPU、带宽和磁盘存储等功能主导，但这些功能随着时间的推移变得越来越*便宜*。如今，**自动扩展**和**部署的便利性**也成为同样重要的指标。尽管最终价格起着至关重要的作用，但现代托管解决方案提供了很多物有所值的价格。
- en: Shared server
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 共享服务器
- en: The shared web hosting service is the one where many different users host their
    applications. The hosting provider usually provides a well-tuned web server with
    MySQL or PostgreSQL database and an FTP access. On top of that, there is usually
    a web-based control panel system, such as cPanel, Plesk, H-Sphere, or alike. This
    allows us to manage a limited set of features through a nice graphical interface,
    right from our browser.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 共享网络托管服务是许多不同用户托管其应用程序的地方。托管提供商通常提供一个经过调整的Web服务器，带有MySQL或PostgreSQL数据库和FTP访问。此外，通常还有一个基于Web的控制面板系统，如cPanel、Plesk、H-Sphere或类似的系统。这使我们能够通过一个漂亮的图形界面，直接从我们的浏览器管理一组有限的功能。
- en: 'The popular PC Mag magazine ([http://www.pcmag.com](http://www.pcmag.com))
    shares the list of the best web hosting services of 2017 as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 流行的PC Mag杂志([http://www.pcmag.com](http://www.pcmag.com))列出了2017年最佳网络托管服务的清单如下：
- en: HostGator Web Hosting: [http://www.hostgator.com](http://www.hostgator.com)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HostGator网络托管：[http://www.hostgator.com](http://www.hostgator.com)
- en: 1&1 Web Hosting: [https://www.1and1.com](https://www.1and1.com)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1&1网络托管：[https://www.1and1.com](https://www.1and1.com)
- en: InMotion Web Hosting: [https://www.inmotionhosting.com/](https://www.inmotionhosting.com/)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: InMotion网络托管：[https://www.inmotionhosting.com/](https://www.inmotionhosting.com/)
- en: DreamHost Web Hosting: [https://www.dreamhost.com](https://www.dreamhost.com)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DreamHost网络托管：[https://www.dreamhost.com](https://www.dreamhost.com)
- en: GoDaddy Web Hosting: [https://www.godaddy.com](https://www.godaddy.com)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Godaddy网络托管：[https://www.godaddy.com](https://www.godaddy.com)
- en: Bluehost Web Hosting: [https://www.bluehost.com](https://www.bluehost.com)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bluehost网络托管：[https://www.bluehost.com](https://www.bluehost.com)
- en: Hostwinds Web Hosting: [https://www.hostwinds.com](https://www.hostwinds.com)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hostwinds网络托管：[https://www.hostwinds.com](https://www.hostwinds.com)
- en: Liquid Web Hosting: [https://www.liquidweb.com](https://www.liquidweb.com)
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liquid网络托管：[https://www.liquidweb.com](https://www.liquidweb.com)
- en: A2 Web Hosting: [https://www.a2hosting.com](https://www.a2hosting.com)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A2网络托管：[https://www.a2hosting.com](https://www.a2hosting.com)
- en: Arvixe Web Hosting: [https://www.arvixe.com](https://www.arvixe.com)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阿维克斯网络托管：[https://www.arvixe.com](https://www.arvixe.com)
- en: 'Each of these web hosting services seems to provide a similar set of functionalities,
    as shown in the following screenshot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这些网络托管服务似乎提供了类似的功能，如下面的截图所示：
- en: '![](assets/184cd2c3-4562-4178-b101-b2518c70154c.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/184cd2c3-4562-4178-b101-b2518c70154c.png)'
- en: While the affordable shared server price might seem tempting, the lack of control
    over the server limits its use with any serious applications. Our application
    shares the same CPU, memory, and storage as a dozen, a hundred, or even a thousand
    other applications. We don't get to install any software we want, which might
    even turn into a deal breaker if our application requires some fancy PHP extension,
    which is why this type of a poor man's hosting is something we should wholeheartedly
    try to avoid for anything other than the business card or blog type of applications.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然价格便宜的共享服务器可能看起来很诱人，但对服务器的控制不足限制了它在任何严肃应用中的使用。我们的应用程序与其他应用程序共享相同的CPU、内存和存储空间。我们无法安装任何我们想要的软件，如果我们的应用程序需要一些花哨的PHP扩展，这甚至可能成为一个决定性因素，这种贫穷人的托管是我们除了名片或博客类型的应用程序之外，应该全心全意地避免的。
- en: Virtual private server
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟专用服务器
- en: The **virtual private server** (**VPS**) is a virtual machine provided by the
    hosting provider. This machine then runs its own operating system to which we
    often have a full super-user access. The VPS itself shares the same set of physical
    hardware resources as other VPS machines. This means that our VPS performance can
    easily be impaired by other VPS machines' processes.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**虚拟专用服务器**（VPS）是由托管提供商提供的虚拟机器。然后，该机器运行其自己的操作系统，我们通常具有完整的超级用户访问权限。VPS本身与其他VPS机器共享相同的物理硬件资源。这意味着我们的VPS性能很容易受到其他VPS机器进程的影响。'
- en: 'The popular PCMag magazine ([http://www.pcmag.com](http://www.pcmag.com)) shares
    the list of the best VPS web hosting services of 2017 as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 流行的PCMag杂志（[http://www.pcmag.com](http://www.pcmag.com)）分享了2017年最佳VPS网络托管服务的名单如下：
- en: HostGator Web Hosting: [http://www.hostgator.com](http://www.hostgator.com)
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'HostGator Web Hosting: [http://www.hostgator.com](http://www.hostgator.com)'
- en: InMotion Web Hosting: [https://www.inmotionhosting.com/](https://www.inmotionhosting.com/)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'InMotion Web Hosting: [https://www.inmotionhosting.com/](https://www.inmotionhosting.com/)'
- en: 1&1 Web Hosting: [https://www.1and1.com](https://www.1and1.com)
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '1&1 Web Hosting: [https://www.1and1.com](https://www.1and1.com)'
- en: DreamHost Web Hosting: [https://www.dreamhost.com](https://www.dreamhost.com)
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'DreamHost Web Hosting: [https://www.dreamhost.com](https://www.dreamhost.com)'
- en: Hostwinds Web Hosting: [https://www.hostwinds.com](https://www.hostwinds.com)
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Hostwinds Web Hosting: [https://www.hostwinds.com](https://www.hostwinds.com)'
- en: Liquid Web Hosting: [https://www.liquidweb.com](https://www.liquidweb.com)
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Liquid Web Hosting: [https://www.liquidweb.com](https://www.liquidweb.com)'
- en: GoDaddy Web Hosting: [https://www.godaddy.com](https://www.godaddy.com)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'GoDaddy Web Hosting: [https://www.godaddy.com](https://www.godaddy.com)'
- en: Bluehost Web Hosting: [https://www.bluehost.com](https://www.bluehost.com)
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Bluehost Web Hosting: [https://www.bluehost.com](https://www.bluehost.com)'
- en: Media Temple Web Hosting: [https://mediatemple.net](https://mediatemple.net)
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Media Temple Web Hosting: [https://mediatemple.net](https://mediatemple.net)'
- en: 'There are quite a few variations between these hosting services, mostly in
    terms of memory and storage, as you can see in the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这些托管服务之间存在相当多的差异，主要是在内存和存储方面，如下截图所示：
- en: '![](assets/91a06c56-f120-4c7b-b174-41d46c935157.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/91a06c56-f120-4c7b-b174-41d46c935157.png)'
- en: While VPS is still a form of shared resources, it allows us a much greater degree
    of freedom than conventional shared hosting. Having full super-user access to
    the machine means we can install pretty much any piece of software we want to. This
    also means a greater degree of responsibility for us.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然VPS仍然是一种共享资源的形式，但它比传统的共享托管提供了更大程度的自由。拥有对机器的完全超级用户访问权限意味着我们几乎可以安装任何我们想要的软件。这也意味着我们承担了更大程度的责任。
- en: Dedicated server
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 专用服务器
- en: The dedicated server assumes a real physical machine provided by the hosting
    provider. Such a machine does not share resources with anyone else other than
    us. This makes it a viable option for high-performance and mission-critical applications.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 专用服务器假定由托管提供商提供的真实物理机器。这样的机器除了我们之外不与任何其他人共享资源。这使得它成为高性能和关键任务应用的可行选择。
- en: 'The popular PCMag magazine ([http://www.pcmag.com](http://www.pcmag.com))shares
    the list of the best dedicated web hosting services of 2017 as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 流行的PCMag杂志（[http://www.pcmag.com](http://www.pcmag.com)）分享了2017年最佳专用网络托管服务的名单如下：
- en: HostGator Web Hosting: [http://www.hostgator.com](http://www.hostgator.com)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'HostGator Web Hosting: [http://www.hostgator.com](http://www.hostgator.com)'
- en: DreamHost Web Hosting: [https://www.dreamhost.com](https://www.dreamhost.com)
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'DreamHost Web Hosting: [https://www.dreamhost.com](https://www.dreamhost.com)'
- en: InMotion Web Hosting: [https://www.inmotionhosting.com/](https://www.inmotionhosting.com/)
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'InMotion Web Hosting: [https://www.inmotionhosting.com/](https://www.inmotionhosting.com/)'
- en: 1&1 Web Hosting: [https://www.1and1.com](https://www.1and1.com)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '1&1 Web Hosting: [https://www.1and1.com](https://www.1and1.com)'
- en: Liquid Web Hosting: [https://www.liquidweb.com](https://www.liquidweb.com)
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Liquid Web Hosting: [https://www.liquidweb.com](https://www.liquidweb.com)'
- en: Hostwinds Web Hosting: [https://www.hostwinds.com](https://www.hostwinds.com)
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Hostwinds Web Hosting: [https://www.hostwinds.com](https://www.hostwinds.com)'
- en: GoDaddy Web Hosting: [https://www.godaddy.com](https://www.godaddy.com)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'GoDaddy Web Hosting: [https://www.godaddy.com](https://www.godaddy.com)'
- en: Bluehost Web Hosting: [https://www.bluehost.com](https://www.bluehost.com)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Bluehost Web Hosting: [https://www.bluehost.com](https://www.bluehost.com)'
- en: SiteGround Web Hosting: [https://www.siteground.com](https://www.siteground.com)
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'SiteGround Web Hosting: [https://www.siteground.com](https://www.siteground.com)'
- en: iPage Web Hosting: [http://www.ipage.com](http://www.ipage.com)
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'iPage Web Hosting: [http://www.ipage.com](http://www.ipage.com)'
- en: 'There are quite a few variations between these hosting services, mostly in
    terms of memory and storage, as you can see in this screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这些托管服务之间存在相当多的差异，主要是在内存和存储方面，如此截图所示：
- en: '![](assets/da07ab44-f81e-475b-9912-7a51c6cfd3d1.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/da07ab44-f81e-475b-9912-7a51c6cfd3d1.png)'
- en: While they come at a higher cost, dedicated servers guarantee a level of performance and
    full control over the machine. At the same time, managing scalability and redundancy
    can easily turn into a challenge of its own.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然价格更高，但专用服务器保证了一定的性能水平和对机器的完全控制。同时，管理可伸缩性和冗余性可能很容易成为一项挑战。
- en: PaaS
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PaaS
- en: The **platform as a service** (**PaaS**) is a special type of hosting where
    a provider delivers hardware and software tools needed to speed up application
    development. We may go so far as to compare PaaS with the power and flexibility
    of dedicated servers backed by dozens of easily connected services assisting the availability,
    reliability, scalability, and application development activities. This makes it
    a popular choice among developers.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台即服务**（PaaS）是一种特殊类型的托管，其中提供商提供了加速应用程序开发所需的硬件和软件工具。我们甚至可以将PaaS与由数十个轻松连接的服务支持的专用服务器的强大和灵活性进行比较，这些服务支持可用性、可靠性、可伸缩性和应用程序开发活动。这使得它成为开发人员的热门选择。'
- en: 'The popular *IT Central Station* site ([https://www.itcentralstation.com](https://www.itcentralstation.com)) shares
    the list of the best PaaS clouds vendors of 2017 as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: IT Central Station网站（[https://www.itcentralstation.com](https://www.itcentralstation.com)）分享了2017年最佳PaaS云供应商的名单如下：
- en: Amazon AWS: [https://aws.amazon.com](https://aws.amazon.com)
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Amazon AWS: [https://aws.amazon.com](https://aws.amazon.com)'
- en: Microsoft Azure: [https://azure.microsoft.com](https://azure.microsoft.com)
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Microsoft Azure: [https://azure.microsoft.com](https://azure.microsoft.com)'
- en: Heroku: [https://www.heroku.com](https://www.heroku.com)
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Heroku: [https://www.heroku.com](https://www.heroku.com)'
- en: Mendix: [https://www.mendix.com](https://www.mendix.com)
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Mendix: [https://www.mendix.com](https://www.mendix.com)'
- en: Salesforce App Cloud: [https://www.salesforce.com](https://www.salesforce.com)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Salesforce App Cloud: [https://www.salesforce.com](https://www.salesforce.com)'
- en: Oracle Java Cloud Service: [https://cloud.oracle.com/java](https://cloud.oracle.com/java)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Oracle Java Cloud Service: [https://cloud.oracle.com/java](https://cloud.oracle.com/java)'
- en: HPE Helion: [https://www.hpe.com](https://www.hpe.com)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'HPE Helion: [https://www.hpe.com](https://www.hpe.com)'
- en: Rackspace Cloud: [https://www.rackspace.com](https://www.rackspace.com)
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Rackspace Cloud: [https://www.rackspace.com](https://www.rackspace.com)'
- en: Google App Engine: [https://cloud.google.com](https://cloud.google.com)
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google App Engine: [https://cloud.google.com](https://cloud.google.com)'
- en: Oracle Cloud Platform: [http://www.oracle.com/solutions/cloud/platform/](http://www.oracle.com/solutions/cloud/platform/)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Oracle Cloud Platform: [http://www.oracle.com/solutions/cloud/platform/](http://www.oracle.com/solutions/cloud/platform/)'
- en: 'The following report has been taken for April 2017:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 以下报告是2017年4月的：
- en: '![](assets/be1377b9-9681-4ac9-90a4-9cda5491dd3e.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/be1377b9-9681-4ac9-90a4-9cda5491dd3e.png)'
- en: 'While all of these services have much to offer, it is worth pointing out Amazon
    AWS, which was named by Gartner in 2016 Magic Quadrant for Cloud Infrastructure
    as a Service as having the furthest completeness of vision. The evaluation criteria
    are based on several key factors:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然所有这些服务都有很多提供，但值得指出的是亚马逊AWS，它被Gartner在2016年云基础设施即服务的魔力象限中评为具有最远见的完整性。评估标准基于几个关键因素：
- en: Market understanding
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 市场理解
- en: Marketing strategy
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 营销策略
- en: Sales strategy
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 销售策略
- en: Offering (product) strategy
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供（产品）策略
- en: Business model
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商业模式
- en: Vertical/industry strategy
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 垂直/行业战略
- en: Innovation
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创新
- en: Geographic strategy
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地理战略
- en: 'The great starting point with Amazon AWS is its EC2 service, which provides
    resizable virtual servers. These act much like the dedicated server, but in cloud,
    where we get to choose the region of the world we would like to deploy these.
    On top of that, there are dozens of other services within the Amazon AWS offering
    that enrich the overall application management:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊AWS的一个很好的起点是其EC2服务，它提供可调整大小的虚拟服务器。这些虚拟服务器在云中的作用类似于专用服务器，我们可以选择部署它们的世界各地的地区。除此之外，亚马逊AWS提供了数十种其他服务，丰富了整体应用管理：
- en: '![](assets/0c910bfa-97f3-4b82-9826-2c20bbdf02c9.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0c910bfa-97f3-4b82-9826-2c20bbdf02c9.png)'
- en: An easy-to-use interface, rich service offering, affordable price, great documentation,
    certification, and available tooling are some of the *selling points* for developers
    when it comes to Amazon AWS.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一个易于使用的界面，丰富的服务提供，价格实惠，文档齐全，认证和可用的工具是开发人员在使用亚马逊AWS时的一些*卖点*。
- en: Automating provisioning
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化配置
- en: The provisioning is a term that has gained a lot of traction among developers
    lately. It refers to the activity of setting up and configuring *servers *with
    every bit of required software, making it ready for application use. While this
    sounds a lot like the system operations type of work, developers found it interesting
    with the rise of cloud services and the tooling surrounding it.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 配置是最近在开发人员中引起了很大关注的一个术语。它指的是使用所需的软件设置和配置*服务器*的活动，使其准备好用于应用。虽然这听起来很像系统操作类型的工作，但随着云服务的兴起和围绕它的工具，开发人员发现这很有趣。
- en: Historically, provisioning implied a lot of manual type of work. There were
    not as many general purpose automated provisioning tools as there is today. This
    meant that there were times when provisioning took days or even weeks. Looking
    through the prism of today's market demands, such a scenario is hardly imaginable. Nowadays,
    a single application is usually served by several different servers, each of which
    is targeting a single functionality, such as web (Apache, Nginx, ...), storage
    (MySQL, Redis, ...), session (Redis, Memcached, ...), static content (Nginx),
    and so on. We simply cannot afford to spend days setting up each of the servers.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，配置意味着很多手动工作。当时通用的自动配置工具并不像今天这样多。这意味着有时配置需要花费数天甚至数周的时间。从今天市场需求的角度来看，这样的情景几乎无法想象。如今，一个单一的应用通常由几个不同的服务器提供服务，每个服务器都针对单一功能，比如Web（Apache，Nginx，...），存储（MySQL，Redis，...），会话（Redis，Memcached，...），静态内容（Nginx）等等。我们简直无法承受花费数天来设置每个服务器。
- en: 'There are several popular tools we can use to automate provisioning, some of
    which include these popular four:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种流行的工具可以用来自动配置，其中包括这四种流行的工具：
- en: Ansible: [https://www.ansible.com](https://www.ansible.com).
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Ansible: [https://www.ansible.com](https://www.ansible.com).'
- en: Chef: [https://www.chef.io/chef/](https://www.chef.io/chef/)
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Chef: [https://www.chef.io/chef/](https://www.chef.io/chef/)'
- en: Puppet: [https://puppet.com](https://puppet.com)
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Puppet: [https://puppet.com](https://puppet.com)'
- en: SaltStack: [https://saltstack.com](https://saltstack.com)
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'SaltStack: [https://saltstack.com](https://saltstack.com)'
- en: Like others tools of the same type, these are all built with the goal of making
    it easier to configure and maintain dozens, hundreds, or even thousands of servers.
    While all of these tools are more likely to get any provisioning job done with
    equal effect, let's take a closer look at one of them. Released in 2012, **Ansible**
    is the youngest of the four. It is an open source tool that automates software
    provisioning, configuration management, and application deployment. This tool
    performs all of its functions over SSH, without requiring any agent software installation
    on the target node/server. This alone makes it a favorable choice among developers.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 像其他同类工具一样，所有这些工具都旨在使配置和维护数十、数百甚至数千台服务器变得更容易。虽然所有这些工具更有可能以同等效果完成任何配置工作，但让我们更仔细地看看其中一个。发布于2012年的**Ansible**是其中最年轻的。它是一个开源工具，可以自动化软件配置、配置管理和应用部署。该工具通过SSH执行所有功能，而无需在目标节点/服务器上安装任何代理软件。这一点使它成为开发人员中的首选。
- en: 'There are several key concepts around Ansible, some of which are as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 围绕Ansible有几个关键概念，其中一些如下：
- en: '**Inventories**: This is the list of Ansible managed servers'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清单**：这是Ansible管理的服务器列表'
- en: '**Playbooks**: This is Ansible''s configuration expressed in YAML format'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Playbooks**：这是用YAML格式表达的Ansible配置'
- en: '**Roles**: This is automation around include directives based on a file structure'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**角色**：这是基于文件结构的包含指令的自动化'
- en: '**Tasks**: This is the possible actions that Ansible can execute'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务**：这是Ansible可以执行的可能操作'
- en: The [https://galaxy.ansible.com](https://galaxy.ansible.com) service acts as
    a hub that provides ready-to-use roles.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://galaxy.ansible.com](https://galaxy.ansible.com)服务充当了一个提供现成角色的中心。'
- en: 'To get a very basic understanding of Ansible, let''s do a very simple and quick demonstration
    based on the following:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 为了对Ansible有一个非常基本的理解，让我们基于以下内容进行一个非常简单和快速的演示：
- en: Ubuntu workstation machine
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu工作站
- en: Ubuntu server machine
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu服务器
- en: We will use the `ansible` tool to provision software on the server machine.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`ansible`工具在服务器上部署软件。
- en: Setting up the workstation machine
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置工作站
- en: 'Using Ubuntu powered workstation, we can easily install the Ansible tool just
    by running the following set of commands:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ubuntu工作站，我们可以通过运行以下一组命令轻松安装Ansible工具：
- en: '[PRE0]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If all went well, `ansible --version` should give us an output much like this
    screenshot:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，`ansible --version`应该给我们一个类似这个截图的输出：
- en: '![](assets/56100755-07ae-4070-a76c-5bb8d7660e9d.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/56100755-07ae-4070-a76c-5bb8d7660e9d.png)'
- en: The Ansible is a console tool for running ad-hoc tasks. Whereas ad-hoc implies
    on something we do quickly, without writing the entire playbook for it.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible是一个用于运行临时任务的控制台工具。而临时意味着我们可以快速地做一些事情，而不需要为此编写整个playbook。
- en: 'Likewise,  `ansible-galaxy --version` should give us an output much like the
    following screenshot:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`ansible-galaxy --version`应该给我们一个类似以下截图的输出：
- en: '![](assets/e46bcaf4-27a2-4508-b704-2e6a584a47ca.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e46bcaf4-27a2-4508-b704-2e6a584a47ca.png)'
- en: The `ansible-galaxy` is a console tool we can use to install, create, and remove
    roles, or perform tasks on the Galaxy website. By default, tool communicates with
    the Galaxy website API using the server address [https://galaxy.ansible.com](https://galaxy.ansible.com).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`ansible-galaxy`是一个控制台工具，我们可以用它来安装、创建和删除角色，或在Galaxy网站上执行任务。默认情况下，该工具使用服务器地址[https://galaxy.ansible.com](https://galaxy.ansible.com)与Galaxy网站API通信。'
- en: 'Also,  `ansible-playbook --version` should give us an output much like the
    following screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`ansible-playbook --version`应该给我们一个类似以下截图的输出：
- en: '![](assets/ecde8c01-88b0-43c4-92f0-0f626e40808a.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ecde8c01-88b0-43c4-92f0-0f626e40808a.png)'
- en: The `ansible-playbook` is a console tool used for configuration management and
    deployments.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`ansible-playbook`是一个用于配置管理和部署的控制台工具。'
- en: 'With the Ansible tool in place, let''s make sure our workstation has a proper
    SSH key, which we will use later on to connect to the server machine. We can easily
    generate the SSH key by simply running the following command, followed by hitting
    the *Enter* key when asked for a file and passphrase:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 有了Ansible工具，让我们确保我们的工作站有一个适当的SSH密钥，我们稍后将用它连接到服务器。我们可以通过简单运行以下命令来轻松生成SSH密钥，然后在要求文件和密码时按下*Enter*键：
- en: '[PRE1]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This should give us an output much like the following one:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该给我们一个类似以下的输出：
- en: '![](assets/3329b101-a613-4111-849d-ce5445e4f27d.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3329b101-a613-4111-849d-ce5445e4f27d.png)'
- en: Using the Ansible playbooks, we can define various provisioning steps in the
    easy-to-read YAML format.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Ansible的playbooks，我们可以以易于阅读的YAML格式定义各种配置步骤。
- en: Setting up the server machine
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置服务器
- en: We previously mentioned there are several hosting solutions that allow full
    control over the server machine. These solutions come in form of VPS, dedicated
    and cloud services. For the purpose of this example, we will be using the **Vultr
    Cloud Compute** (**VC2**), which is available at [https://www.vultr.com](https://www.vultr.com). Without
    going too deep into the ins and outs of the Vultr service, it's suffice to say
    it provides an affordable cloud compute service via an easy-to-use administration
    interface.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前提到有几种托管解决方案可以完全控制服务器。这些解决方案以VPS、专用和云服务的形式出现。在这个例子中，我们将使用**Vultr Cloud Compute**（**VC2**），它可以在[https://www.vultr.com](https://www.vultr.com)上找到。不深入讨论Vultr服务的细节，它提供了一个经济实惠的云计算服务，通过易于使用的管理界面。
- en: 'Assuming we have created a Vultr account, the first thing we want to do now
    is to add our workstation SSH public key to it. We can easily do so through Vultr''s
    Servers | SSH Keys interface:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已经创建了一个Vultr账户，现在我们要做的第一件事是将我们的工作站SSH公钥添加到其中。我们可以通过Vultr的Servers | SSH Keys界面轻松实现：
- en: '![](assets/b545e1ce-e654-4d46-ae8a-cb67b84f7227.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b545e1ce-e654-4d46-ae8a-cb67b84f7227.png)'
- en: Once the SSH Key is saved, we can go back to the Servers screen and click on
    the Deploy New Server button. This brings us to the Deploy New Instance interface,
    which presents us with several steps. The steps we focus our attention on are
    Server Type and SSH Keys.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 保存了SSH密钥后，我们可以返回到服务器界面，点击“部署新服务器”按钮。这将带我们进入“部署新实例”界面，其中呈现给我们几个步骤。我们关注的步骤是服务器类型和SSH密钥。
- en: 'For Server Type, let''s go ahead and choose Ubuntu 16.04 x64:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 对于服务器类型，让我们继续选择Ubuntu 16.04 x64：
- en: '![](assets/1ae8b244-c72a-41b9-ab0c-a9d61359c1e5.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1ae8b244-c72a-41b9-ab0c-a9d61359c1e5.png)'
- en: 'For SSH Keys, let''s go ahead and choose the SSH key we just added to Vultr:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 对于SSH密钥，让我们继续选择我们刚刚添加到Vultr的SSH密钥：
- en: '![](assets/c7927438-9cfb-44cc-9e35-ec0df7f7bf81.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c7927438-9cfb-44cc-9e35-ec0df7f7bf81.png)'
- en: With these two selected, we can click on the Deploy Now button, which should
    trigger deployment of our server machine.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这两个选择，我们可以点击“立即部署”按钮，这应该触发我们服务器的部署。
- en: To this point, we might wonder, what the purpose of this exercise might be,
    as we have clearly created a server machine pretty much manually. After all, Ansible
    has a module to manage servers on Vultr so we could have easily used that for server
    creation. The exercise here, however, is around the basics of understanding how
    easily it is to "hook" Ansible to an existing server machine and then use it to
    provision further software to it. Now that we have a server machine running, let's
    move on to the further configuration of Ansible on the workstation.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 到这一点，我们可能会想知道这个练习的目的是什么，因为我们已经相当手动地创建了一个服务器。毕竟，Ansible有一个模块来管理Vultr上的服务器，所以我们本可以轻松使用它来创建服务器。然而，这里的练习是围绕着理解如何轻松地“连接”Ansible到现有的服务器，并使用它来为其进一步配置软件。现在我们有一个运行的服务器，让我们继续进行工作站上Ansible的进一步配置。
- en: Configuring Ansible
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Ansible
- en: 'Back on our workstation machine, let''s go ahead and create a project directory:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们的工作站机器，让我们继续创建一个项目目录：
- en: '[PRE2]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, let''s go ahead and create an `ansible.cfg` file with its content as follows:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续创建一个`ansible.cfg`文件，内容如下：
- en: '[PRE3]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Next, let''s go ahead and create the `hosts` file with its content as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们继续创建`hosts`文件，内容如下：
- en: '[PRE4]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the preceding lines of code, `45.76.88.214` is the IP address of our server
    machine.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码行中，`45.76.88.214`是我们服务器机器的IP地址。
- en: 'We should now be able to run the `ansible` tool as follows:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们应该能够运行`ansible`工具，如下所示：
- en: '[PRE5]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Ideally, this should give us the following output:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，这应该给我们以下输出：
- en: '![](assets/7a8dda31-5e3f-407d-bec1-a71d00875715.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7a8dda31-5e3f-407d-bec1-a71d00875715.png)'
- en: 'The `ansible` tool might throw a MODULE FAILURE message in the case of a missing
    Python installation on our server machine:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的服务器机器上缺少Python安装，`ansible`工具可能会抛出MODULE FAILURE消息：
- en: '![](assets/19345ad7-cc19-4387-bcc2-cfffee03a3ca.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/19345ad7-cc19-4387-bcc2-cfffee03a3ca.png)'
- en: 'If this happens, we should SSH into our server machine and install Python as
    follows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生这种情况，我们应该通过SSH登录到我们的服务器并按以下方式安装Python：
- en: '[PRE6]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: At this point, our workstation `ansible` tool should be set to have clear communication
    with our *server* machine.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们的工作站`ansible`工具应该设置为与我们的*服务器*机器进行清晰的通信。
- en: 'Now, let''s go ahead and do a quick lookup for the LAMP server role on the
    Galaxy hub:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续在Galaxy hub上快速查找LAMP服务器角色：
- en: '![](assets/839f6ee3-25ba-4c8a-94ac-ce15d32d08e3.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/839f6ee3-25ba-4c8a-94ac-ce15d32d08e3.png)'
- en: 'Clicking on one of the results gives us information on how to install it:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 点击其中一个结果会给我们安装它的信息：
- en: '![](assets/50e2500d-800f-4b9b-97a9-04e81d05ff3a.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/50e2500d-800f-4b9b-97a9-04e81d05ff3a.png)'
- en: 'By running the following command on the workstation, we install the existing `fvarovillodres.lamp` role:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在工作站上运行以下命令，我们安装现有的`fvarovillodres.lamp`规则：
- en: '[PRE7]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Provisioning a web server
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Web服务器
- en: 'With the newly pulled `fvarovillodres.lamp` rule, we should be able to effortlessly
    deploy a new web server. To do so, all it takes is creating a playbook, such as
    `lamp.yaml`, with its content as follows:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 有了新拉取的`fvarovillodres.lamp`规则，我们应该能够轻松部署一个新的Web服务器。为此，只需创建一个playbook，比如`lamp.yaml`，内容如下：
- en: '[PRE8]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, we can easily run our `lamp.yaml` playbook via the following command:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过以下命令轻松运行我们的`lamp.yaml` playbook：
- en: '[PRE9]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This should trigger the tasks within the `fvarovillodres.lamp` role that we
    pulled from the Galaxy hub upon completion:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该在完成后触发从Galaxy hub拉取的`fvarovillodres.lamp`规则中的任务：
- en: '![](assets/767386fe-8bb1-46d1-bad4-3be0cd3ba65b.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/767386fe-8bb1-46d1-bad4-3be0cd3ba65b.png)'
- en: Finally, opening a `http://45.76.88.214/` URL should give us an Apache page.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在`http://45.76.88.214/` URL上打开应该会给我们一个Apache页面。
- en: The overall topic of provisioning, or even Ansible, is a broad subject worth
    a book of its own. The example given here is merely to showcase the ease of use
    of the available tooling in order to address the provisioning in an automated
    way. There is one important takeaway here, which is that we need full control
    over the server/node in order to utilize the provisioning. This is why shared
    types of hosting are excluded from any such discussions.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 配置的整体主题，甚至是Ansible，都是一个值得一本书的广泛主题。这里给出的示例仅仅是为了展示可用工具的易用性，以便以自动化的方式解决配置问题。这里有一个重要的要点，就是我们需要完全控制服务器/节点才能利用配置。这就是为什么共享类型的主机被排除在任何这类讨论之外。
- en: The exact example given here uses a single server box. However, it is not hard
    to imagine how easily this approach can be scaled up to a dozen or even hundreds
    of server machines just by amending the Ansible configuration. We could have easily
    used Ansible itself to automate the deployment for our application, where each
    deployment, for instance, might trigger a new server creation process with code
    being pulled from some Git repository or alike. There are, however, more simpler,
    specialized tools to handle automated deployments.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这里给出的确切示例使用了单个服务器框。然而，很容易想象如何通过修改Ansible配置来将这种方法扩展到十几甚至数百台服务器。我们本可以使用Ansible本身来自动化我们应用的部署，例如，每次部署可能会触发一个新的服务器创建过程，代码从某个Git存储库中拉取。然而，也有更简单的专门工具来处理自动化部署。
- en: Automating the deployment
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化部署
- en: Deploying a PHP application primarily implies deploying PHP code. Since PHP
    is an interpreted and not compiled language, the PHP applications deploy their
    code as-is, in source files. This means that there is no real build process involved
    when deploying an application, which further means that application deployment
    can be as easy as doing a `git pull`within a server web directory. Surely, things
    are never that simple, as we often have various other bits that need to fit in
    place when the code is deployed, such as databases, mounted drives, shared files,
    permissions, other services connected to our server, and so on.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 部署PHP应用程序主要意味着部署PHP代码。由于PHP是一种解释性语言而不是编译语言，PHP应用程序将其代码原样部署在源文件中。这意味着在部署应用程序时没有真正的构建过程，这进一步意味着应用程序部署可以像在服务器Web目录中执行`git
    pull`一样简单。当然，事情永远不会那么简单，因为当代码部署时，我们通常还有各种其他需要适应的部分，比如数据库、挂载驱动器、共享文件、权限、连接到我们服务器的其他服务等等。
- en: We can easily imagine the complexity of having to manually deploy code from
    a single git repository onto dozens of web servers behind some load balancer at
    the same time. Such manual deployments will surely have negative implications,
    as we end up with a time in-between overall deployments, where one server might
    have newer versions of an application code, while others still serve the old application.
    The lack of consistency is, therefore, just a one of the impacting challenges
    to worry about.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以很容易地想象手动从单个git存储库部署代码到数十个位于负载均衡器后面的Web服务器的复杂性。这种手动部署肯定会产生负面影响，因为我们最终会在整体部署之间有一个时间差，其中一个服务器可能具有更新版本的应用程序代码，而其他服务器仍在提供旧应用程序。因此，缺乏一致性只是需要担心的影响挑战之一。
- en: 'Luckily, there are a dozen of tools that address the challenges of automated
    deployments. While we won''t be getting into the ins and outs of any of them specifically,
    for the sake of a quick comparison, let''s just mention the following two:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有数十种工具可以解决自动部署的挑战。虽然我们不会专门讨论它们的细节，但为了快速比较，让我们简要提到以下两个：
- en: 'Deployer: This is an open source PHP-based tool suited for automating deployments,
    available at [https://deployer.org](https://deployer.org)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Deployer：这是一个开源的基于PHP的工具，适用于自动化部署，可在[https://deployer.org](https://deployer.org)获取。
- en: 'AWS CodeDeploy: This is a code deployment service offered by AWS, available
    at [https://aws.amazon.com/codedeploy/](https://aws.amazon.com/codedeploy/)'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS CodeDeploy：这是AWS提供的代码部署服务，可在[https://aws.amazon.com/codedeploy/](https://aws.amazon.com/codedeploy/)获取。
- en: Unlike AWS CodeDeploy, the Deployer tool is service-independent. That is, we
    can use it to deploy code to any server upon which we have control, including
    the AWS EC2 instances. The AWS CodeDeploy, on the other hand, is a service tightly
    integrated into an AWS itself, meaning we cannot use it outside of the AWS. This
    does not mean Deployer is better than AWS CodeDeploy in this case. It simply goes
    to show that some cloud and PaaS services offer their own integrated solutions
    to automated deployments.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 与AWS CodeDeploy不同，Deployer工具是与服务无关的。也就是说，我们可以使用它将代码部署到我们有控制权的任何服务器，包括AWS EC2实例。另一方面，AWS
    CodeDeploy是一个紧密集成到AWS本身的服务，这意味着我们无法在AWS之外使用它。这并不意味着在这种情况下Deployer比AWS CodeDeploy更好。这只是表明一些云和PaaS服务为自动部署提供了自己集成的解决方案。
- en: Moving forward, let's take a quick look at how easily we can set Deployer to deploy
    code to our server machine.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们快速看一下如何轻松地设置Deployer来将代码部署到我们的服务器。
- en: Installing Deployer
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Deployer
- en: 'Installing Deployer is quite easy via the following few commands:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Deployer非常容易，只需使用以下几个命令：
- en: '[PRE10]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Running the `dep` console command now gives us the following output:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行`dep`控制台命令将给我们以下输出：
- en: '![](assets/f8658dbb-e27b-4db8-8939-841d1ef0cc88.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f8658dbb-e27b-4db8-8939-841d1ef0cc88.png)'
- en: Using Deployer
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Deployer
- en: 'There are several key concepts that comprise of the Deployer applications:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个构成Deployer应用程序的关键概念：
- en: '**Configuration**: Using the `set()` and `get()` functions, we set and fetch
    one or more configurations options:'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置**：使用`set()`和`get()`函数，我们设置和获取一个或多个配置选项：'
- en: '[PRE11]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Tasks**: These are units of work defined via the `task()` function, used
    together with the `desc()` method that sets the task description. Within the task,
    there is usually one or more functions, such as `run()`:'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务**：这些是通过`task()`函数定义的工作单元，与设置任务描述的`desc()`方法一起使用。在任务中，通常有一个或多个函数，比如`run()`：'
- en: '[PRE12]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**Servers**: This is the list of servers defined via the server() function, as
    shown in the following code snippet:'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务器**：这是通过`server()`函数定义的服务器列表，如下面的代码片段所示：'
- en: '[PRE13]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Flow**: This represents a group of tasks. The common type project uses a
    default flow as follows:'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流程**：这代表一组任务。通用类型项目使用默认流程如下：'
- en: '[PRE14]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We could easily create our own flow by changing this flow from the auto-generated
    `deploy.php` file.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过更改自动生成的`deploy.php`文件中的流程来轻松创建自己的流程。
- en: '**Functions**: This is a group of utility functions that provide useful functionality,
    such as `run()`, `upload()`, `ask()`, and others.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**函数**：这是提供有用功能的一组实用函数，比如`run()`、`upload()`、`ask()`等。'
- en: 'Using the Deployer tool is quite straightforward. Unless we already have some
    previously created recipes, we can create one simply by running the following
    console command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Deployer工具非常简单。除非我们已经有一些先前创建的配方，否则我们可以通过运行以下控制台命令简单地创建一个配方：
- en: '[PRE15]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This kicks off an interactive process, asking us to choose the type of project
    we are working with. Let''s proceed with the idea of deploying our MPHP7-CH16
    application from [https://github.com/ajzele/MPHP7-CH16](https://github.com/ajzele/MPHP7-CH16)
    repository, flagging it as [0] Common:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动一个交互式过程，要求我们选择正在处理的项目类型。让我们继续考虑从[https://github.com/ajzele/MPHP7-CH16](https://github.com/ajzele/MPHP7-CH16)存储库部署我们的MPHP7-CH16应用程序的想法，并将其标记为[0]
    Common：
- en: '![](assets/02df8f41-0871-4578-85c3-2892313e2b4b.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/02df8f41-0871-4578-85c3-2892313e2b4b.png)'
- en: 'This command generates the `deploy.php` file with its content as follows:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令生成`deploy.php`文件及其内容如下：
- en: '[PRE16]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'We should approach this file as a template that needs adjusting to our real
    servers. Assuming we wish to deploy our MPHP7-CH16 application to our previously
    provisioned `45.76.88.214` server, we can do so by adjusting the `deploy.php`
    file as follows:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该将这个文件视为需要调整到我们真实服务器的模板。假设我们希望将我们的MPHP7-CH16应用程序部署到我们之前配置的`45.76.88.214`服务器，我们可以通过调整`deploy.php`文件来实现：
- en: '[PRE17]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: We used the `set()` function to configure the location of the git repository.
    The `server()` function then defines the individual server we called `production`, behind
    a 45.76.88.214 IP. The `identityFile()` simply tells the system to use the SSH
    key instead of the password for the SSH connection. Next to the server, we defined
    two custom tasks, `web:symlink` and `apache:restart`. These make sure proper mapping
    is done from the Deployer's `/var/www/MPHP7/current/` directory to our `/var/www/html/`
    directory. The `after()` function calls simply define the order when our two custom
    jobs are supposed to execute, which is after the Deployer's `deploy:symlink` event.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`set()`函数来配置git存储库的位置。然后，`server()`函数定义了我们称之为`production`的单个服务器，位于45.76.88.214
    IP地址后面。`identityFile()`只是告诉系统使用SSH密钥而不是密码进行SSH连接。在服务器旁边，我们定义了两个自定义任务，`web:symlink`和`apache:restart`。这些任务确保从Deployer的`/var/www/MPHP7/current/`目录到我们的`/var/www/html/`目录进行正确映射。`after()`函数调用只是定义了我们的两个自定义任务应该在Deployer的`deploy:symlink`事件之后执行的顺序。
- en: 'To execute the amended deploy.php, we use the following console command:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行修改后的deploy.php，我们使用以下控制台命令：
- en: '[PRE18]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This should give us the following output:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该给我们以下输出：
- en: '![](assets/c9c49579-6533-4918-a566-48ebbaf9bc77.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c9c49579-6533-4918-a566-48ebbaf9bc77.png)'
- en: 'To confirm that the deployment was successful, opening `http://45.76.88.214/`
    should give us the following page:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 要确认部署成功，打开`http://45.76.88.214/`应该给我们以下页面：
- en: '![](assets/f90af051-6936-48f4-af14-49e7609bf3e7.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f90af051-6936-48f4-af14-49e7609bf3e7.png)'
- en: This simple Deployer script gave us a powerful way of automatically deploying code
    from our repository into a server. Scaling this to multiple servers is imaginably
    easy, given the Deployer's `server()` functions.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的Deployer脚本为我们提供了一个强大的方式，可以自动将代码从我们的存储库部署到服务器上。通过Deployer的`server()`函数，将其扩展到多个服务器是非常容易的。
- en: Continuous integration
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续集成
- en: The idea behind continuous integration is to bind together the building, testing,
    and releasing processes in an easy-to-oversee manner. As we mentioned before, the
    notion of building is a bit of a specific one when it comes to PHP, given the
    interpreted nature of the language itself; we are not talking about compiling
    code here. With PHP, we tend to relate it to various configurations required by
    our application.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 持续集成的理念是将构建、测试和发布过程以一种易于监督的方式绑定在一起。正如我们之前提到的，当涉及到PHP时，构建的概念有点特殊，因为语言本身的解释性；我们不是在谈论编译代码。对于PHP，我们倾向于将其与应用程序所需的各种配置相关联。
- en: 'That being said, some of the strong points of continuous integration include
    the following:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，持续集成的一些优点包括以下内容：
- en: Automated code coverage and quality check through static code analysis
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过静态代码分析自动化代码覆盖和质量检查
- en: Automation by running after each developer code push
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每次开发人员推送代码后自动运行
- en: Automated faulty code detection through unit and behavior testing
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过单元和行为测试自动检测错误代码
- en: Reduced application release cycle
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少应用程序发布周期
- en: Increased visibility across project
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目的可见性增加
- en: 'There are a dozen of continuous integration tools to chose from, some of which
    include the following:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 有数十种持续集成工具可供选择，其中包括以下工具：
- en: '**PHPCI**: [https://www.phptesting.org](https://www.phptesting.org)'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PHPCI**：[https://www.phptesting.org](https://www.phptesting.org)'
- en: '**Jenkins**: [http://jenkins-php.org](http://jenkins-php.org)'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jenkins**：[http://jenkins-php.org](http://jenkins-php.org)'
- en: '**Travis CI**: [https://travis-ci.org](https://travis-ci.org)'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Travis CI**：[https://travis-ci.org](https://travis-ci.org)'
- en: '**TeamCity**: [https://www.jetbrains.com/teamcity/](https://www.jetbrains.com/teamcity/)'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TeamCity**：[https://www.jetbrains.com/teamcity/](https://www.jetbrains.com/teamcity/)'
- en: '**Bamboo**: [https://www.atlassian.com/software/bamboo](https://www.atlassian.com/software/bamboo)'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 竹子：[https://www.atlassian.com/software/bamboo](https://www.atlassian.com/software/bamboo)
- en: '**AWS CodePipeline**: [https://aws.amazon.com/codepipeline/](https://aws.amazon.com/codepipeline/)'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS CodePipeline**：[https://aws.amazon.com/codepipeline/](https://aws.amazon.com/codepipeline/)'
- en: It would be unfair to say one of these tools is better than the others. Though
    Jenkins seems to resurface slightly more than others when it comes to PHP.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 说其中一个工具比其他工具更好是不公平的。尽管在涉及PHP时，Jenkins似乎比其他工具更常见。
- en: Jenkins
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jenkins
- en: 'Jenkins is an open source, self-contained, cross-platform, ready to run Java-based automation
    server. There are regularly two versions of Jenkins being released: **long term
    support** (**LTS**) and weekly releases. The LTS version gives it a bit of an
    enterprise-friendly feel, among other things:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Jenkins是一个开源的、自包含的、跨平台的、可运行的基于Java的自动化服务器。通常会发布两个版本的Jenkins：**长期支持**（**LTS**）和每周发布的版本。LTS版本使其具有一些企业友好的特性，除其他外：
- en: '![](assets/174cd357-c8e0-476b-8a75-7c85c2af7fde.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/174cd357-c8e0-476b-8a75-7c85c2af7fde.png)'
- en: Out-of-the-box, Jenkins does not really do anything for PHP code specifically,
    which is where plugins come into the mix.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: Jenkins默认情况下并不真正针对PHP代码做任何事情，这就是插件发挥作用的地方。
- en: 'The rich Jenkins plugin system enables us to easily install the plugins to
    work with the following PHP tools:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 丰富的Jenkins插件系统使我们能够轻松安装插件，以便与以下PHP工具一起使用：
- en: PHPUnit: This is a unit testing framework that is available at [https://phpunit.de/](https://phpunit.de/)
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHPUnit：这是一个可在[https://phpunit.de/](https://phpunit.de/)找到的单元测试框架
- en: PHP_CodeSniffer: This is a tool that detects violations against a certain set
    of coding standards, available at [https://github.com/squizlabs/PHP_CodeSniffer](https://github.com/squizlabs/PHP_CodeSniffer)
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP_CodeSniffer：这是一个检测违反一定编码标准的工具，可在[https://github.com/squizlabs/PHP_CodeSniffer](https://github.com/squizlabs/PHP_CodeSniffer)找到
- en: PHPLOC: This is a tool to quickly measure the size of a PHP project, which is
    available at [https://github.com/sebastianbergmann/phploc](https://github.com/sebastianbergmann/phploc)
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHPLOC：这是一个快速测量PHP项目大小的工具，可在[https://github.com/sebastianbergmann/phploc](https://github.com/sebastianbergmann/phploc)找到。
- en: PHP_Depend: This shows the quality of code design in the terms of extensibility,
    reusability, and maintainability, which is available at [https://github.com/pdepend/pdepend](https://github.com/pdepend/pdepend)
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP_Depend：这显示了代码设计在可扩展性、可重用性和可维护性方面的质量，可在[https://github.com/pdepend/pdepend](https://github.com/pdepend/pdepend)找到。
- en: PHPMD: This is the PHP mess detector, which is available at [https://phpmd.org/](https://phpmd.org/)
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHPMD：这是PHP混乱检测器，可在[https://phpmd.org/](https://phpmd.org/)找到。
- en: PHPCPD: This is the copy/paste detector for PHP code, which is available at
    [https://github.com/sebastianbergmann/phpcpd](https://github.com/sebastianbergmann/phpcpd)
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHPCPD：这是用于PHP代码的复制/粘贴检测器，可在[https://github.com/sebastianbergmann/phpcpd](https://github.com/sebastianbergmann/phpcpd)找到。
- en: phpDox: This is a documentation generator for PHP projects, which is available
    at [http://phpdox.de/](http://phpdox.de/)
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: phpDox：这是用于PHP项目的文档生成器，可在[http://phpdox.de/](http://phpdox.de/)找到。
- en: Plugins for these tools affect the automated testing bits that Jenkins is able
    to continuously run for us. The bits about code deployments are generally language-agnostic.
    Going into the details of plugin installation and the overall use of Jenkins,
    it is a topic for a book of its own. The takeaway here is to understand the importance
    and role of of continuous integration over the application life cycle, as well
    as to raise awareness of available tools.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具的插件影响了Jenkins能够持续运行的自动化测试部分。关于代码部署的部分通常与语言无关。深入讨论插件安装和Jenkins的整体使用是一本书的话题。重点是要理解持续集成在应用程序生命周期中的重要性和作用，以及提高对可用工具的认识。
- en: See [https://jenkins.io/doc/](https://jenkins.io/doc/) and [https://plugins.jenkins.io/](https://plugins.jenkins.io/)
    for more information.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[https://jenkins.io/doc/](https://jenkins.io/doc)和[https://plugins.jenkins.io/](https://plugins.jenkins.io/)。
- en: Summary
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we touched upon some of the non-coding essentials surrounding
    our application. While developers tend to avoid much of these system operations
    related activities, the hands-on experience with servers and their setups have
    a massive advantage with deployments and quick outage responses. Drawing a not-my-job
    line within our line of work is always a slippery slope. Working closely with
    system operations adds a layer of quality around our applications. The layer which
    the end-user might otherwise perceive as a fault in the application itself, rather
    than its infrastructure. Hosting, provisioning, and deployment have become topics
    every developer needs to be familiar with. The tools offering around these activities
    seem quite satisfactory in terms of availability and ease of use.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涉及了围绕我们应用程序的一些非编码基本要素。虽然开发人员倾向于避免许多与系统操作相关的活动，但与服务器及其设置的实际经验在部署和快速故障响应方面具有巨大优势。在我们的工作中划定“不是我的工作”界限总是一个很棘手的问题。与系统操作紧密合作为我们的应用程序增加了一层质量。最终用户可能会将其视为应用程序本身的故障，而不是其基础架构。托管、配置和部署已成为每个开发人员都需要熟悉的主题。围绕这些活动的工具在可用性和易用性方面似乎相当令人满意。
- en: Throughout the book, we covered a wide and seemingly independent range of topics.
    These show us that building applications is all but an easy and quick task. Knowing
    the ins and outs of the PHP language itself does not imply quality software. Giving
    structure to our code is among the first signs of modularity, which, in turn,
    reduces the impact of technical debt. This is where standards and design patterns
    play an important role. Testing, without a doubt, proved to be an essential part
    of every application. Luckily the PHP ecosystem provides rich testing frameworks
    to easily cover both the TDD and BDD styles. With the great new features added
    in PHP 7, writing quality PHP applications has never been easier.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们涵盖了广泛且看似独立的一系列主题。这些向我们表明构建应用程序绝非易事。了解PHP语言本身的方方面面并不意味着质量软件。给我们的代码结构化是模块化的第一个迹象，这反过来减少了技术债务的影响。这就是标准和设计模式发挥重要作用的地方。毫无疑问，测试被证明是每个应用程序的重要组成部分。幸运的是，PHP生态系统提供了丰富的测试框架，轻松覆盖TDD和BDD两种风格。在PHP
    7中增加的出色新功能，编写高质量的PHP应用程序变得更加容易。
- en: Hopefully, by now, we know enough about PHP, its ecosystem, and various other
    essential bits and pieces that comprise quality applications, in order to become
    proficient at developing them. With all being said, we conclude our journey.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 希望到现在为止，我们已经对PHP及其生态系统以及构成高质量应用程序的各种其他重要部分有足够的了解，以便能够熟练地开发它们。说了这么多，我们结束我们的旅程。
