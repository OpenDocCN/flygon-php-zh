- en: Chapter 2. Boosting Your Coding Productivity with the PHP Editor
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。通过PHP编辑器提高编码生产力
- en: In this chapter, we shall discuss how to increase our coding productivity using
    the editor, and how to get the most out of the NetBeans Editor.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论如何通过编辑器提高我们的编码生产力，以及如何充分利用NetBeans编辑器。
- en: 'We shall focus on the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重点关注以下内容：
- en: The base IDE features
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本IDE功能
- en: The editor for PHP
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP编辑器
- en: Rename refactoring and instant rename
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重命名重构和即时重命名
- en: Code completion
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码完成
- en: Code generators
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码生成器
- en: So let's get on with it...
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 那么让我们开始吧...
- en: Familiarizing yourself with the base IDE features
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 熟悉基本IDE功能
- en: 'As an IDE, NetBeans supports a wide range of features to boost your daily PHP
    development. It includes the editor, debugger, profiler, version control, and
    other collaborative features. The base IDE provides the following interesting
    features:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 作为IDE，NetBeans支持各种功能，以提高您的日常PHP开发。它包括编辑器、调试器、分析器、版本控制和其他协作功能。基本IDE提供以下有趣的功能：
- en: '**Quick search:** NetBeans provides you with a searching facility throughout
    the IDE, such as search within files, types, symbols, menu actions, options, help
    and open projects, Press *Ctrl+I* to focus on the search box. In the search results
    list, you will find the typed search term highlighted among the resultant items:![Familiarizing
    yourself with the base IDE features](graphics/5801_02_01.jpg)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速搜索：**NetBeans为您提供了IDE中的搜索功能，例如在文件、类型、符号、菜单操作、选项、帮助和打开项目中进行搜索，按*Ctrl+I*聚焦在搜索框上。在搜索结果列表中，您将找到输入的搜索词在结果项中的高亮显示：![熟悉基本IDE功能](graphics/5801_02_01.jpg)'
- en: '**Plugin manager:** From **Tools | Plugins**, you will have the plugin manager
    from where you can add, remove, or update features. Also, many interesting third-party
    plugins are available from the plugin portal. Note that from the installed plugin''s
    list, you can deactivate or uninstall plugins (CVS, Mercurial, and so on), which
    are not of your concern right now, but you may do that to free some resources,
    and add back those plugins whenever you want:![Familiarizing yourself with the
    base IDE features](graphics/5801_02_02.jpg)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**插件管理器：**从**工具 | 插件**，您将有插件管理器，可以添加、删除或更新功能。此外，许多有趣的第三方插件都可以从插件门户网站获得。请注意，您可以从已安装的插件列表中停用或卸载插件（如CVS、Mercurial等），这些插件目前并不是您关心的问题，但您可以这样做以释放一些资源，并在需要时重新添加这些插件：![熟悉基本IDE功能](graphics/5801_02_02.jpg)'
- en: '**Project manager:** From **Window | Projects** or by pressing *Ctrl+1*, you
    can fix the **Project Manager** pane of the IDE to perform operations on each
    of the available projects. Project operations, such as run, debug, test, generate
    documentation, check local history, set configuration, and set project properties
    can all be done at the project manager window:![Familiarizing yourself with the
    base IDE features](graphics/5801_02_03.jpg)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目管理器：**从**窗口 | 项目**或按*Ctrl+1*，您可以固定IDE的**项目管理器**窗格，以对每个可用项目执行操作。项目操作，如运行、调试、测试、生成文档、检查本地历史记录、设置配置和设置项目属性都可以在项目管理器窗口中完成：![熟悉基本IDE功能](graphics/5801_02_03.jpg)'
- en: '**File manager:** From **Window | Files** or by pressing *Ctrl+2*, you can
    fix the **File Manager** pane of the IDE to browse project files or to manipulate
    general file operations on the files available to the IDE:![Familiarizing yourself
    with the base IDE features](graphics/5801_02_04.jpg)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件管理器：**从**窗口 | 文件**或按*Ctrl+2*，您可以固定IDE的**文件管理器**窗格，以浏览项目文件或对IDE可用的文件进行一般文件操作：![熟悉基本IDE功能](graphics/5801_02_04.jpg)'
- en: '**Services manager:** From **Window | Services** or by pressing *Ctrl+5*, you
    can fix the **Services Manager** pane of the IDE to use the pre-registered **Software
    as a Service** (**SaaS**) web-service components. Drag the item from the **Services**
    tab, drop the item in the resource class, and you will have the necessary code
    generated to access the service. Also, the **Services** pane gives you access
    to all your connected databases:![Familiarizing yourself with the base IDE features](graphics/5801_02_05.jpg)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务管理器：**从**窗口 | 服务**或按*Ctrl+5*，您可以固定IDE的**服务管理器**窗格，以使用预注册的**软件即服务**（**SaaS**）Web服务组件。从**服务**选项卡中拖动项目，将项目放入资源类中，即可生成访问服务所需的代码。此外，**服务**窗格还可以让您访问所有连接的数据库：![熟悉基本IDE功能](graphics/5801_02_05.jpg)'
- en: '**Task manager:** From **Window | Tasks** or by pressing *Ctrl+6*, you can
    fix the **Tasks Manager** or Action Items pane of the IDE. NetBeans IDE automatically
    scans your code and lists the commented lines containing words, such as `TODO`
    or `FIXME`, and lines with compile errors, quick fixes, and style warnings. Connect
    to a bug database—**Bugzilla**, and list issue reports for your project right
    in the IDE. Note that double-clicking on a task will take you straight to where
    it has been declared:![Familiarizing yourself with the base IDE features](graphics/5801_02_06.jpg)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务管理器：**从**窗口 | 任务**或按*Ctrl+6*，您可以固定IDE的**任务管理器**或操作项窗格。NetBeans IDE会自动扫描您的代码，并列出包含诸如`TODO`或`FIXME`等单词的注释行，以及包含编译错误、快速修复和样式警告的行。连接到bug数据库—**Bugzilla**，并在IDE中列出项目的问题报告。请注意，双击任务将直接带您到声明该任务的位置：![熟悉基本IDE功能](graphics/5801_02_06.jpg)'
- en: '**Navigate:** From the **Navigate** menu, the IDE provides navigation to a
    file, type, symbol, line, bookmark, and so on. Such features are used for a quick
    jump over the desired location in the project, or outside of it:![Familiarizing
    yourself with the base IDE features](graphics/5801_02_07.jpg)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导航：**从**导航**菜单，IDE提供了对文件、类型、符号、行、书签等的导航。这些功能用于快速跳转到项目中或项目外所需的位置：![熟悉基本IDE功能](graphics/5801_02_07.jpg)'
- en: 'As shown in the previous screenshot, as soon as we type in the filename, the
    IDE shows a dynamic list of matched file names in the **Matching Files** box,
    so that you can quickly open that file:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一截屏所示，一旦我们输入文件名，IDE会显示**匹配文件**框中匹配的文件名的动态列表，这样您就可以快速打开该文件：
- en: '![Familiarizing yourself with the base IDE features](graphics/5801_02_08.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![熟悉基本IDE功能](graphics/5801_02_08.jpg)'
- en: Tip
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Press *Alt+Shift+O* to open **Go to file**, *Ctrl+O* to open **Go to type**,
    *Ctrl+B* to open **Go to declaration**, *Ctrl+G* to open **Go to line**, and so
    on.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 按*Alt+Shift+O*打开**转到文件**，按*Ctrl+O*打开**转到类型**，按*Ctrl+B*打开**转到声明**，按*Ctrl+G*打开**转到行**，等等。
- en: '**Templates and sample applications:** You can start a similar new project
    with the given sample applications in the IDE. To do this, start a new project
    by pressing *Ctrl+Shift+N* and choose **Samples | PHP** from **Project Categories**.
    Also, you may use templates, such as the templates of PHP files, and web pages
    from **Tools | Templates:**![Familiarizing yourself with the base IDE features](graphics/5801_02_09.jpg)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模板和示例应用程序：**您可以在IDE中使用给定的示例应用程序开始类似的新项目。要做到这一点，按*Ctrl+Shift+N*开始一个新项目，并从**项目类别**中选择**Samples
    | PHP**。此外，您可以使用模板，如PHP文件的模板和**Tools | Templates**中的网页模板：![熟悉基本IDE功能](graphics/5801_02_09.jpg)'
- en: '**Customizable workspace and windows:** The entire IDE workspace is fully customizable,
    so that you can drag, slide, resize, and place toolbars & panes to your desired
    place. Also, you can dock or undock panes at your workspace, to make it fully
    comfortable for access and use:![Familiarizing yourself with the base IDE features](graphics/5801_02_10.jpg)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可定制的工作区和窗口：**整个IDE工作区是完全可定制的，因此您可以将工具栏和窗格拖动、滑动、调整大小并放置到所需的位置。此外，您可以在工作区内停靠或取消停靠窗格，使其完全适合访问和使用：![熟悉基本IDE功能](graphics/5801_02_10.jpg)'
- en: Tip
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can manage windows in your workspace easily; double-click on an editor tab
    to expand it. *Ctrl+Tab* shows the opened file's list, and pressing it again will
    cause it to switch between the editor tabs. *Ctrl+Pageup/Down* switches among
    the opened files. Press *Ctrl+W* to close the current file window.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以轻松管理工作区中的窗口；双击编辑器选项卡以展开它。*Ctrl+Tab*显示已打开文件的列表，再次按下将导致在编辑器选项卡之间切换。*Ctrl+Pageup/Down*在已打开的文件之间切换。按*Ctrl+W*关闭当前文件窗口。
- en: '**Multiple monitors:** You can undock any editor tab and drag it outside the
    IDE, so that it can act like an independent window, and you can easily move it
    to a second screen. Also, you can reverse the procedure to dock it back again
    in the previous screen. Note that all of the shortcuts will remain the same in
    the second screen; for example, drag out the **Files** tab and click anywhere
    else in the IDE, and then press *CTRL+2* to regain focus on the files window.![Familiarizing
    yourself with the base IDE features](graphics/5801_02_11.jpg)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多个监视器：**您可以取消停靠任何编辑器选项卡并将其拖出IDE，使其可以像独立窗口一样运行，并且可以轻松地将其移动到第二个屏幕上。此外，您可以反向操作将其重新停靠在以前的屏幕上。请注意，第二个屏幕中的所有快捷键仍将保持不变；例如，拖出**Files**选项卡，然后单击IDE中的其他任何位置，然后按*CTRL+2*重新聚焦文件窗口。![熟悉基本IDE功能](graphics/5801_02_11.jpg)'
- en: '**Local history:** Local history is similar to a classic versioning system
    in which it stores multiple versions of files. However, the storage is only local
    to your NetBeans installation. Local history enables you to examine the content
    within files and folders on time, lets you **diff** them, and most importantly,
    lets you roll back your sources to some previous state, or revert already deleted
    files or folders.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地历史记录：**本地历史记录类似于经典的版本控制系统，它存储文件的多个版本。但是，存储仅限于您的NetBeans安装。本地历史记录使您能够检查文件和文件夹中的内容，让您**diff**它们，最重要的是，让您将源代码回滚到以前的状态，或者恢复已删除的文件或文件夹。'
- en: '**Spellchecker:** Spellcheck the text in the editor.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拼写检查器：**检查编辑器中的文本拼写。'
- en: Note
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: See the Appendix for NetBeans IDE keyboard shortcuts.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅NetBeans IDE键盘快捷键附录。
- en: Pop quiz — familiarizing yourself with basic IDE features
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小测验——熟悉基本IDE功能
- en: Which is not an IDE feature?
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个不是IDE功能？
- en: Source code editor
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 源代码编辑器
- en: Debugger
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调试器
- en: Plugin manager
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插件管理器
- en: Source code optimizer
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 源代码优化器
- en: Under which menu can all the IDE windows be enabled or focused?
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在哪个菜单下可以启用或聚焦所有IDE窗口？
- en: File menu
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件菜单
- en: Tools menu
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工具菜单
- en: Navigate menu
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航菜单
- en: Windows menu
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 窗口菜单
- en: Which is the correct command to open the **Go to a File** window?
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个是打开**转到文件**窗口的正确命令？
- en: CTRL+F
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CTRL+F
- en: CTRL+SHIFT+O
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CTRL+SHIFT+O
- en: ALT+SHIFT+O
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ALT+SHIFT+O
- en: CTRL+G
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CTRL+G
- en: Why is the keyboard shortcut *CTRL+SHIFT+N* used?
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么使用键盘快捷键*CTRL+SHIFT+N*？
- en: To open a new template file
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的模板文件
- en: To open a new PHP file
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的PHP文件
- en: To open a new PHP project
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的PHP项目
- en: To open the Project window
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开项目窗口
- en: What is the keyboard shortcut to fix the **File manager** pane?
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修复**文件管理器**窗格的键盘快捷键是什么？
- en: CTRL+1
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CTRL+1
- en: CTRL+2
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CTRL+2
- en: CTRL+3
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CTRL+3
- en: CTRL+5
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CTRL+5
- en: Exploring the editor for PHP
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索PHP编辑器
- en: 'In this section, we will learn how to get the most out of the editor for PHP
    in NetBeans. The editor provides very handy code-authoring features, and we shall
    learn those important features by testing them in our editor. Once we are familiar
    with the following features, we will rule the editor. All you have to do is just
    practice the commands mentioned for the following features. Here we go:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何充分利用NetBeans中的PHP编辑器。编辑器提供非常方便的代码编写功能，我们将通过在编辑器中测试这些重要功能来学习它们。一旦我们熟悉了以下功能，我们就能掌握编辑器。您只需要练习以下功能的命令。我们开始吧：
- en: '**Syntax highlighting:** This editor enables the highlighting of syntax elements,
    such as PHP keywords, variables, constants, HTML tags, and input form attributes.
    In the editor, the current line is marked with a light blue background, and the
    line where any error occurred is displayed with a red underline, as shown in the
    following screenshot:![Exploring the editor for PHP](graphics/5801_02_12.jpg)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法高亮：**此编辑器使语法元素（如PHP关键字、变量、常量、HTML标记和输入表单属性）高亮显示。在编辑器中，当前行用浅蓝色背景标记，发生错误的行用红色下划线显示，如下图所示：![探索PHP编辑器](graphics/5801_02_12.jpg)'
- en: Tip
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Double-click to select a syntax element. Press *Ctrl+F* for syntax searching
    to highlight all the occurrences of the syntax element.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 双击选择语法元素。按*Ctrl+F*进行语法搜索以突出显示语法元素的所有出现。
- en: '**Go To Declaration:** The **Go To Declaration** feature provides an instant
    jump to the line where a variable or method has been declared from its occurrence:![Exploring
    the editor for PHP](graphics/5801_02_13.jpg)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转到声明：** **转到声明**功能可立即跳转到变量或方法的声明行，从其出现位置：![探索PHP编辑器](graphics/5801_02_13.jpg)'
- en: Tip
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In order to use this feature, place the cursor on a desired variable or method,
    and press *Ctrl+B*, or click on the context menu that appeared on the right-hand
    side of the screen, choose **Navigate | Go to Declaration** to have your cursor
    placed at the start of the line where it was declared. Pressing *Ctrl+left-click*
    will also direct you to the declaration, along with all the occurrences that are
    highlighted.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用此功能，请将光标放在所需的变量或方法上，然后按*Ctrl+B*，或单击出现在屏幕右侧的上下文菜单，选择**导航|转到声明**，将光标放在声明的起始行。按*Ctrl+单击*也会将您引导到声明处，并突出显示所有出现的情况。
- en: '**Code navigator:** The **Code navigator** pane dynamically lists the in-file
    PHP structure, HTML tags in hierarchical order; simply, it lists the namespaces,
    functions, methods, classes, variables, class properties, HTML tags, and so on
    within the file. Double-click on any item on the list to go to that declaration:![Exploring
    the editor for PHP](graphics/5801_02_14.jpg)'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码导航器：** **代码导航器**窗格动态列出文件中的PHP结构，按层次顺序列出HTML标记；简单地列出文件中的命名空间、函数、方法、类、变量、类属性、HTML标记等。双击列表中的任何项目以转到该声明：![探索PHP编辑器](graphics/5801_02_14.jpg)'
- en: Tip
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: From **Window | Navigating | Navigator** or by pressing *Ctrl+7*, you can focus
    on the code navigator pane. The listed items are iconized according to relevant
    item properties.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 从**窗口|导航|导航器**或按*Ctrl+7*，您可以专注于代码导航器窗格。列出的项目根据相关项目属性进行图标化。
- en: '**Code folding:** The editor provides you with the code block fold/unfold feature
    for classes, methods, comment blocks, HTML tags, CSS style classes, and so on.
    You can fold/unfold large code blocks using such features, right beside the left
    margin of the editor, as shown in the following screenshot:![Exploring the editor
    for PHP](graphics/5801_02_15.jpg)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码折叠：**编辑器为您提供了用于类、方法、注释块、HTML标记、CSS样式类等的代码块折叠/展开功能。您可以使用这些功能在编辑器左边缘旁边折叠/展开大型代码块，如下面的屏幕截图所示：![探索PHP编辑器](graphics/5801_02_15.jpg)'
- en: Tip
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Click on the " " or "+" button from the left side of the screen to fold and
    unfold code blocks.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 单击屏幕左侧的“”或“+”按钮，折叠和展开代码块。
- en: '**Smart indent:** The editor provides an automatic indentation before the code,
    while typing and hitting on new lines:![Exploring the editor for PHP](graphics/5801_02_16.jpg)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**智能缩进：**编辑器在键入并按下新行时会在代码之前提供自动缩进：![探索PHP编辑器](graphics/5801_02_16.jpg)'
- en: Type an `if` or `for` statement line, and press *Enter* to see the next line
    indented.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`if`或`for`语句行，然后按*Enter*键以查看下一行缩进。
- en: '**Formatting:** To make the code more understandable, the editor provides you
    with a formatting facility, which maintains appropriate statement hierarchy and
    applies line breaks, spaces, indents, and so on within the code file:![Exploring
    the editor for PHP](graphics/5801_02_17.jpg)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**格式化：**为了使代码更易于理解，编辑器为您提供了格式化功能，该功能维护适当的语句层次结构，并在代码文件中应用换行、空格、缩进等：![探索PHP编辑器](graphics/5801_02_17.jpg)'
- en: Tip
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Select the code block you want to format. Right-click on the context menu, choose
    **Format**, or press *Alt+Shift+F*. To format the entire code file, choose **Source
    | Format**, or press *Ctrl+A* and *Alt+Shift+F*.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 选择要格式化的代码块。右键单击上下文菜单，选择**格式**，或按*Alt+Shift+F*。要格式化整个代码文件，请选择**源|格式**，或按*Ctrl+A*和*Alt+Shift+F*。
- en: '**Bracket completion:** The consecutive second character of the paired characters
    item such as single quotes (''''), double quotes (""), braces (()), and brackets
    ([]) are automatically added with the first character type, and the paired consecutive
    character is removed with the first one deleted again. Also, the pair of curly
    brackets ({}) is completed when the first character is typed, and *Enter* is pressed.
    A pair of braces, curly braces, and brackets are highlighted with the yellow color
    when any of the characters from matching pairs are pointed at with the cursor,
    as follows:![Exploring the editor for PHP](graphics/5801_02_18.jpg)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**括号补全：**成对字符项的连续第二个字符（例如单引号（''''），双引号（""），括号（（）），方括号（[]））会自动添加第一个字符类型，并且成对的连续字符会随着第一个字符的删除而删除。当键入第一个字符并按*Enter*时，大括号{}的一对会被补全。当光标指向匹配对中的任何字符时，大括号、花括号和方括号会以黄色突出显示，如下所示：![探索PHP编辑器](graphics/5801_02_18.jpg)'
- en: '**Parameter hints:** The editor prompts you to choose the formal parameters
    of a PHP default or custom function just as soon as you start typing that function
    name. The automatic suggestion list with the function names and parameters will
    show at the bottom of the cursor, and the description of that selected function
    will show at the top of the cursor:![Exploring the editor for PHP](graphics/5801_02_19.jpg)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**参数提示：**编辑器在您开始键入函数名称时会提示您选择PHP默认或自定义函数的形式参数。带有函数名称和参数的自动建议列表将显示在光标底部，所选函数的描述将显示在光标顶部：![探索PHP编辑器](graphics/5801_02_19.jpg)'
- en: 'In the previous auto-suggestion list, you may traverse using the `Up/Down`
    arrow keys. You can hit *Enter* to insert the desired function name with the placeholders,
    to insert the parameters within the brackets:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个自动建议列表中，您可以使用“上/下”箭头键进行遍历。您可以按*Enter*键插入带有占位符的所需函数名称，以在括号内插入参数：
- en: '![Exploring the editor for PHP](graphics/5801_02_20.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![探索PHP编辑器](graphics/5801_02_20.jpg)'
- en: '**Defining a variable type in comments:** You can define a variable and its
    type in comments, in the format `/* @var $variable type */`. The `var` tag will
    be in bold font, if the comment was written correctly:![Exploring the editor for
    PHP](graphics/5801_02_21.jpg)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在注释中定义变量类型：**您可以在注释中定义变量及其类型，格式为`/* @var $variable type */`。如果注释编写正确，则`var`标签将以粗体字显示：![探索PHP编辑器](graphics/5801_02_21.jpg)'
- en: In the previous screenshots, you can see how the comment for variable name and
    type dominates the auto suggestion. In the previous example, you can see that
    method names have been picked from the corresponding class name, mentioned as
    a variable type in the comment.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，您可以看到变量名称和类型的注释如何支配自动建议。在前面的示例中，您可以看到方法名称是从相应的类名称中提取的，该类名称在注释中作为变量类型提到。
- en: 'Type `vdoc`, and press `Tab` to use the code template for the variable documentation.
    A comment will be generated, which defines a variable. Once the variable name
    is selected, change it, and press `Tab` again, to change the type:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 键入`vdoc`，然后按`Tab`键使用变量文档的代码模板。将生成一个定义变量的注释。一旦选择了变量名称，更改它，然后再次按`Tab`键，以更改类型：
- en: '![Exploring the editor for PHP](graphics/5801_02_22.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![探索PHP编辑器](graphics/5801_02_22.jpg)'
- en: The code template automatically generates a variable name and type in the context
    of a comment position; that is, if you use the template just before the variable
    was used, then it will suggest that variable name and type.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 代码模板会自动生成变量名称和类型，以适应注释位置；也就是说，如果您在使用模板之前使用变量，则它将建议该变量名称和类型。
- en: '**Error messages:** The editor parses your PHP code while typing, marks the
    syntax errors with a red underline, places a red error bullet in the left margin,
    and a red error scroll position in the right margin.![Exploring the editor for
    PHP](graphics/5801_02_23.jpg)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误消息：**编辑器在输入时解析您的PHP代码，用红色下划线标记语法错误，在左边缘放置红色错误标志，在右边缘放置红色错误滚动位置。![探索PHP编辑器](graphics/5801_02_23.jpg)'
- en: Tip
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can see the error details in a tool tip, by hovering over the erroneous
    line or by clicking on the red error bullet on the left side of the screen. Press
    *Alt+Enter* to show error hints.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过将鼠标悬停在错误行上或单击屏幕左侧的红色错误标志来查看工具提示中的错误详细信息。按*Alt+Enter*显示错误提示。
- en: See the Appendix for NetBeans IDE keyboard shortcuts.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅NetBeans IDE键盘快捷键附录。
- en: Pop quiz — exploring the editor for PHP
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弹出测验-探索PHP编辑器
- en: Which functionality is not an editor feature?
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个功能不是编辑器功能？
- en: Source code formatting
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 源代码格式化
- en: Code auto completion
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码自动完成
- en: Syntax highlighting
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 语法高亮
- en: Debugging
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调试
- en: How do you format a code block?
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何格式化代码块？
- en: Select the code block by right-clicking on the context menu, and choose **Format**
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右键单击上下文菜单选择代码块，然后选择**格式**
- en: Select the code block and press *ALT+SHIFT+F*
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择代码块，然后按*ALT+SHIFT+F*
- en: Select the code block and choose **Source | Format**
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择代码块，然后选择**源代码|格式**
- en: All of the above
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上所有
- en: What is the syntax-searching keyboard command?
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是语法搜索键盘命令？
- en: '*CTRL+W*'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*CTRL+W*'
- en: '*CTRL+F*'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*CTRL+F*'
- en: '*CTRL+ALT+F*'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*CTRL+ALT+F*'
- en: '*CTRL+SHIFT+S*'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*CTRL+SHIFT+S*'
- en: How to go to the declaration of a method?
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何转到方法的声明？
- en: Place the cursor on the method and press *CTRL+B*
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在方法上，然后按*CTRL+B*
- en: Right-click on the method name, and choose **Navigate | Go to Declaration**
    from the context menu
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击方法名称，然后从上下文菜单中选择**导航|转到声明**
- en: Press *CTRL+left-click* on the method name
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在方法名称上按*CTRL+单击*
- en: All of the above
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上所有
- en: Exploring more with the editor
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多探索编辑器
- en: We have learned about the editor and practiced the shortcuts given as tips.
    In the next two sections, we will learn to use the rename refactoring, code completion,
    and code generator features of the editor, which are really helpful to boost coding.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了编辑器并练习了提示中给出的快捷方式。在接下来的两节中，我们将学习如何使用重命名重构、代码完成和编辑器的代码生成功能，这些功能对于提高编码非常有帮助。
- en: 'In the next section, we will discuss and practice the following important editor
    features:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论和练习以下重要的编辑器功能：
- en: Rename refactoring and instant rename
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重命名重构和即时重命名
- en: Code completion
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码完成
- en: Code generators
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码生成器
- en: Using rename refactoring and instant rename
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用重命名重构和即时重命名
- en: You can rename an element, such as a class name, across all files in a project.
    This feature enables you to preview the possible changes in every location for
    that desired rename, and you can exclude individual occurrences from being renamed.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在项目中的所有文件中重命名一个元素，例如类名。此功能使您可以预览所需重命名的每个位置的可能更改，并且您可以排除个别出现不被重命名。
- en: 'Instant rename lets you rename an element within a file. For instant rename,
    place the cursor on the name you want to rename, and press *Ctrl+R*; if instant
    rename is applicable to that variable, then all the instances of that variable
    are highlighted as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 即时重命名允许您在文件中重命名元素。对于即时重命名，将光标放在要重命名的名称上，然后按*Ctrl+R*；如果该变量适用于即时重命名，则该变量的所有实例将被突出显示如下：
- en: '![Using rename refactoring and instant rename](graphics/5801_02_24.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![使用重命名重构和即时重命名](graphics/5801_02_24.jpg)'
- en: 'A change in even one instance of that name will rename all other instances
    in the file simultaneously:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 即使只有一个实例的名称发生变化，也会同时重命名文件中的所有其他实例：
- en: '![Using rename refactoring and instant rename](graphics/5801_02_25.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![使用重命名重构和即时重命名](graphics/5801_02_25.jpg)'
- en: 'To use rename refactoring, select the element to rename, then right-click,
    and select **Refactor | Rename**. A dialog box opens for you to rename the element,
    as shown in the next screenshot:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用重命名重构，选择要重命名的元素，然后右键单击，选择**重构|重命名**。将打开一个对话框，供您重命名元素，如下一张截图所示：
- en: '![Using rename refactoring and instant rename](graphics/5801_02_26.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![使用重命名重构和即时重命名](graphics/5801_02_26.jpg)'
- en: 'In this screenshot, provide a new name for the element and click on **Preview**.
    The refactoring window opens with all the instances of the element listed within
    the project:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在此截图中，为元素提供一个新名称，然后单击**预览**。重构窗口将打开，并列出项目中元素的所有实例：
- en: '![Using rename refactoring and instant rename](graphics/5801_02_27.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![使用重命名重构和即时重命名](graphics/5801_02_27.jpg)'
- en: From this screenshot, you can exclude the instances and apply **Do Refactoring**
    to the selected instances.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个截图中，您可以排除实例并对所选实例应用**进行重构**。
- en: Note
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: See the Appendix for NetBeans IDE keyboard shortcuts.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅NetBeans IDE键盘快捷键附录。
- en: Pop quiz — using rename refactoring and instant rename
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小测验——使用重命名重构和即时重命名
- en: How do you refactor a variable name throughout the project?
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在整个项目中重构变量名？
- en: Select the variable, then right-click and select **Refactor | Rename**
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择变量，然后右键单击并选择**重构 | 重命名**
- en: Place the cursor on the variable name, and press *CTRL+SHIFT+R*
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在变量名上，然后按下*CTRL+SHIFT+R*
- en: Select the variable, and select **Source | Rename**
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择变量，然后选择**源 | 重命名**
- en: None of the above
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上都不是
- en: Which is the shortcut on a variable for instant rename?
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个是变量的即时重命名快捷键？
- en: '*SHIFT+ALT+R*'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*SHIFT+ALT+R*'
- en: '*CTRL+R*'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*CTRL+R*'
- en: '*CTRL+ALT+R*'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*CTRL+ALT+R*'
- en: '*CTRL+SPACE+R*'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*CTRL+SPACE+R*'
- en: Using code completion
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码完成
- en: The code completion feature enables us to complete the desired syntax, methods,
    or code with some minimal keystrokes, or just with a keyboard command.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 代码完成功能使我们能够以最少的按键或仅使用键盘命令完成所需的语法、方法或代码。
- en: Tip
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can enable/disable automatic code completion from **Tools | Options | Editor
    | Code Completion**. By default, you will have checkboxes for all languages. Choose
    PHP from the **Language** drop-down list to have more PHP-specific code completion
    options.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从**工具 | 选项 | 编辑器 | 代码完成**启用/禁用自动代码完成。默认情况下，您将为所有语言都有复选框。从**语言**下拉列表中选择PHP，以获得更多针对PHP的代码完成选项。
- en: '![Using code completion](graphics/5801_02_28.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![使用代码完成](graphics/5801_02_28.jpg)'
- en: 'Following are the code completion features provided by the editor:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是编辑器提供的代码完成功能：
- en: '**Snippets:** This automatically generates code snippets for various elements.![Using
    code completion](graphics/5801_02_29.jpg)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**片段：**这会自动生成各种元素的代码片段。![使用代码完成](graphics/5801_02_29.jpg)'
- en: Select **Tools | Pallete | PHP** Code Clips, and **Pallete Manager** will open.
    Drag the relevant item icon from **Pallete Content**, and drop it to the relevant
    position in your code. A dialog box will appear for specifying the parameters
    of the corresponding code item. Fill in the parameters, and have the code generated
    in that place.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**工具 | 调色板 | PHP**代码片段，然后**调色板管理器**将打开。从**调色板内容**中拖动相关项目图标，并将其放置到代码中的相关位置。将出现一个对话框，用于指定相应代码项的参数。填写参数，然后在该位置生成代码。
- en: '**Context-sensitive proposals:** The editor provides context-sensitive proposals
    for any number of starting symbols for:'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上下文敏感的建议：**编辑器为任意数量的起始符号提供上下文敏感的建议：'
- en: A PHP keyword, including `if, else, elseif, while, switch, function` and so
    on.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个PHP关键字，包括`if、else、elseif、while、switch、function`等。
- en: A PHP built-in function.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个PHP内置函数。
- en: A pre-defined or user-defined variable.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预定义或用户定义的变量。
- en: 'Type the starting characters of a keyword or a function name, and press *Ctrl+Space*
    bar. A drop-down list will show all the applicable proposals for that context.
    Each proposal is supplied with a description and parameter hints:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 输入关键字或函数名的起始字符，然后按下*Ctrl+Space*。下拉列表将显示该上下文的所有适用建议。每个建议都附有描述和参数提示：
- en: '![Using code completion](graphics/5801_02_30.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![使用代码完成](graphics/5801_02_30.jpg)'
- en: 'To generate a list of PHP keywords, which is applicable in the current context,
    press *Ctrl+Space* bar without typing anything:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成适用于当前上下文的PHP关键字列表，请按下*Ctrl+Space*，而不输入任何内容：
- en: '![Using code completion](graphics/5801_02_31.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![使用代码完成](graphics/5801_02_31.jpg)'
- en: 'To obtain a hint on a variable, type the dollar (`$`) symbol. A list of currently-available
    local and global variables will be displayed:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取有关变量的提示，请键入美元符号（`$`）。将显示当前可用的本地和全局变量列表：
- en: '![Using code completion](graphics/5801_02_32.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![使用代码完成](graphics/5801_02_32.jpg)'
- en: '**Code templates and abbreviations:** This obtains the expanded code template
    by using defined abbreviations of that template, such as `cls` for a class template,
    and is the most interesting code-completion feature. To use this functionality,
    type the abbreviation and press *Tab:*![Using code completion](graphics/5801_02_33.jpg)'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码模板和缩写：**通过使用定义的缩写来获取扩展的代码模板，例如`cls`表示类模板，这是最有趣的代码完成功能。要使用此功能，请键入缩写并按下*Tab:*![使用代码完成](graphics/5801_02_33.jpg)'
- en: 'You can see that the abbreviation is replaced with the corresponding PHP keyword,
    and the code template for that keyword has been provided by the editor, as per
    the following screenshot:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到缩写被替换为相应的PHP关键字，并且编辑器提供了该关键字的代码模板，如下截图所示：
- en: '![Using code completion](graphics/5801_02_34.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![使用代码完成](graphics/5801_02_34.jpg)'
- en: 'To view the list of code templates with their associated abbreviations, Select
    **Tools | Options | Editor | Code** Templates. You can add/remove or edit your
    PHP code templates as shown in the following screenshot:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 查看代码模板列表及其相关缩写，选择**工具 | 选项 | 编辑器 | 代码**模板。您可以根据以下截图中显示的方式添加/删除或编辑您的PHP代码模板：
- en: '![Using code completion](graphics/5801_02_35.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![使用代码完成](graphics/5801_02_35.jpg)'
- en: Note that coding methods change over time. So, it is recommended to have a look
    into your templates every few months, and update them to comply with any new changes.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，编码方法会随着时间而改变。因此，建议每隔几个月查看您的模板，并更新以符合任何新变化。
- en: '**Code completion in constructors:** After the `new` keyword, code completion
    is displayed along with the list of constructors and parameters for all the classes
    available in the current project:![Using code completion](graphics/5801_02_36.jpg)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构造函数中的代码完成：**在`new`关键字之后，将显示代码完成以及当前项目中所有类的构造函数和参数列表：![使用代码完成](graphics/5801_02_36.jpg)'
- en: '**SQL code completion:** When a string begins with SQL keywords such as `select`
    and `insert`, pressing *Ctrl+Space* after that keyword enables the SQL code-completion
    feature inside the editor. You can select the database connection in the first
    step, as shown in the following screenshot:![Using code completion](graphics/5801_02_37.jpg)'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL代码完成：**当字符串以SQL关键字（如`select`和`insert`）开头时，按下该关键字后的*Ctrl+Space*将在编辑器内启用SQL代码完成功能。您可以在第一步中选择数据库连接，如下面的屏幕截图所示：![使用代码完成](graphics/5801_02_37.jpg)'
- en: Along with being selected, all the database connections registered with the
    IDE will be displayed as follows:![Using code completion](graphics/5801_02_38.jpg)
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被选中的所有与IDE注册的数据库连接将显示如下：![使用代码完成](graphics/5801_02_38.jpg)
- en: After selecting the database connection, the SQL code completion feature offers
    all the tables associated with that connection:![Using code completion](graphics/5801_02_39.jpg)
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择数据库连接后，SQL代码完成功能将提供与该连接关联的所有表：![使用代码完成](graphics/5801_02_39.jpg)
- en: Also, the list of columns (if any) will be displayed from that table. SQL code
    completion also works with table aliases.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还将从该表中显示列（如果有）。SQL代码完成还适用于表别名。
- en: '**PHP 5.3 namespaces:** Code completion supports PHP 5.3 namespaces.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PHP 5.3命名空间：**代码完成支持PHP 5.3命名空间。'
- en: '**Overridden and implemented methods:** Code completion between class members
    offers to override or implement methods.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重写和实现的方法：**类成员之间的代码完成提供了重写或实现方法的选项。'
- en: Tip
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Press *Ctrl+Space* bar wherever you wish to use code completion.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在希望使用代码完成的地方按下*Ctrl+Space*。
- en: See the Appendix for NetBeans IDE keyboard shortcuts.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 有关NetBeans IDE键盘快捷键，请参见附录。
- en: Pop quiz — using code completion
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小测验——使用代码完成
- en: Why is the code completion feature used?
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么要使用代码完成功能？
- en: To refactor a variable
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重构变量
- en: To write a new PHP class
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写新的PHP类
- en: To complete the desired syntax, methods, or code
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成所需的语法、方法或代码的快捷键
- en: To complete a PHP project
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成PHP项目
- en: Which PHP language feature does the code completion feature not support?
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码完成功能不支持哪种PHP语言特性？
- en: Namespace
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命名空间
- en: Class declaration
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类声明
- en: Override methods
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重写方法
- en: None of the above
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上都不是
- en: What is the shortcut to enable the context-sensitive proposal?
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用上下文敏感建议的快捷键是什么？
- en: Ctrl+Shift+Space
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ctrl+Shift+Space
- en: Ctrl+Space
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ctrl+Space
- en: Ctrl+S
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ctrl+S
- en: Ctrl+Alt+Space
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ctrl+Alt+Space
- en: Using the code generator
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码生成器
- en: The editor provides context-sensitive code generators, so as to generate a database
    connection, constructors, getters or setters, and so on. A specific code generator
    will appear in the context of cursor location. For example, inside a class, it
    will display for generating constructors, getters, setters, and so on.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑器提供了上下文敏感的代码生成器，以便生成数据库连接、构造函数、getter或setter等。特定的代码生成器将出现在光标位置的上下文中。例如，在类内部，它将显示用于生成构造函数、getter、setter等的选项。
- en: 'As an example, press *Alt+Insert* inside a class to open all possible code
    generators, as shown in the following screenshot:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，按*Alt+Insert*在类内部打开所有可能的代码生成器，如下面的屏幕截图所示：
- en: '![Using the code generator](graphics/5801_02_40.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![使用代码生成器](graphics/5801_02_40.jpg)'
- en: 'We will discuss the following code generators:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论以下代码生成器：
- en: '**Constructors:** Inside a PHP class (but not inside any method''s body), you
    can open the constructor generator by pressing *Alt+Insert*. Select **Generate
    Constructor**, and a dialog box similar to the following screenshot will appear:![Using
    the code generator](graphics/5801_02_41.jpg)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构造函数：**在PHP类内（但不在任何方法体内），您可以按*Alt+Insert*打开构造函数生成器。选择**生成构造函数**，将出现类似于以下屏幕截图的对话框：![使用代码生成器](graphics/5801_02_41.jpg)'
- en: The window comes with a list of available fields that you can initialize in
    the constructor. Field names are used as parameters of the constructor. You can
    decide not to select any fields; an empty constructor will be generated in such
    a case.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 该窗口列出了可以在构造函数中初始化的可用字段。字段名称用作构造函数的参数。您可以决定不选择任何字段；在这种情况下将生成一个空的构造函数。
- en: '**Getters and setters:** By pressing the code generator command inside a PHP
    class, you can choose **Getters..., Setters...**, or **Getters and Setters** to
    view the possible functions. If you already have setters, then you will only view
    the getter methods:![Using the code generator](graphics/5801_02_42.jpg)'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Getter和setter：**通过在PHP类内部按代码生成器命令，您可以选择**Getters...，Setters...**或**Getters
    and Setters**来查看可能的函数。如果您已经有setter，那么您只会看到getter方法：![使用代码生成器](graphics/5801_02_42.jpg)'
- en: After selecting **getters/setters** the previous screenshot appears; you can
    specify for which property you want to generate a **getter** or a **setter** method,
    with a flexibility of choosing the naming convention for the method.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**getter/setter**后，出现了上一个屏幕截图；您可以指定要为哪个属性生成**getter**或**setter**方法，并灵活选择方法的命名约定。
- en: '**Overridden and implemented methods:** You can open the code generator for
    overridden and implemented methods when there are multiple methods inside the
    class. A dialog box opens, showing the methods you can insert, and indicates whether
    they are overridden or implemented:![Using the code generator](graphics/5801_02_43.jpg)'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重写和实现的方法：**当类内有多个方法时，您可以打开重写和实现方法的代码生成器。对话框将打开，显示您可以插入的方法，并指示它们是重写还是实现：![使用代码生成器](graphics/5801_02_43.jpg)'
- en: Note
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: See the *Appendix* for NetBeans IDE keyboard shortcuts.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 有关NetBeans IDE键盘快捷键，请参见*附录*。
- en: Pop quiz — using code generators
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小测验——使用代码生成器
- en: What is the shortcut to open the code generator inside a PHP class?
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在PHP类内部打开代码生成器的快捷键是什么？
- en: Alt+Insert
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Alt+Insert
- en: Shift+Alt+Insert
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Shift+Alt+Insert
- en: Ctrl+ Alt+Insert
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ctrl+ Alt+Insert
- en: Ctrl+Insert
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ctrl+Insert
- en: What cannot be generated using code generator?
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么不能使用代码生成器生成？
- en: Constructors
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构造函数
- en: Getters and setters
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Getter和setter
- en: Overridden methods
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重写方法
- en: Strings
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 字符串
- en: Summary
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have discovered useful features of the PHP editor, and practiced
    the tips to apply while code writing. Familiarization with the editor shortcuts
    we have looked at will help you to write the code faster and correctly.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们发现了PHP编辑器的有用功能，并练习了在编写代码时应用的技巧。熟悉我们所看到的编辑器快捷键将帮助您更快、更准确地编写代码。
- en: 'We have especially focused on:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 我们特别关注了：
- en: The PHP editor features and shortcuts
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP编辑器的功能和快捷键
- en: Rename refactoring and instant rename
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重命名重构和即时重命名
- en: Usage of code completion
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码自动完成的使用
- en: Usage of code generators
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码生成器的使用
- en: So, up to now, we have our PHP development environment ready. We have installed
    the IDE, and learned how to use those cool editor features when required. In the
    next chapter, we will dive straight into real-life PHP coding, and will develop
    a PHP project to have a grip over web application development using NetBeans.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，到目前为止，我们的PHP开发环境已经准备就绪。我们已经安装了IDE，并学会了在需要时如何使用这些酷炫的编辑器功能。在下一章中，我们将直接深入到真实的PHP编码中，并将开发一个PHP项目，以掌握使用NetBeans进行Web应用程序开发。
