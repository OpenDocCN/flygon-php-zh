["```php\n//valid namespace\nnamespace App\\Controllers;\n```", "```php\nuse App\\Models\\Contact;\n```", "```php\n//start with the namespace\nnamespace App\\Controllers;\n//add the use statement\nuse App\\Models\\Contact;\n//make the call\n$contact = new Contact();\n```", "```php\n//start with the namespace\nnamespace App\\Controllers;\n\n//add the use statement\nuse App\\Models\\Contact;\n\n//make the call\n$contact = new Contact();\n\n//make a call to a getContacts method that exists within the contact class\n$contact->getContacts();\n```", "```php\n//start with a namespace\nnamespace App\\Models;\n\n//here is an example of a method being defined, in the previous example the method was being called.\nclass Contact\n{\n    public function getContacts()\n{\n                        //get data here\n    }\n}\n```", "```php\n    public $token;\n    protected $token;\n    private $token;\n\n    ```", "```php\n        <?php namespace App\\Models;\n        ```", "```php\n        class Contact \n        {\n        }\n        ```", "```php\n        class Contact\n        {\n            public function getContacts()\n        {\n                return ['joe', 'bob', 'kerry', 'dave'];\n            }\n        }\n        ```", "```php\n    <?php namespace App\\Controllers;\n    ```", "```php\n    use App\\Models\\Contact;\n    ```", "```php\n    Use App\\Models\\Contact as Name;\n    ```", "```php\n    class Contacts \n    {\n    }\n    ```", "```php\n    class Contacts \n    {\n        public function index()\n        {\n            $contact = new Contact();\n        }\n    }\n    ```", "```php\n    public function index()\n    {\n        $contact = new Contact();\n        $contacts = $contact->getContacts();\n    }\n    ```"]