["```php\n$book = $_REQUEST['book'];\n$year = $_REQUEST['year'];\n$sql = \"UPDATE books SET year=$year WHERE id=$book\";\n$conn->query($sql);\n\n```", "```php\nUPDATE books SET year= WHERE id=1;\n\n```", "```php\n2007; DELETE FROM books;\n\n```", "```php\nUPDATE books SET year=2007; DELETE FROM books; WHERE book=1;\n\n```", "```php\n$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n```", "```php\n$connStr = 'sqlite:/path/to/pdo*.db';\n\n```", "```php\n<?php\n/**\n* This is a common include file\n* PDO Library Management example application\n* @author Dennis Popel\n*/\n// DB connection string and username/password\n$connStr = 'mysql:host=localhost;dbname=pdo';\n$user = 'root';\n$pass = 'root';\n/**\n* This function will render the header on every page,\n* including the opening html tag,\n* the head section and the opening body tag.\n* It should be called before any output of the\n* page itself.\n* @param string $title the page title\n*/\nfunction showHeader($title)\n{\n?>\n<html>\n<head><title><?=htmlspecialchars($title)?></title></head>\n<body>\n<h1><?=htmlspecialchars($title)?></h1>\n<a href=\"books.php\">Books</a>\n<a href=\"authors.php\">Authors</a>\n<hr>\n<?php\n}\n/**\n* This function will 'close' the body and html\n* tags opened by the showHeader() function\n*/\nfunction showFooter()\n{\n?>\n</body>\n</html>\n<?php\n}\n**/**\n* This function will display an error message, call the\n* showFooter() function and terminate the application\n* @param string $message the error message\n*/\nfunction showError($message)\n{\necho \"<h2>Error</h2>\";\necho nl2br(htmlspecialchars($message));\nshowFooter();\nexit();\n}\n// Create the connection object\ntry\n{\n$conn = new PDO($connStr, $user, $pass);\n$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n}\ncatch(PDOException $e)\n{\nshowHeader('Error');\nshowError(\"Sorry, an error has occurred. Please try your request\nlater\\n\" . $e->getMessage());\n}**\n\n```", "```php\nCREATE UNIQUE INDEX idx_isbn ON books(isbn);\n\n```", "```php\n<?php\n/**\n* This page allows to add or edit a book\n* PDO Library Management example application\n* @author Dennis Popel\n*/\n// Don't forget the include\ninclude('common.inc.php');\n// See if we have the book ID passed in the request\n$id = (int)$_REQUEST['book'];\nif($id) {\n// We have the ID, get the book details from the table\n$q = $conn->query(\"SELECT * FROM books WHERE id=$id\");\n$book = $q->fetch(PDO::FETCH_ASSOC);\n$q->closeCursor();\n$q = null;\n}\nelse {\n// We are creating a new book\n$book = array();\n}\n// Now get the list of all authors' first and last names\n// We will need it to create the dropdown box for author\n$authors = array();\n$q = $conn->query(\"SELECT id, lastName, firstName FROM authors ORDER\nBY lastName, firstName\");\n$q->setFetchMode(PDO::FETCH_ASSOC);\nwhile($a = $q->fetch())\n{\n$authors[$a['id']] = \"$a[lastName], $a[firstName]\";\n}\n// Now see if the form was submitted\nif($_POST['submit']) {\n// Validate every field\n$warnings = array();\n// Title should be non-empty\nif(!$_POST['title'])\n{\n$warnings[] = 'Please enter book title';\n}\n// Author should be a key in the $authors array\nif(!array_key_exists($_POST['author'], $authors))\n{\n$warnings[] = 'Please select author for the book';\n}\n// ISBN should be a 10-digit number\nif(!preg_match('~^\\d{10}$~', $_POST['isbn'])) {\n$warnings[] = 'ISBN should be 10 digits';\n}\n// Published should be non-empty\nif(!$_POST['publisher']) {\n$warnings[] = 'Please enter publisher';\n}\n// Year should be 4 digits\nif(!preg_match('~^\\d{4}$~', $_POST['year'])) {\n$warnings[] = 'Year should be 4 digits';\n}\n// Sumary should be non-empty\nif(!$_POST['summary']) {\n$warnings[] = 'Please enter summary';\n}\n// If there are no errors, we can update the database\n// If there was book ID passed, update that book\nif(count($warnings) == 0) {\nif(@$book['id']) {\n$sql = \"UPDATE books SET title=\" . $conn>quote($_POST['title']) .\n', author=' . $conn->quote($_POST['author']) .\n', isbn=' . $conn->quote($_POST['isbn']) .\n', publisher=' . $conn->quote($_POST['publisher']) .\n', year=' . $conn->quote($_POST['year']) .\n', summary=' . $conn->quote($_POST['summary']) .\n\" WHERE id=$book[id]\";\n}\nelse {\n$sql = \"INSERT INTO books(title, author, isbn, publisher,\nyear,summary) VALUES(\" .\n$conn->quote($_POST['title']) .\n', ' . $conn->quote($_POST['author']) .\n', ' . $conn->quote($_POST['isbn']) .\n', ' . $conn->quote($_POST['publisher']) .\n', ' . $conn->quote($_POST['year']) .\n', ' . $conn->quote($_POST['summary']) .\n')';\n}\n// Now we are updating the DB.\n// We wrap this into a try/catch block\n// as an exception can get thrown if\n// the ISBN is already in the table\ntry\n{\n$conn->query($sql);\n// If we are here that means that no error\n// We can return back to books listing\nheader(\"Location: books.php\");\nexit;\n}\ncatch(PDOException $e)\n{\n$warnings[] = 'Duplicate ISBN entered. Please correct';\n}\n}\n}\nelse {\n// Form was not submitted.\n// Populate the $_POST array with the book's details\n$_POST = $book;\n}\n// Display the header\nshowHeader('Edit Book');\n// If we have any warnings, display them now\nif(count($warnings)) {\necho \"<b>Please correct these errors:</b><br>\";\nforeach($warnings as $w)\n{\necho \"- \", htmlspecialchars($w), \"<br>\";\n}\n}\n// Now display the form\n?>\n<form action=\"editBook.php\" method=\"post\">\n<table border=\"1\" cellpadding=\"3\">\n<tr>\n<td>Title</td>\n<td>\n<input type=\"text\" name=\"title\"\nvalue=\"<?=htmlspecialchars($_POST['title'])?>\">\n</td>\n</tr>\n<tr>\n<td>Author</td>\n<td>\n<select name=\"author\">\n<option value=\"\">Please select...</option>\n<?php foreach($authors as $id=>$author) { ?>\n<option value=\"<?=$id?>\"\n<?= $id == $_POST['author'] ? 'selected' : ''?>>\n<?=htmlspecialchars($author)?>\n</option>\n<?php } ?>\n</select>\n</td>\n</tr>\n<tr>\n<td>ISBN</td>\n<td>\n<input type=\"text\" name=\"isbn\"\nvalue=\"<?=htmlspecialchars($_POST['isbn'])?>\">\n</td>\n</tr>\n<tr>\n<td>Publisher</td>\n<td>\n<input type=\"text\" name=\"publisher\"\nvalue=\"<?=htmlspecialchars($_POST['publisher'])?>\">\n</td>\n</tr>\n<tr>\n<td>Year</td>\n<td>\n<input type=\"text\" name=\"year\"\nvalue=\"<?=htmlspecialchars($_POST['year'])?>\">\n</td>\n</tr>\n<tr>\n<td>Summary</td>\n<td>\n<textarea name=\"summary\"><?=htmlspecialchars( $_POST['summary'])?></textarea>\n</td>\n</tr>\n<tr>\n<td colspan=\"2\" align=\"center\">\n<input type=\"submit\" name=\"submit\" value=\"Save\">\n</td>\n</tr>\n</table>\n<?php if(@$book['id']) { ?>\n<input type=\"hidden\" name=\"book\" value=\"<?=$book['id']?>\">\n<?php } ?>\n</form>\n<?php\n// Display footer\nshowFooter();\n\n```", "```php\n<?php\n// Now iterate over every row and display it\nwhile($r = $q->fetch())\n{\n?>\n<tr>\n<td><ahref=\"author.php?id=<?=$r['authorId']?>\">\n<?=htmlspecialchars(\"$r[firstName] $r[lastName]\")?></a></td>\n<td><?=htmlspecialchars($r['title'])?></td>\n<td><?=htmlspecialchars($r['isbn'])?></td>\n<td><?=htmlspecialchars($r['publisher'])?></td>\n<td><?=htmlspecialchars($r['year'])?></td>\n<td><?=htmlspecialchars($r['summary'])?></td>\n**<td>\n<a href=\"editBook.php?book=<?=$r['id']?>\">Edit</a>\n</td>**\n</tr>\n<?php\n}\n?>\n\n```", "```php\n<a href=\"editBook.php\">Add book...</a>\n<?php\n// Display footer\nshowFooter();\n\n```", "```php\n<?php\n/**\n* This page allows to add or edit an author\n* PDO Library Management example application\n* @author Dennis Popel\n*/\n// Don't forget the include\ninclude('common.inc.php');\n// See if we have the author ID passed in the request\n$id = (int)$_REQUEST['author'];\nif($id) {\n// We have the ID, get the author details from the table\n$q = $conn->query(\"SELECT * FROM authors WHERE id=$id\");\n$author = $q->fetch(PDO::FETCH_ASSOC);\n$q->closeCursor();\n$q = null;\n}\nelse {\n// We are creating a new book\n$author = array();\n}\n// Now see if the form was submitted\nif($_POST['submit']) {\n// Validate every field\n$warnings = array();\n// First name should be non-empty\nif(!$_POST['firstName']) {\n$warnings[] = 'Please enter first name';\n}\n// Last name should be non-empty\nif(!$_POST['lastName']) {\n$warnings[] = 'Please enter last name';\n}\n// Bio should be non-empty\nif(!$_POST['bio']) {\n$warnings[] = 'Please enter bio';\n}\n// If there are no errors, we can update the database\n// If there was book ID passed, update that book\nif(count($warnings) == 0) {\nif(@$author['id']) {\n$sql = \"UPDATE authors SET firstName=\" .\n$co>quote($_POST['firstName']) .\n', lastName=' . $conn->quote($_POST['lastName']) .\n', bio=' . $conn->quote($_POST['bio']) .\n\" WHERE id=$author[id]\";\n}\nelse {\n$sql = \"INSERT INTO authors(firstName, lastName, bio) VALUES(\" .\n$conn->quote($_POST['firstName']) .\n', ' . $conn->quote($_POST['lastName']) .\n', ' . $conn->quote($_POST['bio']) .\n')';\n}\n$conn->query($sql);\nheader(\"Location: authors.php\");\nexit;\n}\n}\nelse {\n// Form was not submitted.\n// Populate the $_POST array with the author's details\n$_POST = $author;\n}\n// Display the header\nshowHeader('Edit Author');\n// If we have any warnings, display them now\nif(count($warnings)) {\necho \"<b>Please correct these errors:</b><br>\";\nforeach($warnings as $w)\n{\necho \"- \", htmlspecialchars($w), \"<br>\";\n}\n}\n// Now display the form\n?>\n<form action=\"editAuthor.php\" method=\"post\">\n<table border=\"1\" cellpadding=\"3\">\n<tr>\n<td>First name</td>\n<td>\n<input type=\"text\" name=\"firstName\"\nvalue=\"<?=htmlspecialchars($_POST['firstName'])?>\">\n</td>\n</tr>\n<tr>\n<td>Last name</td>\n<td>\n<input type=\"text\" name=\"lastName\"\nvalue=\"<?=htmlspecialchars($_POST['lastName'])?>\">\n</td>\n</tr>\n<tr>\n<td>Bio</td>\n<td>\n<textarea name=\"bio\"><?=htmlspecialchars($_POST['bio'])?>\n</textarea>\n</td>\n</tr>\n<tr>\n<td colspan=\"2\" align=\"center\">\n<input type=\"submit\" name=\"submit\" value=\"Save\">\n</td>\n</tr>\n</table>\n<?php if(@$author['id']) { ?>\n<input type=\"hidden\" name=\"author\" value=\"<?=$author['id']?>\">\n<?php } ?>\n</form>\n<?php\n// Display footer\nshowFooter();\n\n```", "```php\nwhile($r = $q->fetch(PDO::FETCH_ASSOC))\n{\n?>\n<tr>\n<td><?=htmlspecialchars($r['firstName'])?></td>\n<td><?=htmlspecialchars($r['lastName'])?></td>\n<td><?=htmlspecialchars($r['bio'])?></td>\n**<td>\n<a href=\"editAuthor.php?author=<?=$r['id']?>\">Edit</a>\n</td>**\n</tr>\n<?php\n}\n\n```", "```php\n<a href=\"editAuthor.php\">Add Author...</a>\n\n```", "```php\n$q = $conn->query(\"SELECT * FROM authors ORDER BY lastName, firstName\");\n\n```", "```php\n/**\n* This is the default exception handler\n* @param Exception $e the uncaught exception\n*/\nfunction exceptionHandler($e)\n{\nshowError(\"Sorry, the site is under maintenance\\n\" .\n$e->getMessage());\n}\n// Set the global excpetion handler\nset_exception_handler('exceptionHandler');\n\n```"]