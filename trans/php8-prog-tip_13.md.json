["```php\nJIT$Mandelbrot::iterate: ;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sub $0x10, %esp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cmp $0x1, 0x1c(%esi)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0jb .L14\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0jmp .L1\n.ENTRY1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sub $0x10, %esp\n.L1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cmp $0x2, 0x1c(%esi)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0jb .)L15\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mov $0xec3800f0, %edi\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0jmp .L2\n.ENTRY2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sub $0x10, %esp\n.L2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cmp $0x5, 0x48(%esi)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0jnz .L16\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vmovsd 0x40(%esi), %xmm1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vsubsd 0xec380068, %xmm1, %xmm1\n```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]# php -i\nphpinfo()\nPHP Version => 8.1.0-dev\nSystem => Linux php8_tips_php8 5.8.0-53-generic #60~20.04.1-Ubuntu SMP Thu May 6 09:52:46 UTC 2021 x86_64\nBuild Date => Dec 24 2020 00:11:29\nBuild System => Linux 9244ac997bc1 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt11-1 (2015-05-24) x86_64 GNU/Linux\nConfigure Command =>\u00a0\u00a0'./configure'\u00a0\u00a0'--prefix=/usr' '--sysconfdir=/etc' '--localstatedir=/var' '--datadir=/usr/share/php' '--mandir=/usr/share/man' '--enable-fpm' '--with-fpm-user=apache' '--with-fpm-group=apache'\n// not all options shown\n'--with-jpeg' '--with-png' '--with-sodium=/usr' '--enable-opcache-jit' '--with-pcre-jit' '--enable-opcache'\n```", "```php\nopcache.memory_consumption=256\nopcache.jit_buffer_size=64M\n```", "```php\n    // /repo/ch10/php8_jit_mandelbrot.php\n    define('BAILOUT',\u00a0\u00a0\u00a016);\n    define('MAX_LOOPS', 10000);\n    define('EDGE',\u00a0\u00a0\u00a0\u00a0\u00a0\u00a040.0);\n    $d1\u00a0\u00a0= microtime(1);\n    ```", "```php\n    $time_only = (bool) ($argv[1] ?? $_GET['time'] ?? FALSE);\n    ```", "```php\n    $out = '';\n    $f\u00a0\u00a0\u00a0= EDGE - 1;\n    for ($y = -$f; $y < $f; $y++) {\n    \u00a0\u00a0\u00a0\u00a0for ($x = -$f; $x < $f; $x++) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$out .= (iterate($x/EDGE,$y/EDGE) == 0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0? '*' : ' ';\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0$out .= \"\\n\";\n    }\n    ```", "```php\n    if (!empty($_SERVER['REQUEST_URI'])) {\n    \u00a0\u00a0\u00a0\u00a0$out = '<pre>' . $out . '</pre>';\n    }\n    if (!$time_only) echo $out;\n    $d2 = microtime(1);\n    $diff = $d2 - $d1;\n    printf(\"\\nPHP Elapsed %0.3f\\n\", $diff);\n    ```", "```php\n    root@php8_tips_php7 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 10.320\n    root@php8_tips_php7 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 10.134\n    root@php8_tips_php7 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 11.806\n    ```", "```php\n    opcache.jit=off\n    opcache.jit_buffer_size=0\n    ```", "```php\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 1.183\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 1.192\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 1.210\n    ```", "```php\n    opcache.jit=function\n    opcache.jit_buffer_size=64M\n    ```", "```php\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 0.323\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 0.322\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 0.324\n    ```", "```php\n    opcache.jit=tracing\n    opcache.jit_buffer_size=64M\n    ```", "```php\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 0.132\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 0.132\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php8_jit_mandelbrot.php -n\n    PHP Elapsed 0.131\n    ```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]# \nphp php8_jit_mandelbrot.php -n\n---- TRACE 1 start (loop) iterate() /repo/ch10/php8_jit_mandelbrot.php:34\n---- TRACE 1 stop (loop)\n---- TRACE 1 Live Ranges\n#15.CV6($i): 0-0 last_use\n#19.CV6($i): 0-20 hint=#15.CV6($i)\n... not all output is shown\n---- TRACE 1 compiled\n---- TRACE 2 start (side trace 1/7) iterate()\n/repo/ch10/php8_jit_mandelbrot.php:41\n---- TRACE 2 stop (return)\nTRACE-2$iterate$41: ; (unknown)\n\u00a0\u00a0\u00a0\u00a0mov $0x2, EG(jit_trace_num)\n\u00a0\u00a0\u00a0\u00a0mov 0x10(%r14), %rcx\n\u00a0\u00a0\u00a0\u00a0test %rcx, %rcx\n\u00a0\u00a0\u00a0\u00a0jz .L1\n\u00a0\u00a0\u00a0\u00a0mov 0xb0(%r14), %rdx\n\u00a0\u00a0\u00a0\u00a0mov %rdx, (%rcx)\n\u00a0\u00a0\u00a0\u00a0mov $0x4, 0x8(%rcx)\n...\u00a0\u00a0not all output is shown\n```", "```php\n    // /repo/ch10/php7_spl_fixed_arr_size.php\n    define('MAX_SIZE', 1000000);\n    define('PATTERN', \"%14s : %8.8f : %12s\\n\");\n    ```", "```php\n    function testArr($list, $label) {\n    \u00a0\u00a0\u00a0\u00a0$alpha = new InfiniteIterator(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0new ArrayIterator(range('A','Z')));\n    \u00a0\u00a0\u00a0\u00a0$start_mem = memory_get_usage();\n    \u00a0\u00a0\u00a0\u00a0$start_time = microtime(TRUE);\n    \u00a0\u00a0\u00a0\u00a0for ($x = 0; $x < MAX_SIZE; $x++) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$letter = $alpha->current();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$alpha->next();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$list[$x] = str_repeat($letter, 64);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0$mem_diff = memory_get_usage() - $start_mem;\n    \u00a0\u00a0\u00a0\u00a0return [$label, (microtime(TRUE) - $start_time),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0number_format($mem_diff)];\n    }\n    ```", "```php\n    printf(\"%14s : %10s : %12s\\n\", '', 'Time', 'Memory');\n    $result = testArr([], 'Array');\n    vprintf(PATTERN, $result);\n    $result = testArr(new ArrayObject(), 'ArrayObject');\n    vprintf(PATTERN, $result);\n    $result = testArr(\n    \u00a0\u00a0\u00a0\u00a0new SplFixedArray(MAX_SIZE), 'SplFixedArray');\n    vprintf(PATTERN, $result);\n    ```", "```php\n    root@php8_tips_php7 [ /repo/ch10 ]# \n    php php7_spl_fixed_arr_size.php \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Time :\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Memory\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Array : 1.19430900 :\u00a0\u00a0129,558,888\n    \u00a0\u00a0\u00a0ArrayObject : 1.20231009 :\u00a0\u00a0129,558,832\n     SplFixedArray : 1.19744802 :\u00a0\u00a0\u00a096,000,280\n    ```", "```php\n    root@php8_tips_php8 [ /repo/ch10 ]# \n    php php7_spl_fixed_arr_size.php \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Time :\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Memory\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Array : 0.13694692 :\u00a0\u00a0129,558,888\n    \u00a0\u00a0\u00a0ArrayObject : 0.11058593 :\u00a0\u00a0129,558,832\n     SplFixedArray : 0.09748793 :\u00a0\u00a0\u00a096,000,280\n    ```", "```php\n    // /repo/ch10/php7_spl_fixed_arr_iter.php\n    $arr\u00a0\u00a0\u00a0= ['Person', 'Woman', 'Man', 'Camera', 'TV'];$fixed = SplFixedArray::fromArray($arr);\n    ```", "```php\n    while ($fixed->valid()) {\n    \u00a0\u00a0\u00a0\u00a0echo $fixed->current() . '. ';\n    \u00a0\u00a0\u00a0\u00a0$fixed->next();\n    }\n    ```", "```php\nroot@php8_tips_php7 [ /repo/ch10 ]# \nphp php7_spl_fixed_arr_iter.php \nPerson. Woman. Man. Camera. TV.\n```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]# \nphp php7_spl_fixed_arr_iter.php \nPHP Fatal error:\u00a0\u00a0Uncaught Error: Call to undefined method SplFixedArray::valid() in /repo/ch10/php7_spl_fixed_arr_iter.php:5\n```", "```php\n// /repo/ch10/php8_spl_fixed_arr_iter.php\n$arr\u00a0\u00a0\u00a0= ['Person', 'Woman', 'Man', 'Camera', 'TV'];\n$obj\u00a0\u00a0\u00a0= SplFixedArray::fromArray($arr);\n$fixed = $obj->getIterator();\nwhile ($fixed->valid()) {\n\u00a0\u00a0\u00a0\u00a0echo $fixed->current() . '. ';\n\u00a0\u00a0\u00a0\u00a0$fixed->next();\n}\n```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]# \nphp php8_spl_fixed_arr_iter.php\nPerson. Woman. Man. Camera. TV. \n```", "```php\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-03 03:33:33\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-02 02:22:22\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-03 03:33:33\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Fred\n```", "```php\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-02 02:22:22\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-03 03:33:33\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-03 03:33:33\u00a0\u00a0\u00a0\u00a0Barney\n```", "```php\n    // /repo/src/Php8/Sort/Access.php\n    namespace Php8\\Sort;\n    class Access {\n    \u00a0\u00a0\u00a0\u00a0public $name, $time;\n    \u00a0\u00a0\u00a0\u00a0public function __construct($name, $time) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->name = $name;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->time = $time;\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```php\n    \"Fred\",\u00a0\u00a0\"2021-06-01 11:11:11\"\n    \"Fred\",\u00a0\u00a0\"2021-06-01 02:22:22\"\n    \"Betty\", \"2021-06-03 03:33:33\"\n    \"Fred\",\u00a0\u00a0\"2021-06-11 11:11:11\"\n    \"Barney\",\"2021-06-03 03:33:33\"\n    \"Betty\", \"2021-06-01 11:11:11\"\n    \"Betty\", \"2021-06-11 11:11:11\"\n    \"Barney\",\"2021-06-01 11:11:11\"\n    \"Fred\",\u00a0\u00a0\"2021-06-11 02:22:22\"\n    \"Wilma\", \"2021-06-01 11:11:11\"\n    \"Betty\", \"2021-06-13 03:33:33\"\n    \"Fred\",\u00a0\u00a0\"2021-06-21 11:11:11\"\n    \"Betty\", \"2021-06-21 11:11:11\"\n    \"Barney\",\"2021-06-13 03:33:33\"\n    \"Betty\", \"2021-06-23 03:33:33\"\n    \"Barney\",\"2021-06-11 11:11:11\"\n    \"Barney\",\"2021-06-21 11:11:11\"\n    \"Fred\",\u00a0\u00a0\"2021-06-21 02:22:22\"\n    \"Barney\",\"2021-06-23 03:33:33\"\n    \"Wilma\", \"2021-06-21 11:11:11\"\n    \"Wilma\", \"2021-06-11 11:11:11\"\n    ```", "```php\n    // /repo/ch010/php8_sort_stable_simple.php\n    require __DIR__ . \n    '/../src/Server/Autoload/Loader.php';\n    $loader = new \\Server\\Autoload\\Loader();\n    use Php8\\Sort\\Access;\n    ```", "```php\n    $access = [];\n    $data = new SplFileObject(__DIR__ \n    \u00a0\u00a0\u00a0\u00a0. '/../sample_data/access.csv');\n    while ($row = $data->fgetcsv())\n    \u00a0\u00a0\u00a0\u00a0if (!empty($row) && count($row) === 2)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$access[] = new Access($row[0], $row[1]);\n    ```", "```php\n    usort($access, \n    \u00a0\u00a0\u00a0\u00a0function($a, $b) { return $a->time <=> $b->time; });\n    ```", "```php\n    foreach ($access as $entry)\n    \u00a0\u00a0\u00a0\u00a0echo $entry->time . \"\\t\" . $entry->name . \"\\n\";\n    ```", "```php\nroot@php8_tips_php7 [ /repo/ch10 ]# \nphp php8_sort_stable_simple.php \n2021-06-01 02:22:22\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-03 03:33:33\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-03 03:33:33\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-11 02:22:22\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-11 11:11:11\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-11 11:11:11\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-11 11:11:11\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-11 11:11:11\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-13 03:33:33\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-13 03:33:33\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-21 02:22:22\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-21 11:11:11\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-21 11:11:11\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-21 11:11:11\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-21 11:11:11\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-23 03:33:33\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-23 03:33:33\u00a0\u00a0\u00a0\u00a0Barney\n```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]# \nphp php8_sort_stable_simple.php\n2021-06-01 02:22:22\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-03 03:33:33\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-03 03:33:33\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-11 02:22:22\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-11 11:11:11\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-11 11:11:11\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-11 11:11:11\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-11 11:11:11\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-13 03:33:33\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-13 03:33:33\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-21 02:22:22\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-21 11:11:11\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-21 11:11:11\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-21 11:11:11\u00a0\u00a0\u00a0\u00a0Barney\n2021-06-21 11:11:11\u00a0\u00a0\u00a0\u00a0Wilma\n2021-06-23 03:33:33\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-23 03:33:33\u00a0\u00a0\u00a0\u00a0Barney\n```", "```php\n    // /repo/ch010/php8_sort_stable_keys.php\n    $randVal = function () {\n    \u00a0\u00a0\u00a0\u00a0$alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    \u00a0\u00a0\u00a0\u00a0return $alpha[rand(0,25)] . $alpha[rand(0,25)] \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0. $alpha[rand(0,25)];};\n    ```", "```php\n    $start = microtime(TRUE);\n    $max\u00a0\u00a0\u00a0= 20;\n    $iter\u00a0\u00a0= new ArrayIterator;\n    for ($x = 256; $x < $max + 256; $x += 2) {\n    \u00a0\u00a0\u00a0\u00a0$key = sprintf('%04X', $x);\n    \u00a0\u00a0\u00a0\u00a0$iter->offsetSet($key, $randVal());\n    \u00a0\u00a0\u00a0\u00a0$key = sprintf('%04X', $x + 1);\n    \u00a0\u00a0\u00a0\u00a0$iter->offsetSet($key, 'AAA'); // <-- duplicate\n    }\n    ```", "```php\n    // not all code is shown\n    $iter->asort();\n    foreach ($iter as $key => $value) echo \"$key\\t$value\\n\";\n    echo \"\\nElapsed Time: \" . (microtime(TRUE) - $start);\n    ```", "```php\nroot@php8_tips_php7 [ /repo/ch10 ]# \nphp php8_sort_stable_keys.php \n0113\u00a0\u00a0\u00a0\u00a0AAA\n010D\u00a0\u00a0\u00a0\u00a0AAA\n0103\u00a0\u00a0\u00a0\u00a0AAA\n0105\u00a0\u00a0\u00a0\u00a0AAA\n0111\u00a0\u00a0\u00a0\u00a0AAA\n0107\u00a0\u00a0\u00a0\u00a0AAA\n010F\u00a0\u00a0\u00a0\u00a0AAA\n0109\u00a0\u00a0\u00a0\u00a0AAA\n0101\u00a0\u00a0\u00a0\u00a0AAA\n010B\u00a0\u00a0\u00a0\u00a0AAA\n0104\u00a0\u00a0\u00a0\u00a0CBC\n... some output omitted ...\n010C\u00a0\u00a0\u00a0\u00a0ZJW\nElapsed Time: 0.00017094612121582\n```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]# \nphp php8_sort_stable_keys.php \n0101\u00a0\u00a0\u00a0\u00a0AAA\n0103\u00a0\u00a0\u00a0\u00a0AAA\n0105\u00a0\u00a0\u00a0\u00a0AAA\n0107\u00a0\u00a0\u00a0\u00a0AAA\n0109\u00a0\u00a0\u00a0\u00a0AAA\n010B\u00a0\u00a0\u00a0\u00a0AAA\n010D\u00a0\u00a0\u00a0\u00a0AAA\n010F\u00a0\u00a0\u00a0\u00a0AAA\n0111\u00a0\u00a0\u00a0\u00a0AAA\n0113\u00a0\u00a0\u00a0\u00a0AAA\n0100\u00a0\u00a0\u00a0\u00a0BAU\n... some output omitted ...\n0104\u00a0\u00a0\u00a0\u00a0QEE\nElapsed Time: 0.00010395050048828\n```", "```php\nusort($access, function($a, $b) { \n\u00a0\u00a0\u00a0\u00a0return $a->time < $b->time; });\n```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]#\nphp php8_sort_illegal_func.php \nPHP Deprecated:\u00a0\u00a0usort(): Returning bool from comparison function is deprecated, return an integer less than, equal to, or greater than zero in /repo/ch10/php8_sort_illegal_func.php on line 30\n2021-06-01 02:22:22\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Fred\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Betty\n2021-06-01 11:11:11\u00a0\u00a0\u00a0\u00a0Barney\n... not all output is shown\n```", "```php\nWeakReference {\n\u00a0\u00a0\u00a0\u00a0public __construct() : void\n\u00a0\u00a0\u00a0\u00a0public static create (object $object) : WeakReference\n\u00a0\u00a0\u00a0\u00a0public get() : object|null\n}\n```", "```php\n    // /repo/ch010/php8_weak_reference.php\n    $obj1 = new class () { public $name = 'Fred'; };\n    $obj2 = $obj1;\u00a0\u00a0// normal reference\n    $obj3 = new class () { public $name = 'Fred'; };\n    $obj4 = WeakReference::create($obj3); // weak ref\n    ```", "```php\n    var_dump($obj2);\n    unset($obj1);\n    var_dump($obj2);\u00a0\u00a0// $obj1 still loaded in memory\n    ```", "```php\n    var_dump($obj4->get());\n    unset($obj3);\n    var_dump($obj4->get()); // both $obj3 and $obj4 are gone\n    ```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]# \nphp php8_weak_reference.php \nobject(class@anonymous)#1 (1) {\n\u00a0\u00a0[\"name\"]=>\u00a0\u00a0string(4) \"Fred\"\n}\nobject(class@anonymous)#1 (1) {\n\u00a0\u00a0[\"name\"]=>\u00a0\u00a0string(4) \"Fred\"\n}\nobject(class@anonymous)#2 (1) {\n\u00a0\u00a0[\"name\"]=>\u00a0\u00a0string(4) \"Fred\"\n}\nNULL\n```", "```php\nfinal WeakMap implements Countable,\n\u00a0\u00a0\u00a0\u00a0ArrayAccess, IteratorAggregate {\n\u00a0\u00a0\u00a0\u00a0public __construct ( )\n\u00a0\u00a0\u00a0\u00a0public count ( ) : int\n\u00a0\u00a0\u00a0\u00a0abstract public getIterator ( ) : Traversable\n\u00a0\u00a0\u00a0\u00a0public offsetExists ( object $object ) : bool\n\u00a0\u00a0\u00a0\u00a0public offsetGet ( object $object ) : mixed\n\u00a0\u00a0\u00a0\u00a0public offsetSet ( object $object , mixed $value ) : \u00a0\u00a0\u00a0\u00a0void\n\u00a0\u00a0\u00a0\u00a0public offsetUnset ( object $object ) : void\n}\n```", "```php\n    // /repo/src/Php7/Container/UsesSplObjectStorage.php\n    namespace Php7\\Container;\n    use SplObjectStorage;\n    class UsesSplObjectStorage {\n    \u00a0\u00a0\u00a0\u00a0public $container;\n    \u00a0\u00a0\u00a0\u00a0public $default;\n    \u00a0\u00a0\u00a0\u00a0public function __construct(array $config = []) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->container = new SplObjectStorage();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($config) foreach ($config as $obj)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->container->attach(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$obj, get_class($obj));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->default = new class () {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public function filter($value) { \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return $value; }};\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0public function get(string $key) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreach ($this->container as $idx => $obj)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($obj instanceof $key) return $obj;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return $this->default;\u00a0\u00a0\u00a0\u00a0\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```php\n    // /repo/ch010/php7_weak_map_problem.php\n    require __DIR__ . '/../src/Server/Autoload/Loader.php';\n    loader = new \\Server\\Autoload\\Loader();\n    use Laminas\\Filter\\ {StringTrim, StripNewlines,\n    \u00a0\u00a0\u00a0\u00a0StripTags, ToInt, Whitelist, UriNormalize};\n    use Php7\\Container\\UsesSplObjectStorage;\n    ```", "```php\n    $data = [\n    \u00a0\u00a0\u00a0\u00a0'name'\u00a0\u00a0\u00a0\u00a0=> '<script>bad JavaScript</script>name',\n    \u00a0\u00a0\u00a0\u00a0'status'\u00a0\u00a0=> 'should only contain digits 9999',\n    \u00a0\u00a0\u00a0\u00a0'gender'\u00a0\u00a0=> 'FMZ only allowed M, F or X',\n    \u00a0\u00a0\u00a0\u00a0'space'\u00a0\u00a0\u00a0=> \"\u00a0\u00a0leading/trailing whitespace or\\n\",\n    \u00a0\u00a0\u00a0\u00a0'url'\u00a0\u00a0\u00a0\u00a0\u00a0=> 'unlikelysource.com/about',\n    ];\n    ```", "```php\n    $required = [StringTrim::class, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0StripNewlines::class, StripTags::class];\n    $added = ['status'\u00a0\u00a0=> ToInt::class,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'gender'\u00a0\u00a0=> Whitelist::class,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'url'\u00a0\u00a0\u00a0\u00a0\u00a0=> UriNormalize::class ];\n    ```", "```php\n    $filters = [\n    \u00a0\u00a0\u00a0\u00a0new StringTrim(),\n    \u00a0\u00a0\u00a0\u00a0new StripNewlines(),\n    \u00a0\u00a0\u00a0\u00a0new StripTags(),\n    \u00a0\u00a0\u00a0\u00a0new ToInt(),\n    \u00a0\u00a0\u00a0\u00a0new Whitelist(['list' => ['M','F','X']]),\n    \u00a0\u00a0\u00a0\u00a0new UriNormalize(['enforcedScheme' => 'https']),\n    ];\n    $container = new UsesSplObjectStorage($filters);\n    ```", "```php\n    foreach ($data as $key => &$value) {\n    \u00a0\u00a0\u00a0\u00a0foreach ($required as $class) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$value = $container->get($class)->filter($value);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if (isset($added[$key])) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$value = $container->get($added[$key])\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0->filter($value);\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    var_dump($data);\n    ```", "```php\n    $mem = memory_get_usage();\n    unset($filters);\n    gc_collect_cycles();\n    $end = memory_get_usage();\n    echo \"\\nMemory Before Unset: $mem\\n\";\n    echo \"Memory After\u00a0\u00a0Unset: $end\\n\";\n    echo 'Difference\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: ' . ($end - $mem) . \"\\n\";\n    echo 'Peak Memory Usage : ' . memory_get_peak_usage();\n    ```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]# \nphp php7_weak_map_problem.php \narray(5) {\n\u00a0\u00a0[\"name\"]=>\u00a0\u00a0string(18) \"bad JavaScriptname\"\n\u00a0\u00a0[\"status\"]=>\u00a0\u00a0int(0)\n\u00a0\u00a0[\"gender\"]=>\u00a0\u00a0NULL\n\u00a0\u00a0[\"space\"]=>\u00a0\u00a0string(30) \"leading/trailing whitespace or\"\n\u00a0\u00a0[\"url\"]=>\u00a0\u00a0&string(32) \"https://unlikelysource.com/about\"\n}\nMemory Before Unset: 518936\nMemory After\u00a0\u00a0Unset: 518672\nDifference\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0\u00a0\u00a0\u00a0264\nPeak Memory Usage\u00a0\u00a0: 780168\n```", "```php\n    // /repo/src/Php7/Container/UsesWeakMap.php\n    namespace Php8\\Container;\n    use WeakMap;\n    class UsesWeakMap {\n    \u00a0\u00a0\u00a0\u00a0public $container;\n    \u00a0\u00a0\u00a0\u00a0public $default;\n    \u00a0\u00a0\u00a0\u00a0public function __construct(array $config = []) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->container = new WeakMap();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($config)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreach ($config as $obj)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->container->offsetSet(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$obj, get_class($obj));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->default = new class () {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public function filter($value) { \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return $value; }};\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0public function get(string $key) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreach ($this->container as $idx => $obj)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($idx instanceof $key) return $idx;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return $this->default;\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```php\n    // /repo/ch010/php8_weak_map_problem.php\n    require __DIR__ . '/../src/Server/Autoload/Loader.php';\n    $loader = new \\Server\\Autoload\\Loader();\n    use Laminas\\Filter\\ {StringTrim, StripNewlines,\n    \u00a0\u00a0\u00a0\u00a0StripTags, ToInt, Whitelist, UriNormalize};\n    use Php8\\Container\\UsesWeakMap;\n    ```", "```php\n    $filters = [\n    \u00a0\u00a0\u00a0\u00a0new StringTrim(),\n    \u00a0\u00a0\u00a0\u00a0new StripNewlines(),\n    \u00a0\u00a0\u00a0\u00a0new StripTags(),\n    \u00a0\u00a0\u00a0\u00a0new ToInt(),\n    \u00a0\u00a0\u00a0\u00a0new Whitelist(['list' => ['M','F','X']]),\n    \u00a0\u00a0\u00a0\u00a0new UriNormalize(['enforcedScheme' => 'https']),\n    ];\n    $container = new UsesWeakMap($filters);\n    ```", "```php\nroot@php8_tips_php8 [ /repo/ch10 ]# \nphp php8_weak_map_problem.php \narray(5) {\n\u00a0\u00a0[\"name\"]=>\u00a0\u00a0string(18) \"bad JavaScriptname\"\n\u00a0\u00a0[\"status\"]=>\u00a0\u00a0int(0)\n\u00a0\u00a0[\"gender\"]=>\u00a0\u00a0NULL\n\u00a0\u00a0[\"space\"]=>\u00a0\u00a0string(30) \"leading/trailing whitespace or\"\n\u00a0\u00a0[\"url\"]=>\u00a0\u00a0&string(32) \"https://unlikelysource.com/about\"\n}\nMemory Before Unset: 518712\nMemory After\u00a0\u00a0Unset: 517912\nDifference\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0\u00a0\u00a0\u00a0800\nPeak Memory Usage\u00a0\u00a0: 779944\n```"]