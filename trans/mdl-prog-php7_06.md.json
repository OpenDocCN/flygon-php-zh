["```php\n**symfony new shop**\n\n```", "```php\n<!doctype html>\n<html class=\"no-js\"lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\"/>\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n    <title>{% block title %}Welcome!{% endblock %}</title>\n    <link rel=\"stylesheet\"href=\"{{ asset('css/foundation.css') }}\"/>\n    {% block stylesheets%}{% endblock %}\n  </head>\n  <body>\n    <!-- START BODY -->\n    <!-- TOP-MENU -->\n    <!-- SYSTEM-WIDE-MESSAGES -->\n    <!-- PER-PAGE-BODY -->\n    <!-- FOOTER -->\n    <!-- START BODY -->\n    <script src=\"{{ asset('js/vendor/jquery.js') }}\"></script>\n    <script src=\"{{ asset('js/vendor/what-input.js') }}\"></script>\n    <script src=\"{{ asset('js/vendor/foundation.js') }}\"></script>\n    <script>\n      $(document).foundation();\n    </script>\n    {% block javascripts%}{% endblock %}\n  </body>\n</html>\n```", "```php\ntwig:\n# ...\nglobals:\ncategory_menu: '@category_menu'\ncustomer_menu: '@customer_menu'\ncheckout_menu: '@checkout_menu'\nproducts_bestsellers: '@bestsellers'\nproducts_onsale: '@onsale'\n```", "```php\n<ul>\n  {% for category in category_menu.getItems() %}\n  <li>{{ category.name }}</li>\n  {% endfor %}\n</ul>\n```", "```php\nservices:\ncategory_menu:\n  class: AppBundle\\Service\\Menu\\Category\ncustomer_menu:\n  class: AppBundle\\Service\\Menu\\Customer\ncheckout_menu:\n  class: AppBundle\\Service\\Menu\\Checkout\nbestsellers:\n  class: AppBundle\\Service\\Menu\\BestSellers\nonsale:\n  class: AppBundle\\Service\\Menu\\OnSale\n```", "```php\nnamespace AppBundle\\Service\\Menu;\n\nclass BestSellers {\n  public function getItems() {\n    // Note, this can be arranged as per some \"Product\"interface, so to know what dummy data to return\n    return array(\n      ay('path' =>'iphone', 'name' =>'iPhone', 'img' =>'/img/missing-image.png', 'price' => 49.99, 'add_to_cart_url' =>'#'),\n      array('path' =>'lg', 'name' =>'LG', 'img' =>\n        '/img/missing-image.png', 'price' => 19.99, 'add_to_cart_url' =>'#'),\n      array('path' =>'samsung', 'name' =>'Samsung', 'img'=>'/img/missing-image.png', 'price' => 29.99, 'add_to_cart_url' =>'#'),\n      array('path' =>'lumia', 'name' =>'Lumia', 'img' =>'/img/missing-image.png', 'price' => 19.99, 'add_to_cart_url' =>'#'),\n      array('path' =>'edge', 'name' =>'Edge', 'img' =>'/img/missing-image.png', 'price' => 39.99, 'add_to_cart_url' =>'#'),\n    );\n  }\n}\n```", "```php\nclass Category {\n  public function getItems() {\n    return array(\n      array('path' =>'women', 'label' =>'Women'),\n      array('path' =>'men', 'label' =>'Men'),\n      array('path' =>'sport', 'label' =>'Sport'),\n    );\n  }\n}\n```", "```php\nclass Checkout\n{\n  public function getItems()\n  {\n     // Initial dummy menu\n     return array(\n       array('path' =>'cart', 'label' =>'Cart (3)'),\n       array('path' =>'checkout', 'label' =>'Checkout'),\n    );\n  }\n}\n```", "```php\nclass Customer\n{\n  public function getItems()\n  {\n    // Initial dummy menu\n    return array(\n      array('path' =>'account', 'label' =>'John Doe'),\n      array('path' =>'logout', 'label' =>'Logout'),\n    );\n  }\n}\n```", "```php\nclass OnSale\n{\n  public function getItems()\n  {\n    // Note, this can be arranged as per some \"Product\" interface, so to know what dummy data to return\n    return array(\n      array('path' =>'iphone', 'name' =>'iPhone', 'img' =>'/img/missing-image.png', 'price' => 19.99, 'add_to_cart_url' =>'#'),\n      array('path' =>'lg', 'name' =>'LG', 'img' =>'/img/missing-image.png', 'price'      => 29.99, 'add_to_cart_url' =>'#'),\n      array('path' =>'samsung', 'name' =>'Samsung', 'img'=>'/img/missing-image.png', 'price' => 39.99, 'add_to_cart_url' =>'#'),\n      array('path' =>'lumia', 'name' =>'Lumia', 'img' =>'/img/missing-image.png', 'price' => 49.99, 'add_to_cart_url' =>'#'),\n      array('path' =>'edge', 'name' =>'Edge', 'img' =>'/img/missing-image.png', 'price' => 69.99, 'add_to_cart_url' =>'#'),\n    ;\n  }\n}\n```", "```php\n<div class=\"title-bar\" data-responsive-toggle=\"appMenu\" data-hide-for=\"medium\">\n  <button class=\"menu-icon\" type=\"button\" data-toggle></button>\n  <div class=\"title-bar-title\">Menu</div>\n</div>\n\n<div class=\"top-bar\" id=\"appMenu\">\n  <div class=\"top-bar-left\">\n    {# category_menu is global twig var filled from service, and later overriden by another module service #}\n    <ul class=\"menu\">\n      <li><a href=\"{{ path('homepage') }}\">HOME</a></li>\n        {% block category_menu %}\n        {% for link in category_menu.getItems() %}\n      <li><a href=\"{{ link.path }}\">{{ link.label }}</li></a>\n      {% endfor %}\n      {% endblock %}\n    </ul>\n  </div>\n  <div class=\"top-bar-right\">\n    <ul class=\"menu\">\n      {# customer_menu is global twig var filled from service, and later overriden by another module service #}\n      {% block customer_menu %}\n      {% for link in customer_menu.getItems() %}\n      <li><a href=\"{{ link.path }}\">{{ link.label }}</li></a>\n      {% endfor %}\n      {% endblock %}\n      {# checkout_menu is global twig var filled from service, and later overriden by another module service #}\n      {% block checkout_menu %}\n      {% for link in checkout_menu.getItems() %}\n      <li><a href=\"{{ link.path }}\">{{ link.label }}</li></a>\n      {% endfor %}\n      {% endblock %}\n    </ul>\n  </div>\n</div>\n```", "```php\n<div class=\"row column\">\n  {% for flash_message in app.session.flashBag.get('alert') %}\n  <div class=\"alert callout\">\n    {{ flash_message }}\n  </div>\n  {% endfor %}\n  {% for flash_message in app.session.flashBag.get('warning') %}\n  <div class=\"warning callout\">\n    {{ flash_message }}\n  </div>\n  {% endfor %}\n  {% for flash_message in app.session.flashBag.get('success') %}\n  <div class=\"success callout\">\n    {{ flash_message }}\n  </div>\n  {% endfor %}\n</div>\n```", "```php\n<div class=\"row column\">\n  {% block body %}{% endblock %}\n</div>\n```", "```php\n<div class=\"row column\">\n  <ul class=\"menu\">\n    <li><a href=\"{{ path('about') }}\">About Us</a></li>\n    <li><a href=\"{{ path('customer_service') }}\">Customer Service</a></li>\n    <li><a href=\"{{ path('privacy_cookie') }}\">Privacy and Cookie Policy</a></li>\n    <li><a href=\"{{ path('orders_returns') }}\">Orders and Returns</a></li>\n    <li><a href=\"{{ path('contact') }}\">Contact Us</a></li>\n  </ul>\n</div>\n```", "```php\n/**\n * @Route(\"/\", name=\"homepage\")\n */\npublic function indexAction(Request $request)\n{\n  return $this->render('AppBundle:default:index.html.twig');\n}\n\n/**\n * @Route(\"/about\", name=\"about\")\n */\npublic function aboutAction()\n{\n  return $this->render('AppBundle:default:about.html.twig');\n}\n\n/**\n * @Route(\"/customer-service\", name=\"customer_service\")\n */\npublic function customerServiceAction()\n{\n  return $this->render('AppBundle:default:customer-service.html.twig');\n}\n\n/**\n * @Route(\"/orders-and-returns\", name=\"orders_returns\")\n */\npublic function ordersAndReturnsAction()\n{\n  return $this->render('AppBundle:default:orders-returns.html.twig');\n}\n\n/**\n * @Route(\"/privacy-and-cookie-policy\", name=\"privacy_cookie\")\n */\npublic function privacyAndCookiePolicyAction()\n{\n  return $this->render('AppBundle:default:privacy-cookie.html.twig');\n}\n```", "```php\n{% extends 'base.html.twig' %}\n\n{% block body %}\n<div class=\"row\">\n  <h1>About Us</h1>\n</div>\n<div class=\"row\">\n  <p>Loremipsum dolor sit amet, consecteturadipiscingelit...</p>\n</div>\n{% endblock %}\n```", "```php\n/**\n * @Route(\"/contact\", name=\"contact\")\n */\npublic function contactAction(Request $request) {\n\n  // Build a form, with validation rules in place\n  $form = $this->createFormBuilder()\n  ->add('name', TextType::class, array(\n    'constraints' => new NotBlank()\n  ))\n  ->add('email', EmailType::class, array(\n    'constraints' => new Email()\n  ))\n  ->add('message', TextareaType::class, array(\n    'constraints' => new Length(array('min' => 3))\n  ))\n   ->add('save', SubmitType::class, array(\n    'label' =>'Reach Out!',\n    'attr' => array('class' =>'button'),\n  ))\n  ->getForm();\n\n  // Check if this is a POST type request and if so, handle form\n  if ($request->isMethod('POST')) {\n    $form->handleRequest($request);\n\n    if ($form->isSubmitted() && $form->isValid()) {\n      $this->addFlash(\n        'success',\n        'Your form has been submitted. Thank you.'\n      );\n\n      // todo: Send an email out...\n\n      return $this->redirect($this->generateUrl('contact'));\n    }\n  }\n\n  // Render \"contact us\" page\n  return $this->render('AppBundle:default:contact.html.twig', array(\n    'form' => $form->createView()\n  ));\n}\n```", "```php\n{% extends 'base.html.twig' %}\n\n{% block body %}\n\n<div class=\"row\">\n  <h1>Contact Us</h1>\n</div>\n\n<div class=\"row\">\n  {{ form_start(form) }}\n  {{ form_widget(form) }}\n  {{ form_end(form) }}\n</div>\n{% endblock %}\n```", "```php\n{% extends 'base.html.twig' %}\n{% block body %}\n<!--products_bestsellers -->\n<!--products_onsale -->\n{% endblock %}\n```", "```php\n{% if products_bestsellers %}\n<h2 class=\"text-center\">Best Sellers</h2>\n<div class=\"row products_bestsellers text-center small-up-1 medium-up-3 large-up-5\" data-equalizer data-equalize-by- row=\"true\">\n  {% for product in products_bestsellers.getItems() %}\n  <div class=\"column product\">\n    <img src=\"{{ asset(product.img) }}\" alt=\"missing image\"/>\n    <a href=\"{{ product.path }}\">{{ product.name }}</a>\n    <div>${{ product.price }}</div>\n    <div><a class=\"small button\"href=\"{{ product.add_to_cart_url }}\">Add to Cart</a></div>\n  </div>\n  {% endfor %}\n</div>\n{% endif %}\n```", "```php\n{% if products_onsale %}\n<h2 class=\"text-center\">On Sale</h2>\n<div class=\"row products_onsale text-center small-up-1 medium-up-3 large-up-5\" data-equalizer data-equalize-by-row=\"true\">\n  {% for product in products_onsale.getItems() %}\n  <div class=\"column product\">\n    <img src=\"{{ asset(product.img) }}\" alt=\"missing image\"/>\n    <a href=\"{{ product.path }}\">{{ product.name }}</a>\n  <div>${{ product.price }}</div>\n  <div><a class=\"small button\"href=\"{{ product.add_to_cart_url }}\">Add to Cart</a></div>\n  </div>\n  {% endfor %}\n</div>\n{% endif %}\n```", "```php\n**php bin/console security:encode-password**\n\n```", "```php\nsecurity:\n    providers:\n        in_memory:\n            memory:\n                users:\n                    john:\n                        password: $2y$12$DFozWehwPkp14sVXr7.IbusW8ugvmZs9dQMExlggtyEa/TxZUStnO\n                        roles: 'ROLE_ADMIN'\n```", "```php\nsecurity:\n    encoders:\n        Symfony\\Component\\Security\\Core\\User\\User:\n            algorithm: bcrypt\n            cost: 12\n```", "```php\nsecurity:\n    firewalls:\n        guard_new_edit:\n            pattern: /(new)|(edit)\n            methods: [GET, POST]\n            anonymous: ~\n            http_basic: ~\n       guard_delete:\n           pattern: /\n           methods: [DELETE]\n           anonymous: ~\n           http_basic: ~\n```", "```php\nsecurity:\n    access_control:\n      # protect any possible auto-generated CRUD actions from everyone's access\n      - { path: /new, roles: ROLE_ADMIN }\n      - { path: /edit, roles: ROLE_ADMIN }\n      - { path: /, roles: ROLE_ADMIN, methods: [DELETE] }\n```", "```php\n<testsuites>\n  <testsuite name=\"Project Test Suite\">\n    <-- ... other elements ... -->\n      <directory>src/AppBundle/Tests</directory>\n    <-- ... other elements ... -->\n  </testsuite>\n</testsuites>\n```", "```php\nnamespace AppBundle\\Tests\\Controller;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\n\nclass DefaultControllerTest extends WebTestCase\n{\n//\u2026\n}\n```", "```php\npublic function testHomepage()\n{\n  // @var \\Symfony\\Bundle\\FrameworkBundle\\Client\n  $client = static::createClient();\n  /** @var \\Symfony\\Component\\DomCrawler\\Crawler */\n  $crawler = $client->request('GET', '/');\n\n  // Check if homepage loads OK\n  $this->assertEquals(200, $client->getResponse()->getStatusCode());\n\n  // Check if top bar left menu is present\n  $this->assertNotEmpty($crawler->filter('.top-bar-left li')->count());\n\n  // Check if top bar right menu is present\n  $this->assertNotEmpty($crawler->filter('.top-bar-right li')->count());\n\n  // Check if footer is present\n  $this->assertNotEmpty($crawler->filter('.footer li')->children()->count());\n}\n```", "```php\npublic function testStaticPages()\n{\n  // @var \\Symfony\\Bundle\\FrameworkBundle\\Client\n  $client = static::createClient();\n  /** @var \\Symfony\\Component\\DomCrawler\\Crawler */\n\n  // Test About Us page\n  $crawler = $client->request('GET', '/about');\n  $this->assertEquals(200, $client->getResponse()->getStatusCode());\n  $this->assertContains('About Us', $crawler->filter('h1')->text());\n\n  // Test Customer Service page\n  $crawler = $client->request('GET', '/customer-service');\n  $this->assertEquals(200, $client->getResponse()->getStatusCode());\n  $this->assertContains('Customer Service', $crawler->filter('h1')->text());\n\n  // Test Privacy and Cookie Policy page\n  $crawler = $client->request('GET', '/privacy-and-cookie-policy');\n  $this->assertEquals(200, $client->getResponse()->getStatusCode());\n  $this->assertContains('Privacy and Cookie Policy', $crawler->filter('h1')->text());\n\n  // Test Orders and Returns page\n  $crawler = $client->request('GET', '/orders-and-returns');\n  $this->assertEquals(200, $client->getResponse()->getStatusCode());\n  $this->assertContains('Orders and Returns', $crawler->filter('h1')->text());\n\n  // Test Contact Us page\n  $crawler = $client->request('GET', '/contact');\n  $this->assertEquals(200, $client->getResponse()->getStatusCode());\n  $this->assertContains('Contact Us', $crawler->filter('h1')->text());\n}\n```", "```php\npublic function testContactFormSubmit()\n{\n  // @var \\Symfony\\Bundle\\FrameworkBundle\\Client\n  $client = static::createClient();\n  /** @var \\Symfony\\Component\\DomCrawler\\Crawler */\n  $crawler = $client->request('GET', '/contact');\n\n  // Find a button labeled as \"Reach Out!\"\n  $form = $crawler->selectButton('Reach Out!')->form();\n\n  // Note this does not validate form, it merely tests against submission and response page\n  $crawler = $client->submit($form);\n  $this->assertEquals(200, $client->getResponse()->getStatusCode());\n}\n```"]