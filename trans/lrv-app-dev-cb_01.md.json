["```php\n    **$ git init**\n    **$ git clone git@github.com:laravel/laravel.git**\n\n    ```", "```php\n    **$ cd laravel**\n    **$ rm \u2013r app bootstrap vendor**\n\n    ```", "```php\n    **$ cd ..**\n    **$ mkdir framework**\n    **$ cd framework**\n    **$ git init**\n    **$ git submodule add https://github.com/laravel/laravel.git**\n\n    ```", "```php\n    **php composer.phar install**\n\n    ```", "```php\n    **require __DIR__.'/../bootstrap/autoload.php';**\n    **$app = require_once __DIR__.'/../bootstrap/start.php';**\n\n    ```", "```php\n    **require __DIR__.'/../../framework/laravel/bootstrap/autoload.php';**\n    **$app = require_once __DIR__.'/../../framework/laravel/bootstrap/start.php';**\n\n    ```", "```php\n    <VirtualHost *:80>\n        ServerAdmin {your@email.com}\n        DocumentRoot \"C:/path/to/myapp/public\"\n        ServerName myapp.dev\n        <Directory \"C:/path/to/myapp/public\">\n            Options Indexes FollowSymLinks\n            AllowOverride all\n            # onlineoffline tag - don't remove\n            Order Deny,Allow\n            Deny from all\n            Allow from 127.0.0.1\n        </Directory>\n    </VirtualHost>\n    ```", "```php\n    <IfModule mod_rewrite.c>\n        RewriteEngine On\n        RewriteRule ^(.*)$ public/$1 [L]\n    </IfModule>\n    ```", "```php\n    'url' => 'http://localhost/,\n    'locale' => 'en',\n    'key' => 'Seriously-ChooseANewKey',\n    ```", "```php\n    'default' => 'mysql',\n    'connections' => array(\n        'mysql' => array(\n            'driver'    => 'mysql',\n            'host'      => 'localhost',\n            'database'  => 'database',\n            'username'  => 'root',\n            'password'  => '',\n            'charset'   => 'utf8',\n            'collation' => 'utf8_unicode_ci',\n            'prefix'    => '',\n            ),\n        ),\n    ```", "```php\n    **chmod \u2013R 777 app/storage**\n\n    ```", "```php\n**php artisan key:generate**\n\n```", "```php\n    <?php\n    class MyShapes {\n        public function octagon() \n        {\n            return 'I am an octagon';\n        }\n    }\n    ```", "```php\n    ClassLoader::addDirectories(array(\n\n        app_path().'/commands',\n        app_path().'/controllers',\n        app_path().'/models',\n        app_path().'/database/seeds',\n        app_path().'/custom',\n\n    ));\n    ```", "```php\n    Route::get('shape', function()\n    {\n        $shape = new MyShapes;\n        return $shape->octagon();\n    });\n    ```", "```php\n    <?php namespace Custom\\Shapes;\n\n    class MyShapes {\n        public function triangle() \n        {\n            return 'I am a triangle';\n        }\n    }\n    ```", "```php\n    \"autoload\": {\n        \"classmap\": [\n        \"app/commands\",\n            \"app/controllers\",\n            \"app/models\",\n            \"app/database/migrations\",\n            \"app/database/seeds\",\n            \"app/tests/TestCase.php\",\n        ],\n        \"psr-0\": {\n            \"Custom\": \"app/custom\"\n        }\n    }\n    ```", "```php\n    **php composer.phar dump-autoload**\n\n    ```", "```php\n    Route::get('shape', function()\n    {\n        $shape = new Custom\\Shapes\\MyShapes;\n        return $shape->triangle();\n    });\n    ```"]