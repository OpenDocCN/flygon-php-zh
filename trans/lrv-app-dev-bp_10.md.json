["```php\n**CREATE DATABASE laravel_store**\n\n```", "```php\n**php artisan key:generate**\n\n```", "```php\n<?php\n\nuse Illuminate\\Auth\\UserInterface;\nuse Illuminate\\Auth\\Reminders\\RemindableInterface;\n\nclass User extends Eloquent implements UserInterface, RemindableInterface {\n\n  protected $table = 'users';\n\n  /**\n   * The attributes excluded from the model's JSON form.\n   *\n   * @var array\n   */\n  protected $hidden = array('password');\n\n  //Add to the \"fillable\" array\n   protected $fillable = array('email', 'password', 'name', 'admin');\n\n  /**\n   * Get the unique identifier for the user.\n   *\n   * @return mixed\n   */\n  public function getAuthIdentifier()\n  {\n    return $this->getKey();\n  }\n\n  /**\n   * Get the password for the user.\n   *\n   * @return string\n   */\n  public function getAuthPassword()\n  {\n    return $this->password;\n  }\n\n  /**\n   * Get the e-mail address where password reminders are sent.\n   *\n   * @return string\n   */\n  public function getReminderEmail()\n  {\n    return $this->email;\n  }\n\n}\n```", "```php\n**php artisan migrate:make create_users_table --table=users --create**\n\n```", "```php\n  public function up()\n  {\n    Schema::create('users', function(Blueprint $table)\n    {\n      $table->increments('id');\n      $table->string('email');\n      $table->string('password');\n      $table->string('name');\n      $table->integer('admin');\n      $table->timestamps();\n    });\n  }\n```", "```php\n**php artisan migrate**\n\n```", "```php\n<?php\nClass UsersTableSeeder extends Seeder {\n\n    public function run()\n    {\n  DB::table('users')->delete();\n\nUser::create(array(\n            'email' => 'member@email.com',\n            'password' => Hash::make('password'),\n            'name' => 'John Doe',\n            'admin'=>0\n        ));\n\n  User::create(array(\n            'email' => 'admin@store.com',\n            'password' => Hash::make('adminpassword'),\n            'name' => 'Jeniffer Taylor',\n            'admin'=>1\n        ));  \n\n    }\n\n}\n```", "```php\n<?php\nclass DatabaseSeeder extends Seeder {\n\n  /**\n   * Run the database seeds.\n   *\n   * @return void\n   */\n  public function run()\n  {\n    Eloquent::unguard();\n\n **$this->call('UsersTableSeeder');**\n **$this->command->info('Users table seeded!');**\n  }\n\n}\n```", "```php\n<?php\nClass Author extends Eloquent {\n\nprotected $table = 'authors';\n\nprotected $fillable = array('name','surname');\n\n}\n```", "```php\nphp artisan migrate:make create_authors_table --table=authors --create\n```", "```php\n  public function up()\n  {\n    Schema::create('authors', function(Blueprint $table)\n    {\n      $table->increments('id');\n      $table->string('name');\n      $table->string('surname');\n      $table->timestamps();\n    });\n  }\n```", "```php\nphp artisan migrate\n```", "```php\n<?php\nClass AuthorsTableSeeder extends Seeder {\n\n    public function run()\n    {\nDB::table('authors')->delete();\n\n        Author::create(array(\n            'name' => 'Lauren',\n            'surname'=>'Oliver'\n        ));\n\n        Author::create(array(\n            'name' => 'Stephenie',\n            'surname'=>'Meyer'\n        ));\n\n        Author::create(array(\n            'name' => 'Dan',\n            'surname'=>'Brown'\n        ));\n\n    }\n\n}\n```", "```php\n<?php\nclass DatabaseSeeder extends Seeder {\n\n  /**\n   * Run the database seeds.\n   *\n   * @return void\n   */\n  public function run()\n  {\n    Eloquent::unguard();\n    $this->call('UsersTableSeeder');\n    $this->command->info('Users table seeded!');\n **$this->call('AuthorsTableSeeder');**\n **$this->command->info('Authors table seeded!');**\n  }\n\n}\n```", "```php\n**php artisan db:seed**\n\n```", "```php\n**php artisan migrate:refresh --seed**\n\n```", "```php\n<?php\nClass Book extends Eloquent {\n\nprotected $table = 'books';\n\nprotected $fillable = array('title','isbn','cover','price','author_id');\n\npublic function Author(){\n\nreturn $this->belongsTo('Author');\n\n}\n\n}\n```", "```php\n<?php\nClass BooksTableSeeder extends Seeder {\n\n  public function run()\n  {\n  DB::table('books')->delete();\n\n  Book::create(array(\n    'title'=>'Requiem',\n    'isbn'=>'9780062014535',\n    'price'=>'13.40',\n    'cover'=>'requiem.jpg',\n    'author_id'=>1\n   ));\n  Book::create(array(\n    'title'=>'Twilight',\n    'isbn'=>'9780316015844',\n    'price'=>'15.40',\n    'cover'=>'twilight.jpg',\n    'author_id'=>2\n  ));\n  Book::create(array(\n    'title'=>'Deception Point',\n    'isbn'=>'9780671027384',\n    'price'=>'16.40',\n    'cover'=>'deception.jpg',\n    'author_id'=>3\n  ));\n\n  }\n\n}\n```", "```php\n<?php\nclass DatabaseSeeder extends Seeder {\n\n  /**\n   * Run the database seeds.\n   *\n   * @return void\n   */\n  public function run()\n  {\n    Eloquent::unguard();\n    $this->call('UsersTableSeeder');\n    $this->command->info('Users table seeded!');\n    $this->call('AuthorsTableSeeder');\n    $this->command->info('Authors table seeded!');\n    **$this->call('BooksTableSeeder');**\n **$this->command->info('Books table seeded!');**\n  }\n\n}\n```", "```php\n**php artisan db:seed**\n\n```", "```php\n<?php\nClass Cart extends Eloquent {\n\nprotected $table = 'carts';\n\nprotected $fillable = array('member_id','book_id','amount','total');\n\npublic function Books(){\n\nreturn $this->belongsTo('Book','book_id');\n\n}\n\n}\n```", "```php\n**php artisan migrate:make create_carts_table --table=carts --create**\n\n```", "```php\n  public function up()\n  {\n    Schema::create('carts', function(Blueprint $table)\n    {\n      $table->increments('id');\n      $table->integer('member_id');\n      $table->integer('book_id');\n      $table->integer('amount');\n      $table->decimal('total', 10, 2);\n      $table->timestamps();\n    });\n  }\n```", "```php\n**php artisan migrate**\n\n```", "```php\n<?php\nClass Order extends Eloquent {\n\nprotected $table = 'orders';\n\nprotected $fillable = array('member_id','address','total');\n\npublic function orderItems()\n    {\n        return $this->belongsToMany('Book') ->withPivot('amount','total');\n    }\n\n}\n```", "```php\n**php artisan migrate:make create_orders_table --table=orders --create**\n\n```", "```php\n  public function up()\n  {\n    Schema::create('orders', function(Blueprint $table)\n    {\n      $table->increments('id');\n      $table->integer('member_id');\n      $table->text('address');\n      $table->decimal('total', 10, 2);\n      $table->timestamps();\n    });\n  }\n```", "```php\n**php artisan migrate**\n\n```", "```php\n**php artisan migrate:make create_order_books_table --table=order_books --create**\n\n```", "```php\n  public function up()\n  {\n    Schema::create('order_books', function(Blueprint $table)\n    {\n      $table->increments('id');\n      $table->integer('order_id');\n      $table->integer('book_id');\n      $table->integer('amount');\n$table->decimal('price', 10, 2);\n      $table->decimal('total', 10, 2);\n    });  \n}\n```", "```php\n**php artisan migrate**\n\n```", "```php\n<?php\nclass BookController extends BaseController{\n\n  public function getIndex()\n  {\n\n    $books = Book::all();\n\n    return View::make('book_list')->with('books',$books);\n\n  }\n}\n```", "```php\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Awesome Book Store</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <!-- Bootstrap -->\n  <link href=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n</head>\n<body>\n<div class=\"navbar navbar-inverse nav\">\n    <div class=\"navbar-inner\">\n        <div class=\"container\">\n            <a class=\"btn btn-navbar\" data-toggle=\"collapse\" data-target=\".nav-collapse\">\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </a>\n            <a class=\"brand\" href=\"/\">Awesome Book Store</a>\n            <div class=\"nav-collapse collapse\">\n              <ul class=\"nav\">\n                  <li class=\"divider-vertical\"></li>\n                  <li><a href=\"/\"><i class=\"icon-home icon-white\"></i> Book List</a></li>\n              </ul>\n              <div class=\"pull-right\">\n                <ul class=\"nav pull-right\">\n                @if(!Auth::check())\n                <ul class=\"nav pull-right\">\n                  <li class=\"divider-vertical\"></li>\n                  <li class=\"dropdown\">\n                    <a class=\"dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">Sign In <strong class=\"caret\"></strong></a>\n                    <div class=\"dropdown-menu\" style=\"padding: 15px; padding-bottom: 0px;\">\n                      <p>Please Login</a>\n                        <form action=\"/user/login\" method=\"post\" accept-charset=\"UTF-8\">\n                          <input id=\"email\" style=\"margin-bottom: 15px;\" type=\"text\" name=\"email\" size=\"30\" placeholder=\"email\" />\n                          <input id=\"password\" style=\"margin-bottom: 15px;\" type=\"password\" name=\"password\" size=\"30\" />\n                          <input class=\"btn btn-info\" style=\"clear: left; width: 100%; height: 32px; font-size: 13px;\" type=\"submit\" name=\"commit\" value=\"Sign In\" />\n                        </form>\n                      </div>\n                    </li>\n                  </ul>\n                @else\n                <li><a href=\"/cart\"><i class=\"icon-shopping-cart icon-white\"></i> Your Cart</a></li>\n                  <li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">Welcome, {{Auth::user()->name}} <b class=\"caret\"></b></a>\n                        <ul class=\"dropdown-menu\">\n                            <li><a href=\"/user/orders\"><i class=\"icon-envelope\"></i> My Orders</a></li>\n                            <li class=\"divider\"></li>\n                            <li><a href=\"/user/logout\"><i class=\"icon-off\"></i> Logout</a></li>\n                        </ul>\n                    </li>\n                @endif\n                </ul>\n              </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n@yield('content')\n\n  <script src=\"http://code.jquery.com/jquery.js\"></script>\n  <script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\n  <script type=\"text/javascript\">\n  $(function() {\n    $('.dropdown-toggle').dropdown();\n\n    $('.dropdown input, .dropdown label').click(function(e) {\n      e.stopPropagation();\n    });\n  });\n\n  @if(isset($error))\n    alert(\"{{$error}}\");\n  @endif\n\n  @if(Session::has('error'))\n    alert(\"{{Session::get('error')}}\");\n  @endif\n\n  @if(Session::has('message'))\n    alert(\"{{Session::get('message')}}\");\n  @endif\n\n  </script>\n</body>\n</html>\n```", "```php\n<?php\nclass UserController extends BaseController {\n\n  public function postLogin()\n  {\n    $email=Input::get('email');\n    $password=Input::get('password');\n\n    if (Auth::attempt(array('email' => $email, 'password' => $password)))\n    {\n        return Redirect::route('index');\n\n    }else{\n\n      return Redirect::route('index')\n        ->with('error','Please check your password & email');\n    }\n  }\n\n  public function getLogout()\n  {\n    Auth::logout();\n    return Redirect::route('index');\n  }\n}\n```", "```php\nRoute::get('/', array('as'=>'index','uses'=>'BookController@getIndex'));\nRoute::post('/user/login', array('uses'=>'UserController@postLogin'));\nRoute::get('/user/logout', array('uses'=>'UserController@getLogout'));\n```", "```php\n@extends('main_layout')\n\n@section('content')\n\n<div class=\"container\">\n  <div class=\"span12\">\n    <div class=\"row\">\n      <ul class=\"thumbnails\">\n        @foreach($books as $book)\n        <li class=\"span4\">\n          <div class=\"thumbnail\">\n            <img src=\"/images/{{$book->cover}}\" alt=\"ALT NAME\">\n            <div class=\"caption\">\n              <h3>{{$book->title}}</h3>\n              <p>Author : <b>{{$book->author->name}} {{$book->author->surname}}</b></p>\n              <p>Price : <b>{{$book->price}}</b></p>\n              <form action=\"/cart/add\" name=\"add_to_cart\" method=\"post\" accept-charset=\"UTF-8\">\n                <input type=\"hidden\" name=\"book\" value=\"{{$book->id}}\" />\n                <select name=\"amount\" style=\"width: 100%;\">\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                </select>\n              <p align=\"center\"><button class=\"btn btn-info btn-block\">Add to Cart</button></p>\n            </form>\n            </div>\n          </div>\n        </li>\n        @endforeach\n      </ul>\n    </div>\n  </div>\n</div>\n\n@stop\n```", "```php\n<?php\nclass CartController extends BaseController {\n\n  public function postAddToCart()\n  {\n    $rules=array(\n\n      'amount'=>'required|numeric',\n      'book'=>'required|numeric|exists:books,id'\n    );\n\n    $validator = Validator::make(Input::all(), $rules);\n\n      if ($validator->fails())\n      {\n          return Redirect::route('index')->with('error','The book could not added to your cart!');\n      }\n\n      $member_id = Auth::user()->id;\n      $book_id = Input::get('book');\n      $amount = Input::get('amount');\n\n      $book = Book::find($book_id);\n      $total = $amount*$book->price;\n\n       $count = Cart::where('book_id','=',$book_id)->where('member_id','=',$member_id)->count();\n\n       if($count){\n\n         return Redirect::route('index')->with('error','The book already in your cart.');\n       }\n\n      Cart::create(\n        array(\n        'member_id'=>$member_id,\n        'book_id'=>$book_id,\n        'amount'=>$amount,\n        'total'=>$total\n        ));\n\n      return Redirect::route('cart');\n  }\n\n  public function getIndex(){\n\n    $member_id = Auth::user()->id;\n\n    $cart_books=Cart::with('Books')->where('member_id','=',$member_id)->get();\n\n    $cart_total=Cart::with('Books')->where('member_id','=',$member_id)->sum('total');\n\n    if(!$cart_books){\n\n      return Redirect::route('index')->with('error','Your cart is empty');\n    }\n\n    return View::make('cart')\n          ->with('cart_books', $cart_books)\n          ->with('cart_total',$cart_total);\n  }\n\n  public function getDelete($id){\n\n    $cart = Cart::find($id)->delete();\n\n    return Redirect::route('cart');\n  }\n\n}\n```", "```php\npublic function postAddToCart()\n  {\n    $rules=array(\n\n      'amount'=>'required|numeric',\n      'book'=>'required|numeric|exists:books,id'\n    );\n\n    $validator = Validator::make(Input::all(), $rules);\n\n      if ($validator->fails())\n      {\n          return Redirect::route('index')->with('error','The book could not added to your cart!');\n      }\n\n      $member_id = Auth::user()->id;\n      $book_id = Input::get('book');\n      $amount = Input::get('amount');\n\n      $book = Book::find($book_id);\n      $total = $amount*$book->price;\n\n       $count = Cart::where('book_id','=',$book_id)->where('member_id','=',$member_id)->count();\n\n       if($count){\n\n         return Redirect::route('index')->with('error','The book already in your cart.');\n       }\n\n      Cart::create(\n        array(\n        'member_id'=>$member_id,\n        'book_id'=>$book_id,\n        'amount'=>$amount,\n        'total'=>$total\n        ));\n\n      return Redirect::route('cart');\n  }\n```", "```php\n  public function getIndex(){\n\n    $member_id = Auth::user()->id;\n\n    $cart_books=Cart::with('Books')->where('member_id','=',$member_id)->get();\n\n    $cart_total=Cart::with('Books')->where('member_id','=',$member_id)->sum('total');\n\n    if(!$cart_books){\n\n      return Redirect::route('index')->with('error','Your cart is empty');\n    }\n\n    return View::make('cart')\n          ->with('cart_books', $cart_books)\n          ->with('cart_total',$cart_total);\n  }\n```", "```php\n  public function getDelete($id){\n\n    $cart = Cart::find($id)->delete();\n\n    return Redirect::route('cart');\n  }\n```", "```php\n@extends('main_layout')\n\n@section('content')\n\n<div class=\"container\" style=\"width:60%\">\n  <h1>Your Cart</h1>\n  <table class=\"table\">\n    <tbody>\n      <tr>\n        <td>\n          <b>Title</b>\n        </td>\n        <td>\n          <b>Amount</b>\n        </td>\n        <td>\n          <b>Price</b>\n        </td>\n        <td>\n          <b>Total</b>\n        </td>\n        <td>\n          <b>Delete</b>\n        </td>\n      </tr>\n      @foreach($cart_books as $cart_item)\n        <tr>\n          <td>{{$cart_item->Books->title}}</td>\n          <td>\n           {{$cart_item->amount}}\n          </td>\n          <td>\n            {{$cart_item->Books->price}}\n          </td>\n          <td>\n           {{$cart_item->total}}\n          </td>\n          <td>\n            <a href=\"{{URL::route('delete_book_from_cart',array($cart_item->id))}}\">Delete</a>\n          </td>\n        </tr>\n      @endforeach\n      <tr>\n        <td>\n        </td>\n        <td>\n        </td>\n        <td>\n          <b>Total</b>\n        </td>\n        <td>\n          <b>{{$cart_total}}</b>\n        </td>\n        <td>\n        </td>        \n      </tr>\n    </tbody>\n  </table>\n  <h1>Shipping</h1>\n  <form action=\"/order\" method=\"post\" accept-charset=\"UTF-8\">\n    <label>Address</label>\n    <textarea class=\"span4\" name=\"address\" rows=\"5\"></textarea>\n    <button class=\"btn btn-block btn-primary btn-large\">Place order</button>\n  </form>\n</div>\n@stop\n```", "```php\nRoute::get('/cart', array('before'=>'auth.basic','as'=>'cart','uses'=>'CartController@getIndex'));\nRoute::post('/cart/add', array('before'=>'auth.basic','uses'=>'CartController@postAddToCart'));\nRoute::get('/cart/delete/{id}', array('before'=>'auth.basic','as'=>'delete_book_from_cart','uses'=>'CartController@getDelete'));\n```", "```php\n<?php\nclass OrderController extends BaseController {\n\n  public function postOrder()\n  {\n    $rules=array(\n\n      'address'=>'required'\n    );\n\n  $validator = Validator::make(Input::all(), $rules);\n\n      if ($validator->fails())\n      {\n          return Redirect::route('cart')->with('error','Address field is required!');\n      }\n\n      $member_id = Auth::user()->id;\n      $address = Input::get('address');\n\n       $cart_books = Cart::with('Books')->where('member_id','=',$member_id)->get();\n\n       $cart_total=Cart::with('Books')->where('member_id','=',$member_id)->sum('total');\n\n       if(!$cart_books){\n\n         return Redirect::route('index')->with('error','Your cart is empty.');\n       }\n\n      $order = Order::create(\n        array(\n        'member_id'=>$member_id,\n        'address'=>$address,\n        'total'=>$cart_total\n        ));\n\n      foreach ($cart_books as $order_books) {\n\n        $order->orderItems()->attach($order_books->book_id, array(\n          'amount'=>$order_books->amount,\n          'price'=>$order_books->Books->price,\n          'total'=>$order_books->Books->price*$order_books->amount\n          ));\n\n      }\n\n      Cart::where('member_id','=',$member_id)->delete();\n\n      return Redirect::route('index')->with('message','Your order processed successfully.');\n  }\n\n  public function getIndex(){\n\n    $member_id = Auth::user()->id;\n\n    if(Auth::user()->admin){\n\n      $orders=Order::all();\n\n    }else{\n\n      $orders=Order::with('orderItems')->where('member_id','=',$member_id)->get();\n    }\n\n    if(!$orders){\n\n      return Redirect::route('index')->with('error','There is no order.');\n    }\n\n    return View::make('order')\n          ->with('orders', $orders);\n  }\n}\n```", "```php\npublic function postOrder()\n  {\n    $rules=array(\n\n      'address'=>'required'\n    );\n\n  $validator = Validator::make(Input::all(), $rules);\n\n      if ($validator->fails())\n      {\n          return Redirect::route('cart')->with('error','Address field is required!');\n      }\n\n      $member_id = Auth::user()->id;\n      $address = Input::get('address');\n\n       $cart_books = Cart::with('Books')->where('member_id','=',$member_id)->get();\n\n       $cart_total=Cart::with('Books')->where('member_id','=',$member_id)->sum('total');\n\n       if(!$cart_books){\n\n         return Redirect::route('index')->with('error','Your cart is empty.');\n       }\n\n      $order = Order::create(\n        array(\n        'member_id'=>$member_id,\n        'address'=>$address,\n        'total'=>$cart_total\n        ));\n\n      foreach ($cart_books as $order_books) {\n\n        $order->orderItems()->attach($order_books->book_id, array(\n          'amount'=>$order_books->amount,\n          'price'=>$order_books->Books->price,\n          'total'=>$order_books->Books->price*$order_books->amount\n          ));\n\n      }\n\n      Cart::where('member_id','=',$member_id)->delete();\n\n      return Redirect::route('index')->with('message','Your order processed successfully.');\n  }\n```", "```php\npublic function getIndex(){\n\n    $member_id = Auth::user()->id;\n\n    if(Auth::user()->admin){\n\n      $orders=Order::all();\n\n    }else{\n\n      $orders=Order::with('orderItems')->where('member_id','=',$member_id)->get();\n    }\n\n    if(!$orders){\n\n      return Redirect::route('index')->with('error','There is no order.');\n    }\n\n    return View::make('order')\n          ->with('orders', $orders);\n  }\n```", "```php\nRoute::post('/order', array('before'=>'auth.basic','uses'=>'OrderController@postOrder'));\nRoute::get('/user/orders', array('before'=>'auth.basic','uses'=>'OrderController@getIndex'));\n```", "```php\n@extends('main_layout')\n@section('content')\n<div class=\"container\" style=\"width:60%\">\n<h3>Your Orders</h3>\n<div class=\"menu\">\n  <div class=\"accordion\">\n@foreach($orders as $order)\n <div class=\"accordion-group\">\n      <div class=\"accordion-heading country\">\n        @if(Auth::user()->admin)\n        <a class=\"accordion-toggle\" data-toggle=\"collapse\" href=\"#order{{$order->id}}\">Order #{{$order->id}} - {{$order->User->name}} - {{$order->created_at}}</a>\n        @else\n        <a class=\"accordion-toggle\" data-toggle=\"collapse\" href=\"#order{{$order->id}}\">Order #{{$order->id}} - {{$order->created_at}}</a>\n        @endif\n      </div>\n      <div id=\"order{{$order->id}}\" class=\"accordion-body collapse\">\n        <div class=\"accordion-inner\">\n          <table class=\"table table-striped table-condensed\">\n            <thead>\n              <tr>\n              <th>\n              Title\n              </th>\n              <th>\n              Amount\n              </th>\n              <th>\n              Price\n              </th>\n              <th>\n              Total\n              </th>\n              </tr>\n            </thead>   \n            <tbody>\n            @foreach($order->orderItems as $orderitem)\n              <tr>\n                <td>{{$orderitem->title}}</td>\n                <td>{{$orderitem->pivot->amount}}</td>\n                <td>{{$orderitem->pivot->price}}</td>\n                <td>{{$orderitem->pivot->total}}</td>\n              </tr>\n            @endforeach\n              <tr>\n                <td></td>\n                <td></td>\n                <td><b>Total</b></td>\n                <td><b>{{$order->total}}</b></td>\n              </tr>\n              <tr>\n                <td><b>Shipping Address</b></td>\n                <td>{{$order->address}}</td>\n                <td></td>\n                <td></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n@endforeach\n</div>\n</div>\n@stop\n```"]