["```php\n{\n \"require\": {\n     \"laravel/framework\": \"5.*.*\",\n }\n}\n```", "```php\ncomposer create-project --prefer-dist laravel/laravel chapter-01\n```", "```php\nWriting lock file Generating autoload files > Illuminate\\Foundation\\ComposerScripts::postUpdate > php artisan optimize Generating optimized class loader\nphp artisan key:generate\n```", "```php\ncd chapter-01 && ls\n```", "```php\ndocker-compose up -d\n```", "```php\ndocker-compose up -d\n```", "```php\ndocker-compose exec php-fpm bash\n```", "```php\ndocker-compose exec php-fpm bash\n```", "```php\nphp artisan list\n```", "```php\nLaravel Framework version 5.2.45\nUsage:\n command [options] [arguments]\nOptions:\n -h, --help            Display this help message\n -q, --quiet           Do not output any message\n -V, --version         Display this application version\n --ansi            Force ANSI output\n --no-ansi         Disable ANSI output\n -n, --no-interaction  Do not ask any interactive question\n --env[=ENV]       The environment the command should run under.\n -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\n...\n```", "```php\nphp artisan -h migrate\n```", "```php\nphp artisan -h make:controller\n```", "```php\nphp artisan make:model Band\n```", "```php\n<?php\nnamespace App;\nuse Illuminate\\Database\\Eloquent\\Model;\nclass Band extends Model\n{\n    //\n}\n```", "```php\nphp artisan make:controller BandController \n```", "```php\n<?php\nnamespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests;\nclass BandController extends Controller\n{\n    //\n}\n```", "```php\n<div class=\"container\">\n    <div class=\"content\">\n        <div class=\"title\">Hi i'm a view</div>\n    </div>\n</div>\n```", "```php\nRoute::match(['get', 'post'], '/', function () {\n    //\n});\n```", "```php\nRoute::get('/band', function () {\n return view('band');\n });\n```", "```php\nphp artisan tinker\nDB::connection()->getPdo();\n```", "```php\n DB_CONNECTION=mysql\n DB_HOST=127.0.0.1\n DB_PORT=3306\n DB_DATABASE=homestead\n DB_USERNAME=homestead\n DB_PASSWORD=secret\n```", "```php\n DB_CONNECTION=mysql\n DB_HOST=mysql\n DB_PORT=3306\n DB_DATABASE=laravel-angular-book\n DB_USERNAME=laravel-angular-book\n DB_PASSWORD=123456\n```", "```php\nmysql:\n  image: mysql:8.0\n  entrypoint: ['/entrypoint.sh', '--character-set-server=utf8', '--\n  collation-server=utf8_general_ci']\n  container_name: larahell-mysql\n  working_dir: /application\n  volumes:\n    - .:/application\n  environment:\n    - MYSQL_ROOT_PASSWORD=larahell\n    - MYSQL_DATABASE=larahell-angular-book\n    - MYSQL_USER=larahell-user\n    - MYSQL_PASSWORD=123456\n  ports:\n    - \"8083:3306\"\n```", "```php\ndocker-compose exec php-fpm bash\n```", "```php\nphp artisan tinker DB::connection()->getPdo();\n```", "```php\nphp artisan make:migration create_bands_table\n```", "```php\nSchema::create('bands', function (Blueprint $table) {\n   $table->increments('id');\n   $table->string('name');\n   $table->string('description');\n   $table->timestamps();\n});\n```", "```php\nSchema::dropIfExists('bands');\n```", "```php\n<?php\nuse Illuminate\\Support\\Facades\\Schema;\n use Illuminate\\Database\\Schema\\Blueprint;\n use Illuminate\\Database\\Migrations\\Migration;\nclass CreateBandsTable extends Migration\n {\n     /**\n     * Run the migrations.\n     *\n     * @return void\n    */\n     public function up()\n     {\n         Schema::create('bands', function (Blueprint $table) {\n         $table->increments('id');\n         $table->string('name');\n         $table->string('description');\n         $table->timestamps();\n         });\n     }\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n     public function down()\n     {\n         Schema::dropIfExists('bands');\n     }\n }\n```", "```php\n$factory->define(App\\Band::class, function (Faker\\Generator $faker) {\nreturn [\n 'name' => $faker->word,\n 'description' => $faker->sentence\n ];\n });\n```", "```php\nphp artisan make:seeder BandsTableSeeder\n```", "```php\nfactory(App\\Band::class,5)->create()->each(function ($p) {\n $p->save();\n });\n```", "```php\n$this->call(BandsTableSeeder::class);\n```", "```php\nprotected $fillable = ['name','description'];\n```", "```php\nphp artisan migrate\n```", "```php\n Migration table created successfully.\n```", "```php\nphp artisan db:seed\n```", "```php\nexit\n```", "```php\ndocker-compose exec mysql mysql -ularavel-angular-book -p123456\n```", "```php\nshow databases;\n```", "```php\nuse laravel-angular-book;\n```", "```php\nshow tables;\n```", "```php\nSELECT * from bands;\n```", "```php\nexit\n```", "```php\nphp artisan make:controller BandController --resource\n```", "```php\n<?php\nnamespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\nclass BandController extends Controller\n {\n     /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n     public function index()\n     {\n         //\n     }\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n     public function create()\n     {\n         //\n     }\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n     public function store(Request $request)\n     {\n         //\n     }\n    /**\n     * Display the specified resource.\n     *\n     * @param int $id\n     * @return \\Illuminate\\Http\\Response\n     */\n     public function show($id)\n     {\n         //\n     }\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param int $id\n     * @return \\Illuminate\\Http\\Response\n     */\n     public function edit($id)\n     {\n         //\n     }\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param \\Illuminate\\Http\\Request $request\n     * @param int $id\n     * @return \\Illuminate\\Http\\Response\n     */\n     public function update(Request $request, $id)\n     {\n         //\n     }\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param int $id\n     * @return \\Illuminate\\Http\\Response\n     */\n     public function destroy($id)\n     {\n         //\n     }\n }\n```", "```php\n$bands = Band::all();\n return $bands;\n```", "```php\n$band = Band::find($id);\n return view('bands.show', array('band' => $band));\n```", "```php\nuse App\\Band;\n```", "```php\nRoute::get('/', function () {\n return view('welcome');\n });\nRoute::resource('bands', 'BandController');\n```", "```php\n[{\n  \"id\": 1,\n  \"name\": \"porro\",\n  \"description\": \"Minus sapiente ut libero explicabo et voluptas harum.\",\n  \"created_at\": \"2018-03-02 19:20:58\",\n  \"updated_at\": \"2018-03-02 19:20:58\"}\n...]\n```", "```php\n<h1>Band {{ $band->id }}</h1>\n<ul>\n<li>band: {{ $band->name }}</li>\n<li>description: {{ $band->description }}</li>\n</ul>\n```", "```php\n@foreach ($bands as $band)\n<h1>Band id: {{ $band->id }}</h1>\n<h2>Band name: {{ $band->name }}</h2>\n<p>Band Description: {{ $band->description }}</p>\n@endforeach\n```"]