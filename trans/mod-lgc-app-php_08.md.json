["```php\n**page_script.php**\n1 <?php\n2 $db = new Db($db_host, $db_user, $db_pass);\n3 $post_id = $_GET['post_id'];\n4 $stm = \"SELECT * FROM comments WHERE post_id = $post_id\";\n5 $rows = $db->query($stm);\n6 foreach ($rows as $row) {\n7 // output each row\n8 }\n9 ?>\n```", "```php\n**(SELECT|INSERT|UPDATE|DELETE)**\n\n```", "```php\n1 <?php\n2 $stm = \"SELECT * FROM comments WHERE post_id = $post_id\";\n3 $rows = $db->query($stm);\n4 ?>\n```", "```php\n**classes/Domain/Comments/CommentsGateway.php**\n1 <?php\n2 namespace Domain\\Comments;\n3\n4 class CommentsGateway\n5 {\n6 protected $db;\n7\n8 public function __construct(Db $db)\n9 {\n10 $this->db = $db;\n11 }\n12\n13 public function selectAllByPostId($post_id)\n14 {\n15 $stm = \"SELECT * FROM comments WHERE post_id = {$post_id}\";\n16 return $this->db->query($stm);\n17 }\n18 }\n19 ?>\n```", "```php\n<?php\n2 public function selectAllByPostId($post_id)\n3 {\n4 $post_id = \"'\" . $this->db->escape($post_id) . \"'\";\n5 $stm = \"SELECT * FROM comments WHERE post_id = {$post_id}\";\n6 return $this->db->query($stm);\n7 }\n8 ?>\n```", "```php\n<?php\n2 public function selectAllByPostId($post_id)\n3 {\n4 $post_id = $this->db->quote($post_id);\n5 $stm = \"SELECT * FROM comments WHERE post_id = {$post_id}\";\n6 return $this->db->query($stm);\n7 }\n8 ?>\n```", "```php\n1 <?php\n2 public function selectAllByPostId($post_id)\n3 {\n4 $stm = \"SELECT * FROM comments WHERE post_id = :post_id\";\n5 $bind = array('post_id' => $post_id);\n6\n7 $sth = $this->db->prepare($stm);\n8 $sth->execute($bind);\n9 return $sth->fetchAll(PDO::FETCH_ASSOC);\n10 }\n11 ?>\n```", "```php\n**tests/classes/Domain/Comments/CommentsGatewayTest.php**\n1 <?php\n2 namespace Domain\\Comments;\n3\n4 use Db;\n5\n6 class CommentsGatewayTest\n7 {\n8 protected $db;\n9\n10 protected $gateway;\n11\n12 public function setUp()\n13 {\n14 $this->db = new Db('test_host', 'test_user', 'test_pass');\n15 $this->gateway = new CommentsGateway($this->db);\n16 }\n17\n18 public function testSelectAllByPostId()\n19 {\n20 // a range of known IDs in the comments table\n21 $post_id = mt_rand(1,100);\n22\n23 // get the comment rows\n24 $rows = $this->gateway->selectAllByPostId($post_id);\n25\n26 // make sure they all match the post_id\n27 foreach ($rows as $row) {\n28 $this->assertEquals($post_id, $row['post_id']);\n29 }\n30 }\n31 }\n32 ?>\n```", "```php\n**page_script.php (before)**\n1 <?php\n2 $db = new Db($db_host, $db_user, $db_pass);\n3 $post_id = $_GET['post_id'];\n4 $stm = \"SELECT * FROM comments WHERE post_id = $post_id\";\n5 $rows = $db->query($stm);\n6 foreach ($rows as $row) {\n7 // output each row\n8 }\n9 ?>\n```", "```php\n**page_script.php (after)**\n1 <?php\n2 $db = new Db($db_host, $db_user, $db_pass);\n3 $comments_gateway = new CommentsGateway($db);\n4 $rows = $comments_gateway->selectAllByPostId($_GET['post_id']);\n5 foreach ($rows as $row) {\\\n6 // output each row\n7 }\n8 ?>\n```", "```php\n**page_script.php**\n1 <?php\n2 $db = new Db($db_host, $db_user, $db_pass);\n3\n4 $name = $db->escape($_POST['name']);\n5 $body = $db->escape($_POST['body']);\n6 $post_id = (int) $_POST['id'];\n7 $ip = $db->escape($_SERVER['REMOTE_ADDR']);\n8\n9 $stm = \"INSERT INTO comments (post_id, name, body, ip) \"\n10 .= \"VALUES ($post_id, '{$name}', '{$body}', '{$ip}'\";\n11\n12 $db->query($stm);\n13 $comment_id = $db->lastInsertId();\n14 ?>\n```", "```php\n1 <?php\n2 public function insert(array $bind)\n3 {\n4 $stm = \"INSERT INTO comments (post_id, name, body, ip) \"\n5 .= \"VALUES (:post_id, :name, :body, :ip)\";\n6 $this->db->query($stm, $bind);\n7 return $this->db->lastInsertId();\n8 }\n9 ?>\n```", "```php\n**page_script.php**\n1 <?php\n2 $db = new Db($db_host, $db_user, $db_pass);\n3 $comments_gateway = new CommentsGateway($db);\n4\n5 $input = array(\n6 'name' => $_POST['name'],\n7 'body' => $_POST['body'],\n8 'post_id' => $_POST['id'],\n9 'ip' => $_SERVER['REMOTE_ADDR'],\n10 );\n11\n12 $comment_id = $comments_gateway->insert($input);\n13 ?>\n```", "```php\n1 <?php\n2 $stm = \"SELECT * FROM comments WHERE post_id = $post_id LIMIT 10\";\n3 ?>\n```", "```php\n1 <?php\n2 public function selectAllByPostId($post_id, $limit = null)\n3 {\n4 $stm = \"SELECT * FROM comments WHERE post_id = :post_id\";\n5 if ($limit) {\n6 $stm .= \" LIMIT \" . (int) $limit;\n7 }\n8 $bind = array('post_id' => $post_id);\n9 return $this->db->query($stm, $bind);\n10 }\n11 ?>\n```", "```php\ntests/classes/Domain/Comments/CommentsGatewayTest.php\n1 <?php\n2 public function testSelectAllByPostId()\n3 {\n4 // a range of known IDs in the comments table\n5 $post_id = mt_rand(1,100);\n6\n7 // get the comment rows\n8 $rows = $this->gateway->selectAllByPostId($post_id);\n9\n10 // make sure they all match the post_id\n11 foreach ($rows as $row) {\n12 $this->assertEquals($post_id, $row['post_id']);\n13 }\n14\n15 // test with a limit\n16 $limit = 10;\n17 $rows = $this->gateway->selectAllByPostId($post_id, $limit);\n18 $this->assertTrue(count($rows) <= $limit);\n19 }\n20 }\n21 ?>\n```", "```php\n1 <?php\n2 // ...\n3 define(\"SEARCHNUM\", 10);\n4 // ...\n5 $page = ($page) ? $page : 0;\n6\n7 if (!empty($p) && $p!=\"all\" && $p!=\"none\") {\n8 $where = \"`foo` LIKE '%$p%'\";\n9 } else {\n10 $where = \"1\";\n11 }\n12\n13 if ($p==\"hand\") {\n14 $where = \"`foo` LIKE '%type1%'\"\n15 . \" OR `foo` LIKE '%type2%'\"\n16 . \" OR `foo` LIKE '%type3%'\";\n17 }\n18\n19 $where .= \" AND `bar`='1'\";\n20 if ($s) {\n21 $s = str_replace(\" \", \"%\", $s);\n22 $s = str_replace(\"'\", \"\", $s);\n23 $s = str_replace(\";\", \"\", $s);\n24 $where .= \" AND (`baz` LIKE '%$s%')\";\n25 $orderby = \"ORDER BY `baz` ASC\";\n26 } elseif ($letter!=\"none\" && $letter) {\n27 $where .= \" AND (`baz` LIKE '$letter%'\"\n28 . \" OR `baz` LIKE 'The $letter%')\";\n29 $orderby = \"ORDER BY `baz` ASC\";\n30 } else {\n31 $orderby = \"ORDER BY `item_date` DESC\";\n32 }\n33 $query = mysql_query(\n34 \"SELECT * FROM `items` WHERE $where $orderby\n35 LIMIT $page,\".SEARCHNUM;\n36 );\n37 ?>\n```", "```php\n1 <?php\n2 namespace Domain\\Items;\n3\n4 class ItemsGateway\n5 {\n6 protected $mysql_link;\n7\n8 public function __construct($mysql_link)\n9 {\n10 $this->mysql_link = $mysql_link;\n11 }\n12\n13 public function selectAll(\n14 $p = null,\n15 $s = null,\n16 $letter = null,\n17 $page = 0,\n18 $searchnum = 10\n19 ) {\n20 if (!empty($p) && $p!=\"all\" && $p!=\"none\") {\n21 $where = \"`foo` LIKE '%$p%'\";\n22 } else {\n23 $where = \"1\";\n24 }\n25\n26 if ($p==\"hand\") {\nExtract SQL Statements To Gateways 84\n27 $where = \"`foo` LIKE '%type1%'\"\n28 . \" OR `foo` LIKE '%type2%'\"\n29 . \" OR `foo` LIKE '%type3%'\";\n30 }\n31\n32 $where .= \" AND `bar`='1'\";\n33 if ($s) {\n34 $s = str_replace(\" \", \"%\", $s);\n35 $s = str_replace(\"'\", \"\", $s);\n36 $s = str_replace(\";\", \"\", $s);\n37 $where .= \" AND (`baz` LIKE '%$s%')\";\n38 $orderby = \"ORDER BY `baz` ASC\";\n39 } elseif ($letter!=\"none\" && $letter) {\n40 $where .= \" AND (`baz` LIKE '$letter%'\"\n41 . \" OR `baz` LIKE 'The $letter%')\";\n42 $orderby = \"ORDER BY `baz` ASC\";\n43 } else {\n44 $orderby = \"ORDER BY `item_date` DESC\";\n45 }\n46\n47 $stm = \"SELECT *\n48 FROM `items`\n49 WHERE $where\n50 $orderby\n51 LIMIT $page, $searchnum\";\n52\n53 return mysql_query($stm, $this->mysql_link);\n54 }\n55 }\n56 ?>\n```", "```php\n1 <?php\n2 // ...\n3 define(\"SEARCHNUM\", 10);\n4 // ...\n5 $page = ($page) ? $page : 0;\n6 $mysql_link = mysql_connect($db_host, $db_user, $db_pass);\n7 $items_gateway = new \\Domain\\Items\\ItemsGateway($mysql_link);\n8 $query = $items_gateway->selectAll($p, $s, $letter, $page, SEARCHNUM);\n9 ?>\n```", "```php\n1 <?php\n2 class Foo\n3 {\n4 protected $db;\n5\n6 public function __construct(Db $db)\n7 {\n8 $this->db = $db;\n9 }\n10\n11 public function doSomething($post_id)\n12 {\n13 $stm = \"SELECT * FROM comments WHERE post_id = $post_id\";\n14 $rows = $this->db->query($stm);\n15 foreach ($rows as $row) {\n16 // do something with each row\n17 }\n18 return $rows;\n19 }\n20 }\n21 ?>\n```", "```php\n1 <?php\n2 use Domain\\Comments\\CommentsGateway;\n3\n4 class Foo\n5 {\n6 protected $comments_gateway;\n7\n8 public function __construct(CommentsGateway $comments_gateway)\n9 {\n10 $this->comments_gateway = $comments_gateway;\n11 }\n12\n13 public function doSomething($post_id)\n14 {\n15 $rows = $this->comments_gateway->selectAllByPostId($post_id);\n16 foreach ($rows as $row) {\n17 // do something with each row\n18 }\n19 return $rows;\n20 }\n21 }\n22 ?>\n```", "```php\nclasses/AbstractGateway.php\n1 <?php\n2 abstract class AbstractGateway\n3 {\n4 protected $table;\n5\n6 protected $primary_key;\n7\n8 public function __construct(Db $db)\n9 {\n10 $this->db = $db;\n11 }\n12\n13 public function selectOneByPrimaryKey($primary_val)\n14 {\n15 $stm = \"SELECT * FROM {$this->table} \"\n16 .= \"WHERE {$this->primary_key} = :primary_val\";\n17 $bind = array('primary_val' => $primary_val);\n18 return $this->db->query($stm, $bind);\n19 }\n20 }\n21 ?>\n```", "```php\n1 <?php\n2 namespace Domain\\Items;\n3\n4 class ItemsGateway extends \\AbstractGateway\n5 {\n6 protected $table = 'items';\n7 protected $primary_key = 'item_id';\n8 }\n9 ?>\n```", "```php\n1 <?php\n2 // build a structure of posts with author and statistics data,\n3 // with all comments on each post.\n4 $page = (int) $_GET['page'];\n5 $limit = 10;\n6 $offset = $page * $limit; // a zero-based paging system\n7 $stm = \"SELECT *\n8 FROM posts\n9 LEFT JOIN authors ON authors.id = posts.author_id\n10 LEFT JOIN stats ON stats.post_id = posts.id\n11 LIMIT {$limit} OFFSET {$offset}\"\n12 $posts = $db->query($stm);\n13\n14 foreach ($posts as &$post) {\n15 $stm = \"SELECT * FROM comments WHERE post_id = {$post['id']}\";\n16 $post['comments'] = $db->query($stm);\n17 }\n18 ?>\n```", "```php\n1 <?php\n2 namespace Domain\\Posts;\n3\n4 class PostsGateway\n5 {\n6 protected $db;\n7\n8 public function __construct(Db $db)\n9 {\n10 $this->db = $db;\n11 }\n12\n13 public function selectAllWithAuthorsAndStats($limit = null, $offset = null)\n14 {\n15 $limit = (int) $limit;\nhttps://leanpub.com/sn1php\n16 $offset = (int) $offset;\n17 $stm = \"SELECT *\n18 FROM posts\n19 LEFT JOIN authors ON authors.id = posts.author_id\n20 LEFT JOIN stats ON stats.post_id = posts.id\n21 LIMIT {$limit} OFFSET {$offset}\"\n22 return $this->db->query($stm);\n23 }\n24 }\n25 ?>\n```", "```php\n1 <?php\n2 $db = new Database($db_host, $db_user, $db_pass);\n3 $posts_gateway = new \\Domain\\Posts\\PostsGateway($db);\n4 $comments_gateway = new \\Domain\\Comments\\CommentsGateway($db);\n5\n6 // build a structure of posts with author and statistics data,\n7 // with all comments on each post.\n8 $page = (int) $_GET['page'];\n9 $limit = 10;\n10 $offset = $page * $limit; // a zero-based paging system\n11 $posts = $posts_gateway->selectAllWithAuthorsAndStats($limit, $offset);\n12\n13 foreach ($posts as &$post) {\n14 $post['comments'] = $comments_gateway->selectAllByPostId($post['id']);\n15 }\n16 ?>\n```", "```php\n**Using mysql functions**\n1 <?php\n2 mysql_connect($db_host, $db_user, $db_pass);\n3 mysql_select_db('my_database');\n4 $result = mysql_query('SELECT * FROM table_name LIMIT 10');\n5 while ($row = mysql_fetch_assoc($result)) {\n6 // do something with each row\n7 }\n8 ?>\n```", "```php\n1 <?php\n2 $db = new \\Mlaphp\\MysqlDatabase($db_host, $db_user, $db_pass);\n3 $db->select_db('my_database'); // or $db->selectDb('my_database')\n4 $result = $db->query('SELECT * FROM table_name LIMIT 10');\n5 while ($row = $db->fetch_assoc($result)) {\n6 // do something with each row\n7 }\n8 ?>\n```"]