- en: Chapter 1. What is FuelPHP?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。什么是FuelPHP？
- en: FuelPHP is a fresh approach to frameworks that strive to be more community-driven.
    There are already more than a hundred developers contributing and extending the
    source code. There are many more helping to provide some of the best documentation
    for a framework currently available.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP是一种更加社区驱动的框架的新方法。已经有一百多名开发人员在贡献和扩展源代码。还有更多人在为当前可用框架提供一些最好的文档。
- en: Since it is community-driven, everyone is in an equal position to spot bugs,
    provide fixes, or add new features to the framework. This has led to the creation
    of features such as the new temporal **ORM** (**Object Relation Mapper**), which
    is a first for any PHP-based ORM. This also means that everyone can help build
    tools that make development easier, more straightforward, and quicker.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它是社区驱动的，每个人都处于发现错误、提供修复或向框架添加新功能的平等地位。这导致了一些功能的创建，比如新的临时**ORM**（**对象关系映射器**），这是任何基于PHP的ORM的首次。这也意味着每个人都可以帮助构建使开发更容易、更直接、更快速的工具。
- en: The framework is lightweight and allows developers to load only what they need.
    It's a configuration over convention approach. Instead of enforcing conventions,
    they act as recommendations and best practices. This allows new developers to
    jump onto a project and catch up to speed quicker. It also helps when we want
    to find extra team members for projects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 该框架轻巧，允许开发人员只加载他们需要的内容。这是一种配置优于约定的方法。它不是强制性的约定，而是作为建议和最佳实践。这使得新开发人员可以更快地加入项目并迅速跟上进度。当我们想要为项目找到额外的团队成员时，这也很有帮助。
- en: 'The topics covered in this chapter are:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的主题有：
- en: A brief history of FuelPHP
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FuelPHP的简要历史
- en: Features of FuelPHP
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FuelPHP的特点
- en: What to look forward to in Version 2
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第2版中可以期待什么
- en: A brief history of FuelPHP
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FuelPHP的简要历史
- en: FuelPHP started out with the goal of adopting the best practices from other
    frameworks to form a thoroughly modern starting point, which makes full use of
    PHP Version 5.3 features, such as namespaces. It has little in the way of legacy
    and compatibility issues that can affect older frameworks.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP的目标是采纳其他框架的最佳实践，形成一个彻底现代的起点，充分利用PHP版本5.3的特性，如命名空间。它几乎没有遗留和兼容性问题，这可能会影响旧框架。
- en: The framework was started in the year 2010 by *Dan Horrigan*. He was joined
    by Phil Sturgeon, Jelmer Schreuder, Harro Verton, and Frank de Jonge. FuelPHP
    was a break from other frameworks such as CodeIgniter, which was basically still
    a PHP 4 framework. This break allowed for the creation of a more modern framework
    for PHP 5.3, and brings together decades of experience of other languages and
    frameworks, such as Ruby on Rails and Kohana. After a period of community development
    and testing, Version 1.0 of the FuelPHP framework was released in July 2011\.
    This marked a version ready for use on production sites and the start of the growth
    of the community.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 该框架始于2010年由*Dan Horrigan*创建。他得到了Phil Sturgeon、Jelmer Schreuder、Harro Verton和Frank
    de Jonge的加入。FuelPHP是对其他框架（如CodeIgniter）的突破，后者基本上仍然是一个PHP 4框架。这一突破允许创建一个更现代的PHP
    5.3框架，并汇集了其他语言和框架（如Ruby on Rails和Kohana）数十年的经验。经过一段时间的社区开发和测试，FuelPHP框架的1.0版本于2011年7月发布。这标志着一个可以在生产站点上使用的版本，并标志着社区的增长开始。
- en: The community provides periodic releases (at the time of writing, it is up to
    Version 1.7) with a clear roadmap ([http://fuelphp.com/roadmap](http://fuelphp.com/roadmap))
    of features to be added. This also includes a good guide of progress made to date.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 社区定期发布版本（在撰写本文时，已经到了1.7版），并有一个清晰的路线图（[http://fuelphp.com/roadmap](http://fuelphp.com/roadmap)）来添加功能。这也包括迄今为止取得的进展的良好指南。
- en: The development of FuelPHP is an open process and all the code is hosted on
    GitHub at [https://github.com/fuel/fuel](https://github.com/fuel/fuel), and the
    main core packages can be found in other repositories on the Fuel GitHub account—a
    full list of these can be found at [https://github.com/fuel/](https://github.com/fuel/).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP的开发是一个开放的过程，所有的代码都托管在GitHub上，主要核心包可以在Fuel GitHub账户的其他存储库中找到——这些完整的列表可以在[https://github.com/fuel/](https://github.com/fuel/)找到。
- en: Features of FuelPHP
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FuelPHP的特点
- en: Using a Bespoke PHP or a custom-developed framework could give you a greater
    performance. FuelPHP provides many features, documentation, and a great community.
    The following sections describe some of the most useful features.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用定制的PHP或自定义开发的框架可以提供更好的性能。FuelPHP提供了许多功能、文档和一个伟大的社区。以下部分描述了一些最有用的功能。
- en: (H)MVC
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: (H)MVC
- en: Although FuelPHP is a **Model-View-Controller** (**MVC**) framework, it was
    built to support the HMVC variant of MVC. [Chapter 3](ch03.html "Chapter 3. The
    Architecture"), *The Architecture*, covers the MVC design pattern in detail. **Hierarchical
    Model-View-Controller** (**HMVC**) is a way of separating logic and then reusing
    the controller logic in multiple places. This means that when a web page is generated
    using a theme or a template section, it can be split into multiple sections or
    widgets. Using this approach, it is possible to reuse components or functionality
    throughout a project or in multiple projects.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管FuelPHP是一个**Model-View-Controller**（**MVC**）框架，但它是建立在支持HMVC变体的MVC上的。[第3章](ch03.html
    "第3章。架构") *架构*详细介绍了MVC设计模式。**Hierarchical Model-View-Controller**（**HMVC**）是一种将逻辑分离然后在多个地方重用控制器逻辑的方法。这意味着当使用主题或模板部分生成网页时，它可以被分割成多个部分或小部件。使用这种方法，可以在项目中或多个项目中重用组件或功能。
- en: In addition to the usual MVC structure, FuelPHP allows the use of presentation
    modules (ViewModels). These are a powerful layer that sits between the controller
    and the views, allowing for a smaller controller while still separating the view
    logic from both the controller and the views. If this isn't enough, FuelPHP also
    supports a router-based approach where you can directly route to a closure. This
    then deals with the execution of the input URI.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 除了通常的MVC结构外，FuelPHP还允许使用表示模块（ViewModels）。这是一个强大的层，位于控制器和视图之间，允许更小的控制器，同时仍然将视图逻辑与控制器和视图分离。如果这还不够，FuelPHP还支持基于路由器的方法，可以直接路由到闭包。然后处理输入URI的执行。
- en: Modular and extendable
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模块化和可扩展
- en: The core of FuelPHP has been designed so that it can be extended without the
    need for changing any code in the core. It introduces the notion of packages,
    which are self-contained functionality that can be shared between projects and
    people. Like the core, in the new versions of FuelPHP, these can be installed
    via the **Composer** tool. Just like packages, functionality can also be divided
    into modules. For example, a full user-authentication module can be created to
    handle user actions, such as registration. Modules can include both logic and
    views, and they can be shared between projects. The main difference between packages
    and modules is that packages can be extensions of the core functionality and they
    are not routable, while modules are routable. Both packages and modules are covered
    in [Chapter 5](ch05.html "Chapter 5. Packages"), *Packages* and [Chapter 6](ch06.html
    "Chapter 6. Advanced Topics"), *Advanced Topics*.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP的核心已经设计得可以在不需要更改核心代码的情况下进行扩展。它引入了包的概念，这些包是自包含的功能，可以在项目和人员之间共享。与核心一样，在FuelPHP的新版本中，这些可以通过**Composer**工具安装。就像包一样，功能也可以分成模块。例如，可以创建一个完整的用户认证模块来处理用户操作，如注册。模块可以包括逻辑和视图，并且可以在项目之间共享。包和模块的主要区别在于，包可以是核心功能的扩展，它们不可路由，而模块是可路由的。包和模块都在[第5章](ch05.html
    "第5章。包")、*包*和[第6章](ch06.html "第6章。高级主题")、*高级主题*中进行了介绍。
- en: Security
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全
- en: Everyone wants their applications to be as secure as possible; to this end,
    FuelPHP handles some of the basics for you. Views in FuelPHP will encode all the
    output to ensure that it's secure and is capable of avoiding **Cross-site scripting**
    (**XSS**) attacks. This behavior can be overridden or can be cleaned by the included
    htmLawed library.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都希望他们的应用尽可能安全；为此，FuelPHP为您处理了一些基本问题。FuelPHP中的视图将对所有输出进行编码，以确保其安全，并且能够避免**跨站脚本**（**XSS**）攻击。这种行为可以被覆盖，也可以通过包含的htmLawed库进行清理。
- en: The framework also supports **Cross-site request forgery** (**CSRF**) prevention
    with tokens, input filtering, and the query builder, which tries to help in preventing
    SQL injection attacks. **PHPSecLib** is used to offer some of the security features
    in the framework.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 该框架还支持使用令牌进行**跨站请求伪造**（**CSRF**）预防、输入过滤和查询构建器，试图帮助防止SQL注入攻击。**PHPSecLib**用于提供框架中的一些安全功能。
- en: Oil – the power of the command line
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 油-命令行的力量
- en: If you are familiar with CakePHP or the Zend framework or Ruby on Rails, then
    you will be comfortable with FuelPHP Oil. It is the command-line utility at the
    heart of FuelPHP—designed to speed up development and efficiency. It also helps
    with testing and debugging. Although not essential, it proves indispensable during
    development.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您熟悉CakePHP、Zend框架或Ruby on Rails，那么您将对FuelPHP Oil感到满意。它是FuelPHP核心的命令行实用程序，旨在加快开发和效率。它还有助于测试和调试。虽然不是必需的，但在开发过程中它被证明是不可或缺的。
- en: Oil provides a quick way for code generation, scaffolding, running database
    migrations, debugging, and cron-like tasks for background operations. It can also
    be used for custom tasks and background processes.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Oil提供了一种快速的方式来进行代码生成、脚手架、运行数据库迁移、调试和类似于cron的后台操作任务。它也可以用于自定义任务和后台进程。
- en: Oil is a package and can be found at [https://github.com/fuel/oil](https://github.com/fuel/oil).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Oil是一个包，可以在[https://github.com/fuel/oil](https://github.com/fuel/oil)找到。
- en: ORM
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ORM
- en: FuelPHP also comes with an **Object Relation Mapper** (**ORM**) package that
    helps in working with various databases through an object-oriented approach. It
    is relatively lightweight and is not supposed to replace the more complex ORMs
    such as Doctrine or Propel.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP还配备了一个**对象关系映射器**（**ORM**）包，可以通过面向对象的方式与各种数据库进行交互。它相对轻量级，不打算取代像Doctrine或Propel这样更复杂的ORM。
- en: 'The ORM also supports data relations such as:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: ORM还支持数据关系，如：
- en: belongs-to
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属于
- en: has-one
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个
- en: has-many
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有许多
- en: many-to-many relationships
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多对多关系
- en: Another nice feature is cascading deletions; in this case, the ORM will delete
    all the data associated with a single entry.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个不错的功能是级联删除；在这种情况下，ORM将删除与单个条目关联的所有数据。
- en: The ORM package is available separately from FuelPHP and is hosted on GitHub
    at [https://github.com/fuel/orm](https://github.com/fuel/orm).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: ORM包可以单独从FuelPHP中获取，并托管在GitHub上，网址为[https://github.com/fuel/orm](https://github.com/fuel/orm)。
- en: Base controller classes and model classes
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基控制器类和模型类
- en: FuelPHP includes several classes to give a head start on projects. These include
    controllers that help with templates, one for constructing RESTful APIs, and another
    that combines both templates and RESTful APIs.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP包括几个类，可以为项目提供一个良好的开端。其中包括帮助模板的控制器，用于构建RESTful API的控制器，以及结合了模板和RESTful
    API的控制器。
- en: On the model side, base classes include **CRUD** (**Create**, **Read**, **Update**,
    and **Delete**) operations. There is a model for soft deletion of records, one
    for nested sets, and lastly a temporal model. This is an easy way of keeping revisions
    of data.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在模型方面，基类包括**CRUD**（**创建**、**读取**、**更新**和**删除**）操作。有一个用于软删除记录的模型，一个用于嵌套集，最后是一个时间模型。这是一个保留数据修订的简单方法。
- en: The authentication package
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 认证包
- en: The authentication framework gives a good basis for user authentication and
    login functionality. It can be extended using drivers for new authentication methods.
    Some of the basics such as groups, basic ACL functions, and password hashing can
    be handled directly in the authentication framework.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 身份验证框架为用户身份验证和登录功能提供了良好的基础。可以使用驱动程序来扩展新的身份验证方法。一些基本功能，如组、基本的ACL功能和密码哈希，可以直接在身份验证框架中处理。
- en: Although the authentication package is included when installing FuelPHP, it
    can be upgraded separately to the rest of the application. The code can be obtained
    from [https://github.com/fuel/auth](https://github.com/fuel/auth).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在安装FuelPHP时包含了身份验证包，但它可以单独升级到应用程序的其余部分。代码可以从[https://github.com/fuel/auth](https://github.com/fuel/auth)获取。
- en: Template parsers
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模板解析器
- en: The parser package makes it even easier to separate logic from views instead
    of embedding basic PHP into the views. FuelPHP supports many template languages,
    such as Twig, Markdown, Smarty, and **HTML Abstraction Markup Language** (**Haml**).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 解析器包使将逻辑与视图分离变得更加容易，而不是将基本的PHP嵌入视图中。FuelPHP支持许多模板语言，如Twig、Markdown、Smarty和HTML抽象标记语言（Haml）。
- en: Documentation
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档
- en: Although not particularly a feature of the actual framework, the documentation
    for FuelPHP is one of the best available. It is kept up-to-date for each release
    and can be found at [http://fuelphp.com/docs/](http://fuelphp.com/docs/).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这不是实际框架的特性，但FuelPHP的文档是最好的之一。它会随着每个版本的发布而保持最新，并且可以在[http://fuelphp.com/docs/](http://fuelphp.com/docs/)找到。
- en: What to look forward to in Version 2.0
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 期待2.0版本的内容
- en: Although this book focuses on FuelPHP 1.6 and newer, it is worth looking forward
    to the next major release of the framework. It brings significant improvements
    but also makes some changes to the way the framework functions.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本书侧重于FuelPHP 1.6及更新版本，但值得期待框架的下一个重大版本。它带来了重大改进，但也对框架的功能方式进行了一些改变。
- en: Global scope and moving to dependency injection
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 全局范围和转向依赖注入
- en: One of the nice features of FuelPHP is the global scope that allows easy static
    syntax and instances when needed. One of the biggest changes in Version 2 is the
    move away from static syntax and instances. The framework used the **Multiton
    design pattern**, rather than the **Singleton design pattern**. Now, the majority
    of Multitons will be replaced with the **Dependency Injection Container** (**DiC**)
    design pattern, but this depends on the class in question.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP的一个很好的特性是全局范围，可以在需要时轻松使用静态语法和实例。版本2中最大的变化之一是摆脱静态语法和实例。该框架使用多例设计模式，而不是单例设计模式。现在，大多数多例将被依赖注入容器（DiC）设计模式取代，但这取决于所讨论的类。
- en: The reason for the changes is to allow the unit testing of core files and to
    dynamically swap and/or extend our other classes depending upon the needs of the
    application. The move to dependency injection will allow all the core functionality
    to be tested in isolation.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 更改的原因是允许对核心文件进行单元测试，并根据应用程序的需求动态交换和/或扩展其他类。转向依赖注入将允许对所有核心功能进行隔离测试。
- en: Before detailing the next feature, let's run through the design patterns in
    more detail.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在详细介绍下一个功能之前，让我们更详细地了解设计模式。
- en: Singleton
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单例
- en: Ensures that a class only has a single instance and it provides a global point
    of access to it. The thinking is that a single instance of a class or object can
    be more efficient, but it can add unnecessary restrictions to classes that may
    be better served using a different design pattern.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 确保一个类只有一个实例，并为其提供全局访问点。这种思路是一个类或对象的单一实例可能更有效，但它可能会给可能更适合使用不同设计模式的类增加不必要的限制。
- en: Multiton
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多例模式
- en: This is similar to the singleton pattern but expands upon it to include a way
    of managing a map of named instances as key-value pairs. So instead of having
    a single instance of a class or object, this design pattern ensures that there
    is a single instance for each key-value pair. Often the multiton is known as a
    registry of singletons.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这类似于单例模式，但在此基础上扩展，包括一种以键值对形式管理命名实例映射的方法。因此，这种设计模式确保每个键值对都有一个单一的实例，而不是一个类或对象的单一实例。多例通常被称为单例的注册表。
- en: Dependency injection container
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 依赖注入容器
- en: This design pattern aims to remove hard coded dependencies and make is possible
    to change them either at run time or compile time.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计模式旨在消除硬编码的依赖关系，并使其可以在运行时或编译时进行更改。
- en: One example is ensure that variables have default values but also allow for
    them to be overridden, also allow for other objects to be passed to class for
    manipulation.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是确保变量具有默认值，但也允许它们被覆盖，还允许其他对象传递给类进行操作。
- en: It allows for mock objects to be used whilst testing functionality.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 它允许在测试功能时使用模拟对象。
- en: Coding standards
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编码标准
- en: One of the far-reaching changes will be the difference in coding standards.
    FuelPHP Version 2.0 will now conform to both PSR-0 and PSR-1\. This allows a more
    standard auto-loading mechanism and the ability to use Composer. Although Composer
    compatibility was introduced in Version 1.5, this move to PSR is for better consistency.
    It means that the method names will follow the "camelCase" method rather than
    the current "snake_case" method names. Although a simple change, this is likely
    to have a large effect on existing projects and APIs.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一个深远的变化将是编码标准的不同。FuelPHP 2.0现在将符合PSR-0和PSR-1。这允许更标准的自动加载机制和使用Composer的能力。虽然Composer兼容性是在1.5版本中引入的，但这一移动是为了更好的一致性。这意味着方法名称将遵循“驼峰命名法”而不是当前的“蛇形命名法”。虽然这是一个简单的改变，但这可能会对现有项目和API产生很大的影响。
- en: With a similar move of other PHP frameworks to a more standardized coding standard,
    there will be more opportunities to re-use functionality from other frameworks.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 随着其他PHP框架向更标准化的编码标准迈出类似的步伐，将有更多机会重用其他框架的功能。
- en: Package management and modularization
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 包管理和模块化
- en: Package management for other languages such as Ruby and Ruby on Rails has made
    sharing pieces of code and functionality easy and common-place. The PHP world
    is much larger and this same sharing of functionality is not as common. **PHP
    Extension and Application Repository** (**PEAR**) was a precursor of most package
    managers. It is a framework and distribution system for re-usable PHP components.
    Although infinitely useful, it is not as widely supported by the more popular
    PHP frameworks.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他语言的包管理，比如Ruby和Ruby on Rails，共享代码和功能很容易且很常见。PHP世界更大，但功能的共享并不那么普遍。**PHP扩展和应用程序仓库**（**PEAR**）是大多数包管理器的前身。它是一个可重用的PHP组件的框架和分发系统。虽然非常有用，但它并没有得到更流行的PHP框架的广泛支持。
- en: Starting with FuelPHP 1.6 and leading into FuelPHP 2.0, dependency management
    will be possible through Composer ([http://getcomposer.org](http://getcomposer.org)).
    This deals with not only single packages, but also their dependencies. It allows
    projects to consistently set up with known versions of libraries required by each
    project. This helps not only with development, but also its testability of the
    project as well as its maintainability.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 从FuelPHP 1.6开始，一直到FuelPHP 2.0，依赖管理将通过Composer（[http://getcomposer.org](http://getcomposer.org)）实现。这不仅涉及单个包，还涉及它们的依赖关系。它允许项目使用每个项目所需的已知版本的库进行一致设置。这不仅有助于开发，还有助于项目的可测试性和可维护性。
- en: It also protests against API changes. The core of FuelPHP and other modules
    will be installed via Composer and there will be a gradual migration of some Version
    1 packages.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 它还抗议API的更改。FuelPHP的核心和其他模块将通过Composer安装，并且一些1.0版本的包将逐渐迁移。
- en: Backwards compatibility
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向后兼容性
- en: A legacy package will be released for FuelPHP that will provide aliases for
    the changed function names as part of the change in the coding standards. It will
    also allow the current use of static function calling to continue working, while
    allowing for a better ability to unit test the core functionality.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP将发布一个遗留包，为了符合编码标准的变化，它将提供对已更改的函数名称的别名。它还将允许继续使用静态函数调用，同时提供更好的核心功能单元测试能力。
- en: Speed boosts
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 速度提升
- en: Although initially slower during the initial alpha phases, Version 2.0 is shaping
    up to be faster than Version 1.0\. Currently, the beta version (at the time of
    writing) is 7 percent faster while requiring 8 percent less memory. This might
    not sound much, but it can equate to a large saving if running a large website
    over multiple servers. These figures may get better in the final release of Version
    2.0 after the remaining optimizations are complete.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在最初的alpha阶段速度较慢，但2.0版本正在变得比1.0版本更快。目前（写作时）的beta版本比1.0版本快7%，内存占用减少8%。这听起来可能不多，但如果在多台服务器上运行一个大型网站，这可能会节省大量资源。在2.0版本的最终发布后，这些数字可能会更好，因为剩余的优化工作已经完成。
- en: Summary
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We now know a little more about the history of FuelPHP and some of the useful
    features such as ORM, authentication, modules, (H)MVC, and Oil (the command-line
    interface).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在对FuelPHP的历史和一些有用的功能有了更多了解，比如ORM、身份验证、模块、（H）MVC和Oil（命令行界面）。
- en: We have also listed the following useful links, including the official API documentation
    ([http://fuelphp.com/docs/](http://fuelphp.com/docs/)) and the FuelPHP home page
    ([http://fuelphp.com](http://fuelphp.com)).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还列出了以下有用的链接，包括官方API文档（[http://fuelphp.com/docs/](http://fuelphp.com/docs/)）和FuelPHP主页（[http://fuelphp.com](http://fuelphp.com)）。
- en: This chapter also touched upon some of the new features and changes due in Version
    2.0 of FuelPHP.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 本章还涉及了FuelPHP 2.0版本中即将到来的一些新功能和变化。
- en: In the next chapter, we will install FuelPHP along with an introduction to the
    different environments and configurations.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将安装FuelPHP，并介绍不同的环境和配置。
