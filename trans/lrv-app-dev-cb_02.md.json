["```php\n    Route::get(userform, function()\n    {\n        return View::make('userform');\n    });\n    ```", "```php\n    <h1>User Info</h1>\n    <?= Form::open() ?>\n    <?= Form::label('username', 'Username') ?>\n    <?= Form::text('username') ?>\n    <br>\n    <?= Form::label('password', 'Password') ?>\n    <?= Form::password('password') ?>\n    <br>\n    <?= Form::label('color', 'Favorite Color') ?>\n    <?= Form::select('color', array('red' => 'red', 'green' =>'green', 'blue' => 'blue')) ?>\n    <br>\n    <?= Form::submit('Send it!') ?>\n    <?= Form::close() ?>\n    ```", "```php\n    Route::post('userform', function()\n    {\n        // Process the data here\n        return Redirect::to('userresults')-\n            >withInput(Input::only('username', 'color'));\n    });\n\n    ```", "```php\n    Route::get('userresults', function()\n    {\n        return 'Your username is: ' . Input::old('username')\n            . '<br>Your favorite color is: '\n            . Input::old('color');\n    });\n\n    ```", "```php\nRoute::post('userform', function()\n{\n    Input::flashOnly('username', 'color');\n    return Redirect::to('userresults');\n});\n```", "```php\n    Route::get('userform', function()\n    {\n        return View::make('userform');\n    });\n    ```", "```php\n    <h1>User Info</h1>\n    <?php $messages =  $errors->all('<pstyle=\"color:red\">:message</p>') ?>\n    <?php\n    foreach ($messages as $msg)\n    {\n        echo $msg;\n    }\n    ?>\n    <?= Form::open() ?>\n    <?= Form::label('email', 'Email') ?>\n    <?= Form::text('email', Input::old('email')) ?>\n    <br>\n    <?= Form::label('username', 'Username') ?>\n    <?= Form::text('username', Input::old('username')) ?>\n    <br>\n    <?= Form::label('password', 'Password') ?>\n    <?= Form::password('password') ?>\n    <br>\n    <?= Form::label('password_confirm', 'Retype your Password')?>\n    <?= Form::password('password_confirm') ?>\n    <br>\n    <?= Form::label('color', 'Favorite Color') ?>\n    <?= Form::select('color', array('red' => 'red', 'green' =>'green', 'blue' => 'blue'), Input::old('color')) ?>\n    <br>\n    <?= Form::submit('Send it!') ?>\n    <?php echo Form::close() ?>\n    ```", "```php\n    Route::post('userform', function()\n    {\n        $rules = array(\n            'email' => 'required|email|different:username',\n            'username' => 'required|min:6',\n            'password' => 'required|same:password_confirm'\n        );\n        $validation = Validator::make(Input::all(), $rules);\n\n        if ($validation->fails())\n        {\n            return Redirect::to('userform')-\n                >withErrors($validation)->withInput();\n        }\n\n        return Redirect::to('userresults')->withInput();\n\n    });\n\n    ```", "```php\n    Route::get('userresults', function()\n    {\n        return dd(Input::old());\n    });\n    ```", "```php\n    Route::get('fileform', function()\n    {\n        return View::make('fileform');\n    });\n    ```", "```php\n    <h1>File Upload</h1>\n    <?= Form::open(array('files' => TRUE)) ?>\n    <?= Form::label('myfile', 'My File') ?>\n    <br>\n    <?= Form::file('myfile') ?>\n    <br>\n    <?= Form::submit('Send it!') ?>\n    <?= Form::close() ?>\n    ```", "```php\n    Route::post('fileform', function()\n    {\n        $file = Input::file('myfile');\n        $ext = $file->guessExtension();\n        if ($file->move('files', 'newfilename.' . $ext))\n        {\n            return 'Success';\n        }\n        else\n        {\n            return 'Error';\n        }\n    });\n    ```", "```php\n    Route::get('fileform', function()\n    {\n        return View::make('fileform');\n    });\n    ```", "```php\n    <h1>File Upload</h1>\n    <?php $messages =  $errors->all('<p style=\"color:red\">:message</p>') ?>\n    <?php\n    foreach ($messages as $msg)\n    {\n        echo $msg;\n    }\n    ?>\n    <?= Form::open(array('files' => TRUE)) ?>\n    <?= Form::label('myfile', 'My File (Word or Text doc)') ?>\n    <br>\n    <?= Form::file('myfile') ?>\n    <br>\n    <?= Form::submit('Send it!') ?>\n    <?= Form::close() ?>\n    ```", "```php\n    Route::post('fileform', function()\n    {\n        $rules = array(\n            'myfile' => 'mimes:doc,docx,pdf,txt|max:1000'\n        );\n        $validation = Validator::make(Input::all(), $rules);\n\n        if ($validation->fails())\n        {\n    return Redirect::to('fileform')->withErrors($validation)->withInput();\n        }\n        else\n        {\n            $file = Input::file('myfile');\n            if ($file->move('files', $file->getClientOriginalName()))\n            {\n                return \"Success\";\n            }\n            else \n            {\n                return \"Error\";\n            }\n        }\n    });\n    ```", "```php\n'myfile' => 'image'\n```", "```php\n    Route::get('myform', function()\n    {\n        return View::make('myform');\n    });\n    ```", "```php\n    <h1>User Info</h1>\n    <?php $messages =  $errors->all\n        ('<p style=\"color:red\">:message</p>') ?>\n    <?php\n    foreach ($messages as $msg) \n    {\n        echo $msg;\n    }\n    ?>\n    <?= Form::open() ?>\n    <?= Form::label('email', 'Email') ?>\n    <?= Form::text('email', Input::old('email')) ?>\n    <br>\n    <?= Form::label('username', 'Username') ?>\n    <?= Form::text('username', Input::old('username')) ?>\n    <br>\n    <?= Form::label('password', 'Password') ?>\n    <?= Form::password('password') ?>\n    <br>\n    <?= Form::submit('Send it!') ?>\n    <?= Form::close() ?>\n    ```", "```php\n    Route::post('myform', array('before' => 'csrf', function()\n    {\n        $rules = array(\n            'email'    => 'required|email|min:6',\n            'username' => 'required|min:6',\n            'password' => 'required'\n        );\n\n        $messages = array(\n            'min' => 'Way too short! The :attribute must be atleast :min characters in length.',\n            'username.required' => 'We really, really need aUsername.'\n        );\n\n        $validation = Validator::make(Input::all(), $rules,$messages);\n\n        if ($validation->fails())\n        {\n            return Redirect::to('myform')->withErrors($validation)->withInput();\n        }\n\n        return Redirect::to('myresults')->withInput();\n    }));\n    ```", "```php\n    'attributes' => array(\n        'password' => 'Super Secret Password (shhhh!)'\n    ),\n    ```", "```php\n    Route::get('myresults', function()\n    {\n        return dd(Input::old());\n    });\n    ```", "```php\n    Route::get('myform', function()\n    {\n        return View::make('myapp');\n    });\n    ```", "```php\n    <h1>User Info</h1>\n    <?php $messages =  $errors->all('<p style =\"color:red\">:message</p>') ?>\n    <?php\n    foreach ($messages as $msg)\n    {\n        echo $msg;\n    }\n    ?>\n    <?= Form::open() ?>\n    <?= Form::label('email', 'Email') ?>\n    <?= Form::text('email', Input::old('email')) ?>\n    <br>\n    <?= Form::label('username', 'Username') ?>\n    <?= Form::text('username', Input::old('username')) ?>\n    <br>\n    <?= Form::label('password', 'Password') ?>\n    <?= Form::password('password') ?>\n    <?= Form::text('no_email', '', array('style' =>'display:none')) ?>\n    <br>\n    <?= Form::submit('Send it!') ?>\n    <?= Form::close() ?>\n    ```", "```php\n    Route::post('myform', array('before' => 'csrf', function()\n    {\n        $rules = array(\n            'email'    => 'required|email',\n            'password' => 'required',\n            'no_email' => 'honey_pot'\n        );\n        $messages = array(\n            'honey_pot' => 'Nothing should be in this field.'\n        );\n        $validation = Validator::make(Input::all(), $rules,$messages);\n\n        if ($validation->fails())\n        {\n            return Redirect::to('myform')->withErrors($validation)->withInput();\n        }\n\n        return Redirect::to('myresults')->withInput();\n    }));\n    ```", "```php\n    Validator::extend('honey_pot', function($attribute, $value,$parameters)\n    {\n        return $value == '';\n    });\n    ```", "```php\n    Route::get('myresults', function()\n    {\n        return dd(Input::old());\n    });\n    ```", "```php\n    Route::get('redactor', function() \n    {\n        return View::make('redactor');\n    });\n    ```", "```php\n    <!DOCTYPE html>\n    <html>\n        <head>\n            <title>Laravel and Redactor</title>\n            <meta charset=\"utf-8\">\n            <link rel=\"stylesheet\" href=\"css/redactor.css\" />\n            <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\n            <script src=\"js/redactor.min.js\"></script>\n        </head>\n        <body>\n            <?= Form::open() ?>\n            <?= Form::label('mytext', 'My Text') ?>\n            <br>\n            <?= Form::textarea('mytext', '', array('id' =>'mytext')) ?>\n            <br>\n            <?= Form::submit('Send it!') ?>\n            <?= Form::close() ?>\n            <script type=\"text/javascript\">\n                $(function() {\n                    $('#mytext').redactor({\n                        imageUpload: 'redactorupload'\n                    });\n                });\n            </script>\n        </body>\n    </html>\n    ```", "```php\n    Route::post('redactorupload', function()\n    {\n        $rules = array(\n            'file' => 'image|max:10000'\n        );\n        $validation = Validator::make(Input::all(), $rules);\n        $file = Input::file('file');\n        if ($validation->fails())\n        {\n            return FALSE;\n        }\n        else\n        {\n            if ($file->move('files', $file->\n                getClientOriginalName()))\n            {\n                return Response::json(array('filelink' =>\n                   'files/' . $file->getClientOriginalName()));\n            }\n            else\n            {\n                return FALSE;\n            }\n        }\n    });\n\n    ```", "```php\n    Route::post('redactor', function() \n    {\n        return dd(Input::all());\n    });\n    ```", "```php\n    Route::get('imageform', function()\n    {\n        return View::make('imageform');\n    });\n    ```", "```php\n    <h1>Laravel and Jcrop</h1>\n    <?= Form::open(array('files' => true)) ?>\n    <?= Form::label('image', 'My Image') ?>\n    <br>\n    <?= Form::file('image') ?>\n    <br>\n    <?= Form::submit('Upload!') ?>\n    <?= Form::close() ?>\n    ```", "```php\n    Route::post('imageform', function()\n    {\n        $rules = array(\n            'image' => 'required|mimes:jpeg,jpg|max:10000'\n        );\n\n        $validation = Validator::make(Input::all(), $rules);\n\n        if ($validation->fails())\n        {\n            return Redirect::to('imageform')->withErrors($validation);\n        }\n        else\n        {\n            $file = Input::file('image');\n            $file_name = $file->getClientOriginalName();\n            if ($file->move('images', $file_name))\n            {\n                return Redirect::to('jcrop')->with('image',$file_name);\n            }\n            else\n            {\n                return \"Error uploading file\";\n            }\n        }\n    });\n    ```", "```php\n    Route::get('jcrop', function()\n    {\n        return View::make('jcrop')->with('image', 'images/'. Session::get('image'));\n    });\n    ```", "```php\n    <html>\n        <head>\n            <title>Laravel and Jcrop</title>\n            <meta charset=\"utf-8\">\n            <link rel=\"stylesheet\" href=\"css/jquery.Jcrop.min.css\" />\n            <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\n            <script src=\"js/jquery.Jcrop.min.js\"></script>\n        </head>\n        <body>\n            <h2>Image Cropping with Laravel and Jcrop</h2>\n            <img src=\"<?php echo $image ?>\" id=\"cropimage\">\n\n            <?= Form::open() ?>\n            <?= Form::hidden('image', $image) ?>\n            <?= Form::hidden('x', '', array('id' => 'x')) ?>\n            <?= Form::hidden('y', '', array('id' => 'y')) ?>\n            <?= Form::hidden('w', '', array('id' => 'w')) ?>\n            <?= Form::hidden('h', '', array('id' => 'h')) ?>\n            <?= Form::submit('Crop it!') ?>\n            <?= Form::close() ?>\n\n            <script type=\"text/javascript\">\n                $(function() {\n                    $('#cropimage').Jcrop({\n                        onSelect: updateCoords\n                    });\n                });\n                function updateCoords(c) {\n                    $('#x').val(c.x);\n                    $('#y').val(c.y);\n                    $('#w').val(c.w);\n                    $('#h').val(c.h);\n                };\n            </script>\n        </body>\n    </html>\n    ```", "```php\n    Route::post('jcrop', function()\n    {\n        $quality = 90;\n\n        $src  = Input::get('image');\n        $img  = imagecreatefromjpeg($src);\n        $dest = ImageCreateTrueColor(Input::get('w'),\n            Input::get('h'));\n\n        imagecopyresampled($dest, $img, 0, 0, Input::get('x'),\n            Input::get('y'), Input::get('w'), Input::get('h'),\n            Input::get('w'), Input::get('h'));\n        imagejpeg($dest, $src, $quality);\n\n        return \"<img src='\" . $src . \"'>\";\n    });\n\n    ```", "```php\n    Route::get('autocomplete', function()\n    {\n        return View::make('autocomplete');\n    });\n    ```", "```php\n    <!DOCTYPE html>\n    <html>\n        <head>\n            <title>Laravel Autocomplete</title>\n            <meta charset=\"utf-8\">\n            <link rel=\"stylesheet\"href=\"//codeorigin.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css\" />\n            <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\n            <script src=\"//codeorigin.jquery.com/ui/1.10.2/jquery-ui.min.js\"></script>\n        </head>\n        <body>\n            <h2>Laravel Autocomplete</h2>\n\n            <?= Form::open() ?>\n            <?= Form::label('auto', 'Find a color: ') ?>\n            <?= Form::text('auto', '', array('id' => 'auto'))?>\n            <br>\n            <?= Form::label('response', 'Our color key: ') ?>\n            <?= Form::text('response', '', array('id' =>'response', 'disabled' => 'disabled')) ?>\n            <?= Form::close() ?>\n\n            <script type=\"text/javascript\">\n                $(function() {\n                    $(\"#auto\").autocomplete({\n                        source: \"getdata\",\n                        minLength: 1,\n                        select: function( event, ui ) {\n                            $('#response').val(ui.item.id);\n                        }\n                    });\n                });\n            </script>\n        </body>\n    </html>\n    ```", "```php\n    Route::get('getdata', function()\n    {\n        $term = Str::lower(Input::get('term'));\n        $data = array(\n            'R' => 'Red',\n            'O' => 'Orange',\n            'Y' => 'Yellow',\n            'G' => 'Green',\n            'B' => 'Blue',\n            'I' => 'Indigo',\n            'V' => 'Violet',\n        );\n        $return_array = array();\n\n        foreach ($data as $k => $v) {\n            if (strpos(Str::lower($v), $term) !== FALSE) {\n                $return_array[] = array('value' => $v, 'id' =>$k);\n            }\n        }\n        return Response::json($return_array);\n    });\n    ```", "```php\n    \"autoload\": {\n        \"classmap\": [\n            \"app/commands\",\n            \"app/controllers\",\n            \"app/models\",\n            \"app/database/migrations\",\n            \"app/database/seeds\",\n            \"app/tests/TestCase.php\",\n            \"app/libraries\"\n        ]\n    },\n    ```", "```php\n    <?php\n    class Captcha {\n        public function make() \n        {\n            $string = Str::random(6, 'alpha');\n            Session::put('my_captcha', $string);\n\n            $width      = 100;\n            $height     = 25;\n            $image      = imagecreatetruecolor($width,$height);\n            $text_color = imagecolorallocate($image, 130, 130,130);\n            $bg_color   = imagecolorallocate($image, 190, 190,190);\n\n            imagefilledrectangle($image, 0, 0, $width, $height,$bg_color);        \n            imagestring($image, 5, 16, 4, $string,$text_color);\n\n            ob_start();\n            imagejpeg($image);\n            $jpg = ob_get_clean();\n            return \"data:image/jpeg;base64,\". base64_encode($jpg);\n        }\n    }\n    ```", "```php\n    **php composer.phar dump-autoload**\n\n    ```", "```php\n    Route::get('captcha', function() \n    {\n        $captcha = new Captcha;\n        $cap = $captcha->make();\n        return View::make('captcha')->with('cap', $cap);\n    });\n    ```", "```php\n    <h1>Laravel Captcha</h1>\n    <?php\n    if (Session::get('captcha_result')) {\n        echo '<h2>' . Session::get('captcha_result') . '</h2>';\n    }\n    ?>\n    <?php echo Form::open() ?>\n    <?php echo Form::label('captcha', 'Type these letters:') ?>\n    <br>\n    <img src=\"<?php echo $cap ?>\">\n    <br>\n    <?php echo Form::text('captcha') ?>\n    <br>\n    <?php echo Form::submit('Verify!') ?>\n    <?php echo Form::close() ?>\n    ```", "```php\n    Route::post('captcha', function() \n    {\n        if (Session::get('my_captcha') !==Input::get('captcha')) {\n            Session::flash('captcha_result', 'No Match.');\n        } else {\n            Session::flash('captcha_result', 'They Match!');\n        }\n        return Redirect::to('captcha');\n    });\n    ```"]