["```php\n# File: /etc/httpd/httpd.conf\n[...]\nLoadModule ssl_module /usr/lib/httpd/modules/mod_ssl.so\nLoadModule http2_module /usr/lib/httpd/modules/mod_http2.so\n[...]\n\n# File: /etc/httpd/extra/httpd-ssl.conf\n[...]\n<VirtualHost _default_:443>\n\nProtocols h2 http/1.1\n\n#   General setup for the virtual host\nDocumentRoot \"/srv/www\"\n[...]\n```", "```php\n# rm /srv/www\n# ln -s /srv/fasterweb/chapter_9 /srv/www\n# cd /srv/www\n# cat >>/etc/php.ini << EOF \n> [OpCache] \n> zend_extension = $( php -i | grep extensions | awk '{print $3}' )/opcache.so \n> EOF \n# sed -i 's/;opcache.enable=1/opcache.enable=1/' /etc/php.ini \n# sed -i 's/Proxy \"fcgi://127.0.0.1:9000\"/Proxy \"unix:/run/php-fpm.sock|fcgi://localhost/\"/' /etc/httpd/httpd.conf \n# sed -i 's/# SetHandler \"proxy:unix:/SetHandler \"proxy:unix:/' /etc/httpd/httpd.conf \n# sed -i 's/SetHandler \"proxy:fcgi:/# SetHandler \"proxy:fcgi:/' /etc/httpd/httpd.conf \n# sed -i 's/listen = 127.0.0.1:9000/; listen = 127.0.0.1:9000nlisten = /run/php-fpm.sock/' /etc/php-fpm.d/www.conf \n# /etc/init.d/php-fpm restart \n# chown apache:apache /run/php-fpm.sock \n# /etc/init.d/httpd restart \n```", "```php\n# docker run --rm -it -p 8383:80 asclinux/linuxforphp-8.1:src /bin/bash -c \"cd ; wget -O tmp http://bit.ly/2jheBrr ; /bin/bash ./tmp 7.2.5 nts ; echo '<?php phpinfo();' > /srv/www/index.php ; /bin/bash\"\n```", "```php\n<!DOCTYPE html>\n<html>\n    <body>\n        ... content ...\n\n        <!-- Cache part of the page here -->\n        <esi:include src=\"http://...\" />\n\n        ... content continued ...\n    </body>\n</html>\n```", "```php\n# public/index.php\n\n[...]\n\n$request = Request::createFromGlobals();\n\n// Have Symfony trust your reverse proxy\nRequest::setTrustedProxies(\n\n    // the IP address (or range) of your proxy\n    ['192.0.0.1', '10.0.0.0/8'],\n\n    // Trust the \"Forwarded\" header\n    Request::HEADER_FORWARDED\n\n    // or, trust *all* \"X-Forwarded-*\" headers\n    // Request::HEADER_X_FORWARDED_ALL\n\n    // or, trust headers when using AWS ELB\n    // Request::HEADER_X_FORWARDED_AWS_ELB\n\n); }\n\n[...]\n```", "```php\n# config/packages/framework.yaml\n\nframework:\n    # ...\n    esi: { enabled: true }\n    fragments: { path: /_fragment }\n```", "```php\n# src/Controller/SomeController.php\n\nnamespace App\\Controller;\n\n...\n\nclass SomeController extends Controller\n{\n    public function indexAction()\n    {\n        $response = $this->render('static/index.html.twig');\n\n        $response->setSharedMaxAge(600);\n\n        return $response;\n    }\n}\n```", "```php\n# src/Controller/OtherController.php\n\nnamespace App\\Controller;\n\n...\n\nclass OtherController extends Controller\n{\n    public function recentAction($maxPerPage)\n    {\n        ...\n\n        $response->setSharedMaxAge(30);\n\n        return $response;\n    }\n}\n```", "```php\n{# templates/static/index.html.twig #}\n\n{{ render_esi(controller('App\\Controller\\OtherController::recent', { 'maxPerPage': 5 })) }}\n```", "```php\n# docker run -it -p 6082:6082 -p 8484:80 asclinux/linuxforphp-8.1:src /bin/bash \n```", "```php\n# pip install --upgrade pip\n# pip install docutils sphinx\n```", "```php\n# cd /tmp\n# wget https://github.com/varnishcache/varnish-cache/archive/varnish-6.0.0.tar.gz\n```", "```php\n# tar -xvf varnish-6.0.0.tar.gz\n# cd varnish-cache-varnish-6.0.0/\n# sh autogen.sh\n# sh configure\n# make\n# make install\n# varnishd -a 0.0.0.0:80 -T 0.0.0.0:6082 -b [IP_ADDRESS_OR_DOMAIN_NAME_OF_WEB_SERVER]:80\n```", "```php\n# docker network inspect bridge \n```", "```php\n# varnishd -a 0.0.0.0:80 -T 0.0.0.0:6082 -b 172.17.0.2:80 \n```", "```php\n# curl -v 172.17.0.3 | grep Forwarded \n```", "```php\n# src/Controller/SomeController.php\n\n...\n\nclass SomeController extends Controller\n{\n    public function indexAction()\n    {\n        $response = $this->render('index.html.twig');\n\n        $response->setCache(array(\n            'etag'          => $etag,\n            'last_modified' => $date,\n            'max_age'       => 10,\n            's_maxage'      => 10,\n            'public'        => true,\n         // 'private'       => true,\n        ));\n\n        return $response;\n    }\n}\n```", "```php\n# curl -v https://linuxforphp.net \n```"]