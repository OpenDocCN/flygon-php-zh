["```php\n      'key' => '',\n    ```", "```php\n      php artisan key:generate\n    ```", "```php\n    CREATE TABLE accounts(\n      id int(11) unsigned NOT NULL AUTO_INCREMENT,\n        business varchar(255) DEFAULT NULL,\n        total_revenue varchar(255) DEFAULT NULL,\n        projected_revenue varchar(255) DEFAULT NULL,\n        PRIMARY KEY (id)) \n        ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n    ```", "```php\n    <?php\n\n    class Account extends Eloquent {\n      protected $table = 'accounts';\n      public $timestamps = false;\n      public function setBusinessAttribute($business) {$this->attributes['business'] = Crypt::encrypt($business);\n    }\n\n    public function setTotalrevenueAttribute($total_revenue)\n      {$this->attributes['total_revenue'] = Crypt::encrypt($total_revenue);\n    }\n\n      public functionsetProjectedrevenueAttribute($projected_revenue)\n    {\n      $this->attributes['projected_revenue'] = Crypt::encrypt($projected_revenue);\n    }\n\n    public function getBusinessAttribute()\n    {\n      return Crypt::decrypt($this->attributes['business'])\n    }\n\n    public function getTotalrevenueAttribute()\n    {\n      return number_format(Crypt::decrypt($this>attributes['total_revenue'])) ;\n    }\n\n    public function getProjectedrevenueAttribute()\n    {\n      return number_format(Crypt::decrypt($this>attributes['projected_revenue']));\n    }\n    }\n    ```", "```php\n    Route::get('accounts', function()\n    {\n      $accounts = Account::all();\n      return View::make('accounts')->with('accounts', $accounts);\n    });\n\n    Route::post('accounts', function()\n    {\n      $account = new Account();\n      $account->business = Input::get('business');\n      $account->total_revenue = Input::get('total_revenue');\n      $account->projected_revenue = Input::get('projected_revenue');\n      $account->save();\n      return Redirect::to('accounts');\n    });\n    ```", "```php\n      <form action=\"accounts\" method=\"post\">\n      <label for=\"business\">Business:</label><br>\n      <input name=\"business\"><br><br>\n      <label for=\"total_revenue\">Total Revenue ($):</label><br>\n      <input name=\"total_revenue\"><br><br>\n      <label for=\"projected_revenue\">Projected Revenue($):</label><br>\n      <input name=\"projected_revenue\"><br><br>\n      <input type=\"submit\">\n      </form>\n      <hr>\n      <?php if ($accounts): ?>\n      <table border=\"1\">\n      <thead>\n      <tr>\n      <th>Business</th>\n      <th>Total Revenue</th>\n      <th>Projected Revenue</th>\n      </tr>\n      </thead>\n      <tbody>\n      <?php foreach ($accounts as $account): ?>\n      <tr>\n      <td><?= $account->business ?></td>\n      <td>$<?= $account->total_revenue ?></td>\n      <td>$<?= $account->projected_revenue ?></td>\n      </tr>\n      <?php endforeach; ?>\n      </tbody>\n      </table>\n      <?php endif; ?>\n    ```", "```php\n    CREATE TABLE register (\n      id int(10) unsigned NOT NULL AUTO_INCREMENT,\n      username varchar(255) DEFAULT NULL,\n      email char(60) DEFAULT NULL,\n      password char(60) DEFAULT NULL,\n      PRIMARY KEY (id)\n      ) ENGINE=InnoDB AUTO_INCREMENT=1\n\n    ```", "```php\n      <!doctype html>\n      <html lang=\"en\">\n      <head>\n      <meta charset=\"utf-8\">\n      <title>Register</title>\n      </head>\n      <body>\n      <p>\n      <h3>Register</h3>\n      <form method=\"post\" action=\"register\">\n      <label>User Name</label>\n      <input name=\"username\"><br>\n      <label>Email</label>\n      <input name=\"email\"><br>\n      <label>Password</label>\n      <input name=\"password\"><br>\n      <input type=\"submit\">\n      </form>\n      </p>\n      <p style=\"border-top:1px solid #555\">\n      <h3>Login</h3>\n      <form method=\"post\" action=\"login\">\n      <label>User Name</label>\n      <input name=\"username\"><br>\n      <label>Email</label>\n      <input name=\"email\"><br>\n      <label>Password</label>\n      <input name=\"password\"><br>\n      <input type=\"submit\">\n      </form>\n      </p>\n      <hr>\n      <table border='1'>\n      <?php if ($users): ?>\n      <tr>\n      <th>User Name</th>\n      <th>Email</th>\n      <th>Password</th>\n      </tr>\n      <?php foreach ($users as $user): ?>\n      <tr>\n      <td><?= $user->username ?></td>\n      <td><?= $user->email ?></td>\n      <td><?= $user->password ?></td>\n      </tr>\n      <?php endforeach; ?>\n      <?php endif; ?>\n      </table>\n      </body>\n      </html>\n    ```", "```php\n    Route::get('register', function()\n    {\n      $users = DB::table('register')->get();\n      return View::make('register')->with('users', $users);\n    });\n\n    Route::post('register', function()\n    {\n      $data = array(\n        'username' => Input::get('username'),\n        'email' => Hash::make(Input::get('email')),\n        'password' => Hash::make(Input::get('password')));\n\n      DB::table('register')->insert($data);\n\n      return Redirect::to('register');\n    });\n\n    Route::post('login', function()\n    {\n      $user = DB::table('register')->where('username', '=',\n        Input::get('username'))->first();\n      if (!is_null($user) and Hash::check(Input::get('email'),\n        $user->email) and Hash::check(Input::get('password'),\n        $user->password)) {\n        echo \"Log in successful\";\n      } else {\n      echo \"Not able to login\";\n    }\n    });\n\n    ```", "```php\n    Route::get('cross-site', function()\n    {\n      return View::make('cross-site');\n    });\n\n    Route::post('cross-site', array('before' => 'csrf',function()\n    {\n      echo 'Token: ' . Session::token() . '<br>';\n      dd(Input::all());\n    }));\n    ```", "```php\n    Route::filter('csrf', function()\n    {\n      if (Session::token() != Input::get('_token'))\n    {\n      throw new Illuminate\\Session\\TokenMismatchException;\n    }\n    });\n    ```", "```php\n      <!doctype html>\n      <html lang=\"en\">\n      <head>\n      <meta charset=\"utf-8\">\n      <title>CSRF Login</title>\n      </head>\n      <body>\n      <p>\n      <h3>CSRF Login</h3>\n      <?= Form::open(array('url' => 'cross-site', 'method' =>'post')) ?>\n      <?= Form::token() ?>\n      <?= Form::label('email', 'Email') ?>\n      <?= Form::text('email') ?>\n      <?= Form::label('password', 'Password') ?>\n      <?= Form::password('password') ?>\n      <?= Form::submit('Submit') ?>\n      <?= Form::close() ?>\n      </p>\n      <hr>\n      <p>\n      <h3>CSRF Fake Login</h3>\n      <?= Form::open(array('url' => 'cross-site', 'method' =>'post')) ?>\n      <?= Form::hidden('_token', 'smurftacular') ?>\n      <?= Form::label('email', 'Email') ?>\n      <?= Form::text('email') ?>\n      <?= Form::label('password', 'Password') ?>\n      <?= Form::password('password') ?>\n      <?= Form::submit('Submit') ?>\n      <?= Form::close() ?>\n      </p>\n      </body>\n      </html>\n    ```", "```php\n      <!doctype html>\n      <html lang=\"en\">\n      <head>\n      <meta charset=\"utf-8\">\n      <title>Custom Validation</title>\n      </head>\n      <body>\n      <p>\n      <?php if ($errors): ?>\n      <?php echo $errors->first('email') ?>\n      <?php echo $errors->first('captain') ?>\n      <?php endif; ?>\n      </p>\n      <p>\n      <h3>Custom Validation</h3>\n      <?= Form::open(array('url' => 'valid', 'method' => 'post'))?>\n      <?= Form::label('email', 'Email') ?>\n      <?= Form::text('email') ?><br><br>\n      <?= Form::label('captain', 'Your favorite captains (choosethree)') ?><br>\n      <?= 'Pike: ' . Form::checkbox('captain[]', 'Pike') ?><br>\n      <?= 'Kirk: ' . Form::checkbox('captain[]', 'Kirk') ?><br>\n      <?= 'Picard: ' . Form::checkbox('captain[]', 'Picard')?><br>\n      <?= 'Sisko: ' . Form::checkbox('captain[]', 'Sisko') ?><br>\n      <?= 'Janeway: ' . Form::checkbox('captain[]', 'Janeway')?><br>\n      <?= 'Archer: ' . Form::checkbox('captain[]', 'Archer')?><br>\n      <?= 'Crunch: ' . Form::checkbox('captain[]', 'Crunch')?><br>\n      <?= Form::submit('Submit') ?>\n      <?= Form::close() ?>\n      </p>\n      </body>\n      </html>\n    ```", "```php\n    Route::get('valid', function()\n    {\n      return View::make('valid');\n    });\n    Route::post('valid', function()\n    {\n      $rules = array('email' => 'required|email','captain' => 'required|check_three');\n      $messages = array('check_three' => 'Thou shalt choose three captains. Nomore. No less. Three shalt be the number thou shaltchoose, and the number of the choosing shall bethree.',);\n      $validation = Validator::make(Input::all(), $rules,$messages);\n      if ($validation->fails())\n      {\n      return Redirect::to('valid')->withErrors($validation);\n    }\n      echo \"Form is valid!\";\n    });\n    ```", "```php\n      Validator::extend('check_three', function($attribute,$value, $parameters)\n    {\n      return count($value) == 3;\n    });\n    ```", "```php\n    CREATE TABLE items (\n        id int(10) unsigned NOT NULL AUTO_INCREMENT,\n        name varchar(255) DEFAULT NULL,\n        description text,\n        price int(11) DEFAULT NULL,\n        PRIMARY KEY (id)\n        ) ENGINE=InnoDB;\n\n      INSERT INTO items VALUES ('1', 'Lamp', 'This is a Lamp.','14');\n      INSERT INTO items VALUES ('2', 'Desk', 'This is a Desk.','75');\n      INSERT INTO items VALUES ('3', 'Chair', 'This is a\n        Chair.', '22');\n      INSERT INTO items VALUES ('4', 'Sofa', 'This is a\n        Sofa/Couch.', '144');\n      INSERT INTO items VALUES ('5', 'TV', 'This is a\n        Television.', '89');\n\n    ```", "```php\n    Route::get('items', function() \n    {\n      $items = DB::table('items')->get();\n      return View::make('items')->with('items', $items)>nest('cart', 'cart', array('cart_items' =>Session::get('cart')));\n    });\n\n    Route::get('item-detail/{id}', function($id)\n    {\n      $item = DB::table('items')->find($id);\n      return View::make('item-detail')->with('item', $item)>nest('cart', 'cart', array('cart_items' =>Session::get('cart')));\n    });\n\n    Route::get('add-item/{id}', function($id)\n    {\n      $item = DB::table('items')->find($id);\n      $cart = Session::get('cart');\n      $cart[uniqid()] = array ('id' => $item->id, 'name' => $item >name, 'price' => $item->price);\n      Session::put('cart', $cart);\n      return Redirect::to('items');\n    });\n\n    Route::get('remove-item/{key}', function($key)\n    {\n      $cart = Session::get('cart');\n      unset($cart[$key]);\n      Session::put('cart', $cart);\n      return Redirect::to('items');\n    });\n\n    Route::get('empty-cart', function()\n    {\n      Session::forget('cart');\n      return Redirect::to('items');\n    });\n    ```", "```php\n      <!doctype html>\n      <html lang=\"en\">\n      <head>\n      <meta charset=\"utf-8\">\n      <title>Item List</title>\n      </head>\n      <body>\n      <div>\n      <?php foreach ($items as $item): ?>\n      <p>\n      <a href=\"item-detail/<?= $item->id ?>\">\n      <?= $item->name ?>\n      </a> --\n      <a href=\"add-item/<?= $item->id ?>\">Add to Cart</a>\n      </p>\n      <?php endforeach; ?>\n      </div>\n      <?php $cart_session = Session::get('cart') ?>\n      <?php if ($cart_session): ?>\n      <?= $cart ?>\n      <?php endif; ?>\n      </body>\n      </html>\n    ```", "```php\n      <!doctype html>\n      <html lang=\"en\">\n      <head>\n      <meta charset=\"utf-8\">\n      <title>Item: <?= $item->name ?></title>\n      </head>\n      <body>\n      <div>\n      <h2><?= $item->name ?></h2>\n      <p>Price: <?= $item->price ?></p>\n      <p>Description: <?= $item->description ?></p>\n      <p>\n      <a href=\"../add-item/<?= $item->id ?>\">Add to Cart</a>\n      </p>\n      <p><a href=\"../items\">Item list</a></p>\n      </div>\n      <? if (Session::has('cart')): ?>\n      <?= $cart ?>\n      <? endif; ?>\n      </body>\n      </html>\n    ```", "```php\n      <div class=\"cart\" style=\"border: 1px solid #555\">\n      <?php if ($cart_items): ?>\n      <?php $price = 0 ?>\n      <ul>\n      <?php foreach ($cart_items as $cart_item_key =>$cart_item_value): ?>\n      <?php $price += $cart_item_value['price']?>\n      <li>\n      <?= $cart_item_value['name'] ?>: \n      <?= $cart_item_value['price'] ?> (<a href=\"remove-item/<?= $cart_item_key ?>\">remove</a>)\n      </li>\n      <?php endforeach; ?>\n      </ul>\n      <p><strong>Total: </strong> <?= $price ?></p>\n      <?php endif; ?>\n      </div>\n    ```", "```php\n    Route::get('redis-login', function()\n    {\n      return View::make('redis-login');\n    });\n\n    Route::post('redis-login', function()\n    {\n      $redis = Redis::connection();\n      $redis->hset('user', 'name', Input::get('name'));\n      $redis->hset('user', 'email', Input::get('email'));\n      return Redirect::to('redis-view');\n    });\n\n    Route::get('redis-view', function()\n    {\n      $redis = Redis::connection();\n      $name = $redis->hget('user', 'name');\n      $email = $redis->hget('user', 'email');\n      echo 'Hello ' . $name . '. Your email is ' . $email;\n    });\n    ```", "```php\n      <!doctype html>\n      <html lang=\"en\">\n      <head>\n      <meta charset=\"utf-8\">\n      <title>Redis Login</title>\n      </head>\n      <body>\n      <p>\n      <h3>Redis Login</h3>\n      <?= Form::open(array('url' => 'redis-login', 'method' =>'post')) ?>\n      <?= Form::label('name', 'Your Name') ?>\n      <?= Form::text('name') ?>\n      <?= Form::label('email', 'Email') ?>\n      <?= Form::text('email') ?>\n      <?= Form::submit('Submit') ?>\n      <?= Form::close() ?>\n      </p>\n      </body>\n      </html>\n    ```", "```php\n      <!DOCTYPE html>\n      <html>\n      <head>\n      <title>Laravel Sessions and Cookies</title>\n      <meta charset=\"utf-8\">\n      </head>\n      <body>\n      <h2>Laravel Sessions and Cookies</h2>\n      <?= Form::open() ?>\n      <?= Form::label('email', 'Email address: ') ?>\n      <?= Form::text('email') ?>\n      <br>\n      <?= Form::label('name', 'Name: ') ?>\n      <?= Form::text('name') ?>\n      <br>\n      <?= Form::label('city', 'City: ') ?>\n      <?= Form::text('city') ?>\n      <br>\n      <?= Form::submit('Go!') ?>\n      <?= Form::close() ?>\n      </body>\n      </html>\n    ```", "```php\n    Route::get('session-one', function()\n    {\n      return View::make('session-one');\n    });\n\n    Route::post('session-one', function()\n    {\n      Session::put('email', Input::get('email'));\n      Session::flash('name', Input::get('name'));\n      $cookie = Cookie::make('city', Input::get('city'), 30);\n      return Redirect::to('session-two')->withCookie($cookie);\n    });\n\n    Route::get('session-two', function()\n    {\n      $return = 'Your email, from a Session, is 'Session::get('email') . '. <br>';\n      $return .= 'You name, from flash Session, is 'Session::get('name') . '. <br>';\n      $return .= 'You city, from a cookie, is ' .Cookie::get('city') . '.<br>';\n      $return .= '<a href=\"session-three\">Next page</a>';\n      echo  $return;\n    });\n\n    Route::get('session-three', function()\n    {\n      $return = '';\n\n      if (Session::has('email')) {\n      $return .= 'Your email, from a Session, is ' . Session::get('email') . '. <br>';\n    } else {\n    $return .= 'Email session is not set.<br>';\n    }\n\n    if (Session::has('name')) {\n      $return .= 'Your name, from a flash Session, is ' . Session::get('name') . '. <br>';\n    } else {\n    $return .= 'Name session is not set.<br>';\n    }\n\n    if (Cookie::has('city')) {\n      $return .= 'Your city, from a cookie, is ' . Cookie::get('city') . '. <br>';\n    } else {\n      $return .= 'City cookie is not set.<br>';\n    }\n      Session::forget('email');\n      $return .= '<a href=\"session-three\">Reload</a>';\n      echo $return;\n    });\n    ```", "```php\n    CREATE TABLE api (\n    id int(10) unsigned NOT NULL AUTO_INCREMENT,\n     name varchar(255) DEFAULT NULL,\n     api_key varchar(255) DEFAULT NULL,\n     status tinyint(1) DEFAULT NULL,\n     PRIMARY KEY (id)\n     ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n    ```", "```php\n    CREATE TABLE shows (id int(10) unsigned NOT NULL AUTO_INCREMENT,name varchar(200) NOT NULL,year int(11) NOT NULL,created_at datetime NOT NULL,updated_at datetime NOT NULL,PRIMARY KEY (id)) ENGINE=InnoDB CHARSET=utf8;\n\n      INSERT INTO shows VALUES ('1', 'Happy Days', '1979','2013-01-01 00:00:00', '2013-01-01 00:00:00');\n      INSERT INTO shows VALUES ('2', 'Seinfeld', '1999', '2013-01-01 00:00:00', '2013-01-01 00:00:00');\n      INSERT INTO shows VALUES ('3', 'Arrested Development', '2006', '2013-01-01 00:00:00', '2013-01-01 00:00:00');\n      INSERT INTO shows VALUES ('4', 'Friends', '1997','2013-01-01 00:00:00', '2013-01-01 00:00:00');\n    ```", "```php\n      <?php\n\n    class Api extends Eloquent {\n\n      public $table = 'api';\n      public $timestamps = FALSE;\n    }\n    ```", "```php\n      <?php\n    class Show extends Eloquent {\n    }\n    ```", "```php\n      <!DOCTYPE html>\n      <html>\n      <head>\n      <title>Create an API key</title>\n      <meta charset=\"utf-8\">\n      </head>\n      <body>\n      <h2>Create an API key</h2>\n      <?php echo Form::open() ?>\n      <?php echo Form::label('name', 'Your Name: ') ?>\n      <?php echo Form::text('name') ?>\n      <br>\n      <?php echo Form::submit('Go!') ?>\n      <?php echo Form::close() ?>\n      </body>\n      </html>\n    ```", "```php\n    Route::get('api-key', function() {\n      return View::make('api-key');\n    });\n\n    Route::post('api-key', function() {\n      $api = new Api();\n      $api->name = Input::get('name');\n      $api->api_key = Str::random(16);\n      $api->status = 1;\n      $api->save();\n      echo 'Your key is: ' . $api->api_key;\n    });\n    ```", "```php\n    Route::get('api/{api_key}/shows', function($api_key)\n    {\n      $client = Api::where('api_key', '=', $api_key)->where('status', '=', 1)->first();\n      if ($client) {\n      return Show::all();\n      } else {\n      return Response::json('Not Authorized', 401);\n      }\n    });\n    Route::get('api/{api_key}/show/{show_id}', function($api_key, $show_id)\n    {\n      $client = Api::where('api_key', '=', $api_key)->where('status', '=', 1)->first();\n      if ($client) {\n      if ($show = Show::find($show_id)) {\n      return $show;\n      } else {\n      return Response::json('No Results', 204);\n      }\n      } else {\n      return Response::json('Not Authorized', 401);\n      }\n    });\n    ```", "```php\nRoute::filter('api', function()\n{\n  if ($api_key = Input::get('api_key')) {\n  $client = Api::where('api_key', '=', $api_key)->where('status', '=', 1)->first();\n  if (!$client) {\n  return Response::json('Not Authorized', 401);\n}\n  } else {\n  return Response::json('Not Authorized', 401);\n}\n});\n```", "```php\nRoute::post('api/shows', array('before' => 'api', function()\n{\n  return Show::all();\n}));\n```"]