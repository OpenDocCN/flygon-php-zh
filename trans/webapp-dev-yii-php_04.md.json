["```php\nCREATE TABLE tbl_`project` (\n`id` INTEGER NOT NULL auto_increment,\n`name` varchar(255) NOT NULL,\n`description` text NOT NULL,\n`create_time` DATETIME default NULL,\n`create_user_id` INTEGER default NULL,\n`update_time` DATETIME default NULL,\n`update_user_id` INTEGER default NULL,\nPRIMARY KEY  (`id`)\n) ENGINE = InnoDB\n;\n```", "```php\n'components'=>array(\t\n'db'=>array(\n    'connectionString' => 'mysql:host=localhost;dbname=trackstar',\n    'emulatePrepare' => true,\n    'username' => '[YOUR-USERNAME]',\n    'password' => '[YOUR-PASSWORD]',\n    'charset' => 'utf8',\n  ),\n),\n```", "```php\n**$ yiic migrate create <name>**\n\n```", "```php\nclass m121108_195611_create_project_table extends CDbMigration\n{\n  public function up()\n  {\n  }\n\n  public function down()\n  {\n    echo \"m121108_195611_create_project_table does not support migration down.\\n\";\n    return false;\n  }\n\n  /*\n  // Use safeUp/safeDown to do migration with transaction\n  public function safeUp()\n  {\n  }\n\n  public function safeDown()\n  {\n  }\n  */\n}\n```", "```php\npublic function up()\n{\n  $this->createTable('tbl_project', array(\n    'id' => 'pk',\n     'name' => 'string NOT NULL',\n    'description' => 'text NOT NULL',\n    'create_time' => 'datetime DEFAULT NULL',\n    'create_user_id' => 'int(11) DEFAULT NULL',\n    'update_time' => 'datetime DEFAULT NULL',\n    'update_user_id' => 'int(11) DEFAULT NULL',\n  ), 'ENGINE=InnoDB');\n}\n\npublic function down()\n{\n  $this->dropTable('tbl_project');\n}\n```", "```php\n$sql='SELECT * FROM {{project}}';\n$projects=Yii::app()->db->createCommand($sql)->queryAll();\n```", "```php\nreturn array(\n  \u2026\n  \u2026\n  'modules'=>array(\n'gii'=>array(\n        'class'=>'system.gii.GiiModule',\n        'password'=>false,\n        // If removed, Gii defaults to localhost only. Edit carefully to taste.\n        'ipFilters'=>array('127.0.0.1','::1'),\n    ),\n    \u2026\n  ),\n```", "```php\n/**\n   * @return array validation rules for model attributes.\n   */\n  public function rules()\n  {\n    // NOTE: you should only define rules for those attributes that\n    // will receive user inputs.\n    return array(\n      array('name, description', 'required'),\n      array('create_user_id, update_user_id', 'numerical', 'integerOnly'=>true),\n      array('name', 'length', 'max'=>255),\n      array('create_time, update_time', 'safe'),\n      // The following rule is used by search().\n      // Please remove those attributes that should not be searched.\n      array('id, name, description, create_time, create_user_id, update_time, update_user_id', 'safe', 'on'=>'search'),\n      );\n  }\t\n```", "```php\nArray('Attribute List', 'Validator', 'on'=>'Scenario List', \u2026additional options);\n```", "```php\n/** \n* @param string the name of the attribute to be validated \n* @param array options specified in the validation rule \n*/ \npublic function validatorName($attribute,$params) \n{\n...\n}\n```", "```php\narray('name, description', 'required'),\n```"]