- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Building modular applications is a challenging task. It involves a wide spectrum
    of knowledge, ranging from design patterns and principles to the ins and outs
    of the chosen technology stack. The PHP ecosystem has quite a selection of tools,
    libraries, frameworks, and platforms to assist us with our goal of modular application
    development.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 构建模块化应用程序是一项具有挑战性的任务。它涉及广泛的知识领域，从设计模式和原则到所选择技术栈的方方面面。PHP生态系统有相当多的工具、库、框架和平台，可以帮助我们实现模块化应用程序开发的目标。
- en: PHP 7 brings a lot of improvements that can further assist achieving that goal.
    We will start our journey by looking into some of these improvements. By the end
    of this book, our final delivery will be a modular web shop application built
    by the Symfony framework.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 7带来了许多改进，可以进一步帮助实现这一目标。我们将从这些改进中开始我们的旅程。在本书结束时，我们的最终交付物将是一个由Symfony框架构建的模块化网络商店应用程序。
- en: What this book covers
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](ch01.html "Chapter 1. Ecosystem Overview"), *Ecosystem Overview*,
    gives a gentle introduction to the current state of the PHP ecosystem. It looks
    into the latest features of PHP 7, some of which open a door to the new concepts
    of use in modular development. Furthermore, this chapter glosses over the popular
    PHP frameworks.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章，生态系统概述，对PHP生态系统的当前状态进行了简要介绍。它探讨了PHP 7的最新功能，其中一些功能为模块化开发中的新概念打开了大门。此外，本章还概述了流行的PHP框架。
- en: '[Chapter 2](ch02.html "Chapter 2. GoF Design Patterns"), *GoF Design Patterns*,
    describes recurring solutions to common problems in software design. Practical
    PHP examples are given for each of the following patterns: creation pattern types,
    structural patterns, and behavioral patterns.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章，GoF设计模式，描述了软件设计中常见问题的重复解决方案。为以下每种模式提供了实际的PHP示例：创建模式类型、结构模式和行为模式。
- en: '[Chapter 3](ch03.html "Chapter 3. SOLID Design Principles"), *SOLID Design
    Principles*, dives into the five basic principles of object-oriented programming
    and design under the acronym SOLID (single responsibility, open-closed, Liskov
    substitution, Interface Segregation, and dependency inversion).It gives practical
    examples and explains the importance of these principles in modular development.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，SOLID设计原则，深入探讨了面向对象编程和设计的五个基本原则，这些原则使用SOLID（单一责任、开闭原则、里氏替换、接口隔离和依赖反转）的首字母缩写。它提供了实际示例，并解释了这些原则在模块化开发中的重要性。
- en: '[Chapter 4](ch04.html "Chapter 4. Requirement Specification for a Modular Web
    Shop App"), *Requirement Specification for a Modular Web Shop App*, guides a reader
    through the process of defining overall application requirements. It starts by
    defining actual application feature requirements and progresses all the way to
    the technology stack selection.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，模块化网络商店应用的需求规范，指导读者定义整体应用程序需求的过程。它从定义实际应用程序功能需求开始，并逐步进行技术栈选择。
- en: '[Chapter 5](ch05.html "Chapter 5. Symfony at a Glance"), *Symfony at a Glance*,
    gives a high-level overview of Symfony as a framework, a set of tools, and a development
    methodology. It focuses on the building blocks that we will need to build our
    modular application.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，Symfony概述，对Symfony作为框架、一组工具和开发方法论进行了高层次的概述。它侧重于我们构建模块化应用程序所需的构建模块。
- en: '[Chapter 6](ch06.html "Chapter 6. Building the Core Module"), *Building the
    Core Module*, guides you through setting up a core module based on the Symfony
    bundle. The core module is then used to set the structure and dependencies for
    other modules to use.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，构建核心模块，指导您通过基于Symfony捆绑包设置核心模块。然后，核心模块用于为其他模块设置结构和依赖关系。
- en: '[Chapter 7](ch07.html "Chapter 7. Building the Catalog Module"), *Building
    the Catalog Module*, guides us through building a self-sufficient module that
    matches the web shop catalog-only feature set. It shows us how to set up entities
    relevant to the module functionality and how to manage those entities and their
    interactions using the existing framework.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，构建目录模块，指导我们通过构建一个与网络商店仅目录功能集相匹配的自给模块。它向我们展示了如何设置与模块功能相关的实体，以及如何使用现有框架管理这些实体及其交互。
- en: '[Chapter 8](ch08.html "Chapter 8. Building the Customer Module"), *Building
    the Customer Module*, guides us through building a self-sufficient module that
    matches the web shop customer-related feature set. It shows us how to set up entities
    relevant to the module''s functionality and how to manage those entities and their
    interactions using the existing framework. It further shows us how to create a
    register and login systems.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，构建客户模块，指导我们通过构建一个与网络商店客户相关的功能集相匹配的自给模块。它向我们展示了如何设置与模块功能相关的实体，以及如何使用现有框架管理这些实体及其交互。它进一步向我们展示了如何创建注册和登录系统。
- en: '[Chapter 9](ch09.html "Chapter 9. Building the Payment Module"), *Building
    the Payment Module*, guides us through building a self-sufficient module that
    matches the web shop payment-related feature set. It shows us how to integrate
    with a third-party payment provider. It further shows us how to expose a payment
    provider as service for other modules to use.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，构建支付模块，指导我们通过构建一个与网络商店支付相关的功能集相匹配的自给模块。它向我们展示了如何与第三方支付提供商集成。它进一步向我们展示了如何将支付提供商作为服务提供给其他模块使用。
- en: '[Chapter 10](ch10.html "Chapter 10. Building the Shipment Module"), *Building
    the Shipment Module*, guides us through building a self-sufficient module that
    matches the web shop shipment-related feature set. It shows us how to define several
    flat methods that yield different shipment pricing based on various cart product
    attributes. It further shows us how to expose a shipment method as service for
    other modules to use.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，“构建发货模块”，指导我们构建一个自给自足的模块，与网店的发货相关功能相匹配。它向我们展示了如何定义几个扁平方法，根据不同的购物车产品属性产生不同的发货定价。它进一步向我们展示了如何将发货方法公开为其他模块使用的服务。
- en: '[Chapter 11](ch11.html "Chapter 11. Building the Sales Module"), *Building
    the Sales Module*, guides us through building a self-sufficient module that matches
    the web shop sales-only feature set. It shows us how to set up cart, cart item,
    order, and order item entities relevant to the module functionality and how to
    manage those entities and their interactions using the existing framework.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，“构建销售模块”，指导我们构建一个自给自足的模块，与网店仅销售相关的功能集相匹配。它向我们展示了如何设置与模块功能相关的购物车、购物车项目、订单和订单项目实体，以及如何使用现有框架管理这些实体及其交互。
- en: '[Chapter 12](ch12.html "Chapter 12. Integrating and Distributing Modules"),
    *Integrating and Distributing Modules*, integrates all the modules built in the
    preceding chapters into a single functioning application. Moving on, it guides
    us through the modern PHP module distribution techniques. These include Git and
    Composer, which in turn indirectly include GitHub and Packagist.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章，“集成和分发模块”，将前几章中构建的所有模块集成到一个单一的功能应用程序中。接下来，它指导我们通过现代PHP模块分发技术。这些技术包括Git和Composer，间接包括GitHub和Packagist。
- en: What you need for this book
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要什么
- en: In order to successfully run all the examples provided in this book, you will
    need either your own web server or a third-party web-hosting solution. The high-level
    technology stack includes PHP 7.0 or greater, Apache/Nginx, and MySQL.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成功运行本书提供的所有示例，您需要自己的Web服务器或第三方Web托管解决方案。高级技术栈包括PHP 7.0或更高版本，Apache/Nginx和MySQL。
- en: The Symfony framework itself comes with a detailed list of system requirements
    that can be found at [http://symfony.com/doc/current/reference/requirements.html](http://symfony.com/doc/current/reference/requirements.html).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Symfony框架本身带有详细的系统要求列表，可以在[http://symfony.com/doc/current/reference/requirements.html](http://symfony.com/doc/current/reference/requirements.html)找到。
- en: This book assumes that the reader is familiar with setting up the complete development
    environment.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设读者熟悉设置完整的开发环境。
- en: Who this book is for
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书的受众
- en: This book is primarily intended for intermediate-level PHP developers, with
    little to no knowledge of modular programming who want to understand design patterns
    and principles in order to better utilize the existing framework for modular application
    development.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书主要面向中级PHP开发人员，他们对模块化编程几乎没有了解，希望了解设计模式和原则，以更好地利用现有框架进行模块化应用程序开发。
- en: The modular web-shop application developed as a part of this book uses the Symfony
    framework. However, no previous knowledge of the Symfony framework is assumed
    or required.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书开发的模块化网店应用程序使用Symfony框架。但是，不需要假设或要求对Symfony框架有任何先前的了解。
- en: Conventions
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您会发现一些区分不同类型信息的文本样式。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：“我们可以通过使用`include`指令包含其他上下文。”
- en: 'A block of code is set as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下形式编写：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the **Next** button moves you to the next screen."'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会出现在文本中，如：“单击**下一步**按钮将您移至下一个屏幕。”'
- en: Note
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的框中。
- en: Tip
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 技巧和窍门会以这种方式出现。
