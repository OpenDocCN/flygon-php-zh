- en: Chapter 09. iPhone and Ajax
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第09章。iPhone和Ajax
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Building a touch version of a website (with jQTouch)
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建网站的触摸版本（使用jQTouch）
- en: Leveraging HTML5 features in iPhone Ajax
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在iPhone Ajax中利用HTML5功能
- en: Building native apps with PhoneGap
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用PhoneGap构建本机应用
- en: Speeding up a PhoneGap project
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速PhoneGap项目
- en: Building a currency conversion hybrid app
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个货币转换混合应用
- en: iPhone was launched in 2007 by Apple Inc. It redefined the smartphone arena
    with its unique design, touch screen, and refreshing user interface. Apart from
    telephonic features and support, it bridged the Internet experience gap prevalent
    in other smartphones. It is loaded with the Safari web browser, an e-mail client,
    and an iPod, for a complete web experience.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: iPhone于2007年由苹果公司推出。它以独特的设计、触摸屏和清新的用户界面重新定义了智能手机领域。除了电话功能和支持外，它还弥合了其他智能手机中普遍存在的互联网体验差距。它配备了Safari网络浏览器、电子邮件客户端和iPod，为完整的网络体验。
- en: 'The following screenshot shows the Home screen of iPhone 4 with the default
    built-in apps:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了iPhone 4的主屏幕，其中包含默认内置应用程序：
- en: '![iPhone and Ajax](graphics/3081_09_01.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![iPhone和Ajax](graphics/3081_09_01.jpg)'
- en: 'Like a PC, iPhone has some useful utilities called "apps". All the apps can
    be accessed from the Home screen. We have two ways to program apps:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 像PC一样，iPhone有一些称为“应用程序”的有用实用程序。所有应用程序都可以从主屏幕访问。我们有两种方法来编写应用程序：
- en: Native apps
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本机应用
- en: Web apps
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web应用程序
- en: The interface is consistent with menu bars on top, and also at the bottom, when
    necessary.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 界面与顶部的菜单栏一致，并且在必要时也在底部。
- en: Building a touch version of a website (with jQTouch)
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建网站的触摸版本（使用jQTouch）
- en: A touch site or touch version actually refers to web apps. **Web apps** are
    web pages designed to be best viewed on an iPhone and are programmed in HTML and
    JavaScript. The HTML and JavaScript have a few extensions referred to as Safari
    HTML and Safari JavaScript for getting device-related effects or support. Unlike
    normal web pages, web apps will follow iPhone's consistent user interface and
    touch-friendly layout, such as menu bars, sliding select options, and so on. Sometimes,
    they're also referred to as "web clips". The following image shows `touch.facebook.com`,
    the touch version of Facebook, viewed on an iPhone.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 触摸站点或触摸版本实际上是指Web应用程序。**Web应用程序**是设计为在iPhone上最佳查看的网页，并且是用HTML和JavaScript编程的。HTML和JavaScript有一些扩展，称为Safari
    HTML和Safari JavaScript，用于获取设备相关的效果或支持。与普通网页不同，Web应用程序将遵循iPhone的一致用户界面和触摸友好的布局，比如菜单栏、滑动选择选项等。有时，它们也被称为“网络剪辑”。以下图片显示了在iPhone上查看的Facebook的触摸版本`touch.facebook.com`。
- en: '![Building a touch version of a website (with jQTouch)](graphics/3081_09_02.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![构建网站的触摸版本（使用jQTouch）](graphics/3081_09_02.jpg)'
- en: To create a web app UI/style quickly, there are some frameworks and toolkits
    available, such as, IUI, jQTouch, jQuery Mobile, Sencha Touch, and so on. jQTouch
    and jQuery Mobile are jQuery-based libraries. We'll see how to build a web app/touch
    version using jQTouch.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要快速创建Web应用程序UI/样式，有一些可用的框架和工具包，比如IUI、jQTouch、jQuery Mobile、Sencha Touch等。jQTouch和jQuery
    Mobile是基于jQuery的库。我们将看到如何使用jQTouch构建Web应用程序/触摸版本。
- en: Getting ready
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: We'll require Safari web browser to test the web apps. Generally, all web apps
    can be roughly viewed in any graded browsers. We'll also require jQTouch, available
    at [http://jqtouch.com/](http://jqtouch.com/), along with jQuery core.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将需要Safari网络浏览器来测试Web应用程序。通常，所有Web应用程序都可以在任何分级浏览器中粗略查看。我们还需要jQTouch，可在[http://jqtouch.com/](http://jqtouch.com/)上获得，以及jQuery核心。
- en: How to do it...
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'Development of web apps for iPhone can be divided into:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: iPhone的Web应用程序开发可以分为：
- en: Understanding the `meta` and `link` tags that have significance over the interface.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解对界面有重要意义的`meta`和`link`标签。
- en: Tuning the interface/navigation/use of elements with appropriate HTML, CSS and
    JavaScript usage. These are usually taken care of by frameworks, such as IUI,
    jQTouch, jQuery Mobile, and so on.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用适当的HTML、CSS和JavaScript调整界面/导航/元素的使用。这些通常由框架来处理，比如IUI、jQTouch、jQuery Mobile等。
- en: Understanding `meta` and `link` tags
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 了解`meta`和`link`标签
- en: 'When web apps are bookmarked on the Home screen, the following declaration
    helps us to specify which icon is to be used:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当Web应用程序被添加到主屏幕书签时，以下声明可以帮助我们指定要使用的图标：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Generally, iPhone adds rounded corners, drop shadows, and reflective shine
    to the image. Here is a sample, 57x57 custom icon created with the Packt logo:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，iPhone会在图像上添加圆角、投影和反射光泽。这是一个样本，使用Packt标志创建的57x57自定义图标：
- en: '![How to do it...](graphics/3081_09_03.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤...](graphics/3081_09_03.jpg)'
- en: 'When we have a a pre-composed icon already in hand, to avoid double effects,
    we need to rename the `custom_icon.png` as `apple-touch-icon-precomposed.png`,
    in the following manner:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们已经有一个预先制作的图标时，为了避免双重效果，我们需要将`custom_icon.png`重命名为`apple-touch-icon-precomposed.png`，如下所示：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The default size of the icon is 57x57\. To specify different icons for different
    resolutions, we may use the `sizes` attribute:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图标的默认大小是57x57。要为不同的分辨率指定不同的图标，我们可以使用`sizes`属性：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following screenshot shows the startup or splash image of the native Skype
    app. The startup image will be shown for a few seconds while launching the app.
    Its dimension must be 320x460 and can be specified thus:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下截图显示了本机Skype应用的启动或闪屏图像。启动图像将在启动应用程序时显示几秒钟。其尺寸必须为320x460，可以这样指定：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![How to do it...](graphics/3081_09_04.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤...](graphics/3081_09_04.jpg)'
- en: 'We may also want to hide the Safari browser''s controls to get a native app''s
    look and feel. We will achieve that with the following code that will hide the
    address bar:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可能还想隐藏Safari浏览器的控件，以获得本机应用的外观和感觉。我们将通过以下代码实现这一点，以隐藏地址栏：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To change the color of the status bar, we may use the following command:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更改状态栏的颜色，我们可以使用以下命令：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'iPhone''s viewport is adjusted for a 980px width. Therefore, if a webpage/web
    app has 980px width, it will correctly fit in an iPhone. If the page has only
    one table or image with a width of 200px, the image will be skewed to the left
    corner when viewed in iPhone. For this case, we have an option to specify viewport
    width programmatically, as follows:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: iPhone的视口调整为980像素宽。因此，如果一个网页/ web应用程序宽度为980像素，它将正确适应iPhone。如果页面只有一个宽度为200像素的表格或图像，在iPhone上查看时，图像将偏向左上角。对于这种情况，我们有一个选项可以通过编程方式指定视口宽度，如下所示：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The preceding code will fix the viewport width and the 200px image will be
    viewed in full width. When targeting both the iPhone and the iPad, it would be
    wiser to use the device constant `device-width` to specify width, thus:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前面的代码将修复视口宽度，200像素的图像将以全宽度显示。当同时针对iPhone和iPad时，最好使用设备常量`device-width`来指定宽度，如下所示：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To disable user scaling and to set the viewport, use:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要禁用用户缩放并设置视口，请使用：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Tune the interface/navigation/use of elements with appropriate HTML, CSS and
    JavaScript usage.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用适当的HTML、CSS和JavaScript使用调整界面/导航/元素的使用。
- en: iPhone web apps have similar UIs—with sliding links to choose options, quick
    navigations in the header, and so on. It is wiser to start with the framework's
    base HTML code. This will help us to quickly insert our elements wherever necessary.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: iPhone web应用程序具有类似的UI——滑动链接选择选项，在页眉中快速导航等等。最好从框架的基本HTML代码开始。这将帮助我们快速在必要的地方插入我们的元素。
- en: Starting with the framework's base HTML code has another advantage too. It gives
    us hints on how the link is to be placed, how and where the back button has to
    be placed, and so on.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 从框架的基本HTML代码开始还有另一个优点。它给了我们关于链接放置的提示，后退按钮的放置方式等等。
- en: How it works...
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Let''s look at the following jQTouch HTML 5 code for a discount calculator:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下以下的jQTouch HTML 5代码，用于折扣计算器：
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As mentioned, we have created the code from jQTouch's base HTML code. This lets
    us quickly insert our discount calculator logic and the calculator form interface.
    The `$.jQTouch()` call creates all necessary meta and link elements. Theming is
    done through CSS and image sprites.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们已经从jQTouch的基本HTML代码创建了代码。这让我们可以快速插入我们的折扣计算器逻辑和计算器表单界面。`$.jQTouch()`调用创建了所有必要的元数据和链接元素。主题是通过CSS和图像精灵完成的。
- en: 'jQTouch applies effects through class names, as in the following code, for
    example:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: jQTouch通过类名应用效果，例如以下代码：
- en: '[PRE10]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: A flip effect is beeing applied and a button appearance is given.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 应用了翻转效果，并给出了按钮外观。
- en: There's more...
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: We may use online icon generation tools to quickly create app icons. Apple's
    own developer guide is another extensive resource on the topic.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用在线图标生成工具快速创建应用程序图标。苹果自己的开发者指南是关于这个主题的另一个广泛的资源。
- en: Online iPhone icon generator
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在线iPhone图标生成器
- en: To create an iPhone icon, we have a third-party website [http://www.flavorstudios.com/iphone-icon-generator](http://www.flavorstudios.com/iphone-icon-generator).
    It helps us to quickly create icons, in case we're not very comfortable with PhotoShop.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建iPhone图标，我们有一个第三方网站[http://www.flavorstudios.com/iphone-icon-generator](http://www.flavorstudios.com/iphone-icon-generator)。它可以帮助我们快速创建图标，以防我们对PhotoShop不太熟悉。
- en: Apple provides a free guide available at [http://developer.apple.com/library/safari/documentation/appleapplications/reference/safariwebcontent/Introduction/Introduction.html](http://developer.apple.com/library/safari/documentation/appleapplications/reference/safariwebcontent/Introduction/Introduction.html).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果提供了一份免费指南，可在[http://developer.apple.com/library/safari/documentation/appleapplications/reference/safariwebcontent/Introduction/Introduction.html](http://developer.apple.com/library/safari/documentation/appleapplications/reference/safariwebcontent/Introduction/Introduction.html)上获得。
- en: Leveraging HTML5 features in iPhone Ajax
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在iPhone Ajax中利用HTML5功能
- en: 'HTML5 is the recent revision of the HTML standard that is being adopted by
    modern web browsers. HTML5 got more attention when Apple blocked Flash access
    on the iPhone and pushed HTML5 as the alternative open solution. Notably, in April
    2010, Steve Jobs, co-founder of Apple Inc. attacked Adobe in an open letter "Thoughts
    on Flash" and strongly explained the reason for supporting HTML5 in iPhone and
    iPad. The summary of the open letter is as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5是HTML标准的最新修订版，被现代Web浏览器采用。当苹果在iPhone上阻止Flash访问并推动HTML5作为替代开放解决方案时，HTML5受到了更多的关注。值得注意的是，2010年4月，苹果公司联合创始人史蒂夫·乔布斯在一封名为“关于Flash的想法”的公开信中攻击了Adobe，并强烈解释了在iPhone和iPad上支持HTML5的原因。这封公开信的摘要如下：
- en: Flash isn't "open", like advertised
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flash不是“开放”的，就像广告中宣传的那样
- en: H.264 video format is widely supported and that doesn't require Flash
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H.264视频格式得到了广泛支持，不需要Flash
- en: Flash is prone to security and performance problems
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flash容易出现安全和性能问题
- en: Software decoding of video affects battery life
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视频的软件解码会影响电池寿命
- en: Flash belongs to the old PC era and isn't compatible with touch
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flash属于旧的PC时代，不兼容触摸
- en: Relying on Adobe as third-party development tool provider will affect the growth
    of Apple's platform
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖Adobe作为第三方开发工具提供商将影响苹果平台的增长
- en: 'Hence, HTML5 is natively supported in iPhone and usage is popular on the ecosystem.
    The HTML5 logo, introduced by W3C on January 18, 2011, is as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，HTML5在iPhone上得到了原生支持，并且在生态系统中使用广泛。W3C于2011年1月18日推出的HTML5标志如下：
- en: '![Leveraging HTML5 features in iPhone Ajax](graphics/3081_09_05.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![在iPhone Ajax中利用HTML5功能](graphics/3081_09_05.jpg)'
- en: Getting ready
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We'll require an iPhone simulator on Mac. Though not all options are available,
    we may also use a WebKit-based web browser, such as Google Chrome or Safari, for
    preview purposes.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在Mac上准备一个iPhone模拟器。虽然并非所有选项都可用，但我们也可以使用基于WebKit的Web浏览器，如Google Chrome或Safari，进行预览。
- en: How to do it...
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Among other new APIs such as canvas, HTML5''s following features are of particular
    interest for web apps and handheld devices:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 除了canvas等其他新的API之外，HTML5的以下功能对Web应用程序和手持设备特别感兴趣：
- en: '`audio` element:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`audio`元素：'
- en: 'In HTML5, the audio playing is part of browser functionality. Prior to that,
    it was a common practice to rely on audio players written in Flash to play .mp3
    files. An example native HTML5 audio usage looks like the following:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML5中，音频播放是浏览器功能的一部分。在此之前，通常依赖于Flash编写的音频播放器来播放.mp3文件。原生HTML5音频的使用示例如下：
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '`video` element'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`video`元素'
- en: 'The video element was considered as a Flash "killer" and gained momentum. Here
    is the HTML5 code to display a YouTube video:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 视频元素被认为是Flash的“杀手”，并且获得了动力。以下是显示YouTube视频的HTML5代码：
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The attributes can be explained as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 属性可以解释如下：
- en: '`poster` represents the image that has to be shown, to give an idea to the
    user about the video, usually the first non-blank frame image.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`poster`代表要显示的图像，以便向用户展示视频的内容，通常是第一个非空白帧图像。'
- en: '`controls` decides if the player will have video controls.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`controls`决定播放器是否具有视频控件。'
- en: '`preload` lets part of the video download, even before the play option is triggered.
    This lets the user have the video play as soon as play is triggered/clicked. The
    downside of this is that video will always get downloaded even when the user isn''t
    willing to play it.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`preload`允许视频的一部分在播放选项触发之前下载。这样用户可以在播放选项触发/点击时立即播放视频。这样做的缺点是即使用户不愿意播放视频，视频也会始终被下载。'
- en: Geolocation API
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地理定位API
- en: '**Geolocation** is the ability to determine the physical location of the user''s
    browser. In handheld devices, geolocation is possible through GPS, which gives
    the latitude and longitude of the device. For some iPhone apps, the physical location
    might be required to provide necessary features. For example, for an app that
    shows deals around the area, it would be helpful if the user''s location is automatically
    identified, without needing the user to enter an address. The following snippet
    displays the user''s latitude and longitude:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**地理定位**是确定用户浏览器的物理位置的能力。在手持设备中，通过GPS可以实现地理定位，它可以提供设备的纬度和经度。对于一些iPhone应用程序，可能需要用户的物理位置来提供必要的功能。例如，对于一个显示周围优惠的应用程序，如果用户的位置可以自动识别，而不需要用户输入地址，那将非常有帮助。以下代码显示用户的纬度和经度：'
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In real iPhone web apps, the latitude and longitude information can be passed
    to the server script to get localized data.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在真正的iPhone web应用中，纬度和经度信息可以传递到服务器脚本以获取本地化数据。
- en: Offline version
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 脱机版本
- en: One other important factor distinguishing native apps from web apps is the ability
    to load all or part of the UI from iPhones instantly, without needing to have
    any internet connection—so that the user will feel a quick response. The discount
    calculator web app that we've designed in the previous recipe is static in nature—we
    haven't updated any content from the server. Hence, if we make it to work offline,
    we may get the feel of a native app.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 本地应用与Web应用的另一个重要区别是能够立即从iPhone加载全部或部分UI，而无需任何互联网连接，以便用户感受到快速响应。我们在上一个示例中设计的折扣计算器Web应用是静态的，我们没有从服务器更新任何内容。因此，如果我们使其脱机工作，我们可能会感受到本地应用的感觉。
- en: 'HTML5 has a cache manifest feature that helps the developers to cache necessary
    files, so that the web app will work even when there''s no network:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5具有缓存清单功能，可以帮助开发人员缓存必要的文件，以便在没有网络连接时Web应用程序仍然可以工作：
- en: The MIME type of the cache manifest is `text/cache-manifest`
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存清单的MIME类型是`text/cache-manifest`
- en: The cache manifest file can take any name but must be specified with the `html`
    element, thus:`<html manifest="/cache.manifest">`
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存清单文件可以取任何名称，但必须在`html`元素中指定，如下所示：`<html manifest="/cache.manifest">`
- en: 'It''s a plain text file:'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个纯文本文件：
- en: 'The implicit syntax to specify files that are to be cached:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定要缓存的文件的隐式语法：
- en: To specify files that are to be cached, we have implicit and explicit syntaxes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 要指定要缓存的文件，我们有隐式和显式的语法。
- en: '[PRE14]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Using explicit syntax with headers `CACHE, NETWORK` and `FALLBACK:`
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用显式语法与头部`CACHE, NETWORK`和`FALLBACK:`
- en: '[PRE15]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Web storage
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web存储
- en: 'Another nifty feature of HTML5 is the ability to store data on the client machine.
    Unlike cookies, items are not sent to the server in HTTP headers. Web storage
    has two storage areas:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5的另一个巧妙功能是能够在客户端机器上存储数据。与cookie不同，项目不会在HTTP头中发送到服务器。Web存储有两个存储区域：
- en: '`localStorage:` Like a cookie, its scope is for the entire domain and persists
    even when the browser is closed.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`localStorage:` 类似于cookie，它的范围是整个域，即使浏览器关闭也会持续存在。'
- en: '`sessionStorage:` Its scope is per page per window and is available only till
    the window is closed. This helps the data to be restricted only for the window,
    which is not possible with cookies and local storage.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sessionStorage:` 它的范围是每个窗口每个页面，仅在窗口关闭时可用。这有助于将数据限制在窗口内，这是使用cookie和本地存储无法实现的。'
- en: 'localStorage and sessionStorage have similar syntax to store values; for example,
    the syntax to set, get, and delete the key name to Packt in localStorage is as
    follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: localStorage和sessionStorage具有类似的语法来存储值；例如，在localStorage中设置、获取和删除键名为Packt的语法如下：
- en: '[PRE16]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'When the key name doesn''t have any space, we can also use this alternative
    syntax:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当键名没有任何空格时，我们也可以使用这种替代语法：
- en: '[PRE17]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Accessing session storage has similar syntax, but through the `sessionStorage`
    object.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 访问会话存储具有类似的语法，但是通过`sessionStorage`对象。
- en: 'Client-side SQL database:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端SQL数据库：
- en: 'Accessing client-side databases through JavaScript API with SQL command is
    another useful feature of HTML5\. The new API offers openDatabase, transaction,
    and executeSql methods. Here''s a sample call to make use of these:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 通过JavaScript API访问客户端数据库并使用SQL命令是HTML5的另一个有用功能。新API提供了openDatabase、transaction和executeSql方法。以下是使用这些方法的示例调用：
- en: '[PRE18]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: How it works...
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Since iPhone natively supports HTML5, it's easy to make use of these features
    when building web apps. The audio and video elements play natively in iPhone without
    any additional requirements of Flash-based players.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 由于iPhone原生支持HTML5，在构建Web应用时很容易利用这些功能。在iPhone上，音频和视频元素可以原生播放，无需额外的Flash播放器要求。
- en: Geolocation makes it easy to find the user's location and provide localized
    data for the user. The cache manifest feature enables a web app to be saved on
    the iPhone for offline access. Storing local data on an iPhone is possible with
    `localStorage, sessionStorage`, or a client-side SQL database. These HTML5 features
    help us to build web apps with native-app look and feel.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 地理定位使得轻松找到用户的位置并为用户提供本地化数据。缓存清单功能使得Web应用可以在iPhone上进行离线访问。使用`localStorage, sessionStorage`或客户端SQL数据库可以在iPhone上存储本地数据。这些HTML5功能帮助我们构建具有原生应用外观和感觉的Web应用。
- en: There's more...
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 还有更多...
- en: When we want to continuously improve the app, a web app may be the preferred
    option, as a native app has to go through Apple's approval process. Gmail and
    Yahoo! Mail make use of HTML5 features for a better app feel on the iPhone.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想要不断改进应用时，Web应用可能是首选，因为原生应用必须经过苹果的批准流程。Gmail和Yahoo! Mail利用HTML5功能在iPhone上提供更好的应用体验。
- en: HTML5 demos
  id: totrans-118
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: HTML5演示
- en: '[http://html5demos.com/](http://html5demos.com/) offers a quick set of HTML5
    demos. It is helpful to understand browser compatibilities and usage examples.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://html5demos.com/](http://html5demos.com/)提供了一组快速的HTML5演示。这有助于理解浏览器的兼容性和使用示例。'
- en: Persist JS
  id: totrans-120
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Persist JS
- en: Persist JS a abstraction library that helps data storage on the client browser
    through alternative means, if the browser doesn't support HTML5 features natively.
    It's available at [http://pablotron.org/software/persist-js/](http://pablotron.org/software/persist-js/).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Persist JS是一个抽象库，它通过替代手段帮助客户端浏览器上的数据存储，如果浏览器不原生支持HTML5功能。它可以在[http://pablotron.org/software/persist-js/](http://pablotron.org/software/persist-js/)找到。
- en: Building native apps with PhoneGap
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PhoneGap构建原生应用
- en: Even though we can bring offline access, startup images, client-side data storage,
    and other nifty features to web apps, web apps still can't use device hardware
    features. Accelerometer, sound, vibration, and iPhone's inbuilt geolocation features
    are hardware-oriented and they're available only with native apps. Native iPhone
    apps were usually built with Objective C on Mac machines till PhoneGap. **PhoneGap**
    is an alternative development tool that allows us to build native iPhone apps
    in HTML, CSS, and JavaScript. It acts as a bridge between web applications and
    mobile devices; hence, it allows us to convert our web apps to other mobile targets
    quickly. Apart from the iPhone, it also supports other smartphones like Android
    and BlackBerry. It is a very cost-effective solution as it allows us to reuse
    the same codebase for many purposes—website building, web app building, and native
    app building. Another positive side is that it is open source. In this recipe,
    we'll build a native version of the discount calculator.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们可以为Web应用带来离线访问、启动图像、客户端数据存储和其他巧妙的功能，但Web应用仍然无法使用设备硬件功能。加速计、声音、振动和iPhone内置的地理定位功能是面向硬件的，它们只在原生应用中可用。原生iPhone应用通常是在Mac机器上使用Objective
    C构建的，直到PhoneGap出现。**PhoneGap**是一种替代开发工具，它允许我们使用HTML、CSS和JavaScript构建原生iPhone应用。它充当Web应用和移动设备之间的桥梁；因此，它允许我们快速将我们的Web应用转换为其他移动目标。除了iPhone，它还支持其他智能手机，如Android和BlackBerry。它是一种非常经济高效的解决方案，因为它允许我们重用相同的代码库来实现多种目的——网站构建、Web应用构建和原生应用构建。另一个积极的方面是它是开源的。在这个步骤中，我们将构建一个折扣计算器的原生版本。
- en: Getting ready
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Building a native app requires:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 构建原生应用需要：
- en: A Mac machine with Xcode installed. Xcode is free for those who have subscribed
    to the iOS developer program. It's available at [http://developer.apple.com/xcode/](http://developer.apple.com/xcode/).
    Xcode 4 consists of Xcode IDE, Instruments, iOS Simulator, and the latest Mac
    OS X and iOS SDKs.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了Xcode的Mac机器。对于订阅了iOS开发者计划的人来说，Xcode是免费的。它可以在[http://developer.apple.com/xcode/](http://developer.apple.com/xcode/)找到。Xcode
    4包括Xcode IDE、Instruments、iOS模拟器以及最新的Mac OS X和iOS SDK。
- en: PhoneGap, which is available through an easy installer from [http://www.phonegap.com/download/](http://www.phonegap.com/download/).
    Note that the ZIP file contains folders for all supporting platforms. When we
    switch to the `iOS` folder, we can find the installer, `PhoneGapInstaller.pkg`.
    It installs PhoneGapLib, the PhoneGap framework and the PhoneGap Xcode templates.
    This makes it easy for us to quickly create PhoneGap projects from Xcode.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PhoneGap可以通过[http://www.phonegap.com/download/](http://www.phonegap.com/download/)上的简单安装程序获得。请注意，ZIP文件包含所有支持平台的文件夹。当我们切换到`iOS`文件夹时，我们可以找到安装程序`PhoneGapInstaller.pkg`。它安装了PhoneGapLib、PhoneGap框架和PhoneGap
    Xcode模板。这使我们能够快速从Xcode创建PhoneGap项目。
- en: A paid subscription for the iOS developer program [http://developer.apple.com/programs/ios/](http://developer.apple.com/programs/ios/)
    to submit our app to the App Store and be able to run it on our iPhone. Without
    iOS developer access, we can only preview apps on a simulator.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 购买iOS开发者计划的付费订阅[http://developer.apple.com/programs/ios/](http://developer.apple.com/programs/ios/)，以便将我们的应用提交到App
    Store并能够在iPhone上运行。如果没有iOS开发者访问权限，我们只能在模拟器上预览应用。
- en: How to do it...
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Building a native iPhone app with PhoneGap can be divided into the following
    steps:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PhoneGap构建原生iPhone应用可以分为以下步骤：
- en: 'Building a web app:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建一个Web应用：
- en: As we have seen in the first recipe, first we have to build a web app.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在第一个步骤中看到的，首先我们必须构建一个Web应用。
- en: 'Creating a PhoneGap project in Xcode 4:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Xcode 4中创建一个PhoneGap项目：
- en: 'In this step, we have to link our web app with PhoneGap by creating a PhoneGap
    project in Xcode:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步中，我们必须通过在Xcode中创建一个PhoneGap项目来将我们的Web应用与PhoneGap连接起来：
- en: '![How to do it...](graphics/3081_09_06.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/3081_09_06.jpg)'
- en: When PhoneGapLib is installed, Xcode will be set with the necessary templates.
    Thus, creating a new PhoneGap project is simpler.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 当PhoneGapLib安装后，Xcode将设置必要的模板。因此，创建一个新的PhoneGap项目更简单。
- en: Launch Xcode and select **New Project** from the **File** menu.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动Xcode并从**文件**菜单中选择**新建项目**。
- en: In the **Choose a template for your new project** window, choose **PhoneGap-based
    Application**, as shown in the preceding screenshot. Note that this will be available
    only when we install `PhoneGapInstaller.pkg`.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**选择新项目的模板**窗口中，选择**基于PhoneGap的应用**，如前面的屏幕截图所示。请注意，只有在安装了`PhoneGapInstaller.pkg`后才会出现这个选项。
- en: 'In the screen **Choose options for your new project**, enter the following
    product details:'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在屏幕**选择新项目的选项**中，输入以下产品详细信息：
- en: '**Product Name:**'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品名称：
- en: '**Company Identifier:**'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公司标识符：**'
- en: Entering these will auto-populate **Bundle Identifier** as `com.packt.DiscCalculator`
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入这些将自动填充**Bundle Identifier**为`com.packt.DiscCalculator`
- en: Choose the project location in the next step.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在下一步中选择项目位置。
- en: Run the project to create a `www` folder.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行项目以创建一个`www`文件夹。
- en: Add a folder reference to `www` in the project.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在项目中添加一个对`www`的文件夹引用。
- en: Note
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The last two steps are necessary, due to the bug in Xcode 4 Template.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 最后两个步骤是必要的，因为Xcode 4模板中存在错误。
- en: Nitobi provides free web service to quickly create a PhoneGap project at [https://build.phonegap.com/generate](http://https://build.phonegap.com/generate).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Nitobi提供免费的网络服务，可以快速创建一个PhoneGap项目，网址为[https://build.phonegap.com/generate](http://https://build.phonegap.com/generate)。
- en: 'These steps will create a default PhoneGap sample project. Essentially, the
    code present in the sample needs some attention:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤将创建一个默认的PhoneGap示例项目。基本上，示例中的代码需要一些注意：
- en: '[PRE19]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here, we can clearly note that these PhoneGap-specific functions are not available
    in our web app code. So, we have to merge these logics into our web app code.
    The easier options here are:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以清楚地注意到这些PhoneGap特定的功能在我们的web应用代码中不可用。因此，我们必须将这些逻辑合并到我们的web应用代码中。这里更容易的选择是：
- en: Remove `startup.png` and `icon.png` from the `www` folder; startup images and
    icons are found outside of the `www` folder with filenames `Default.png` (320x480),
    `Default-Landscape.png` (1004x768), `Default-Portrait.png` (768x1024), `icon-72.png`
    (72x72) and `icon.png` (57x57). Different resolution files are required when we
    target other devices.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`www`文件夹中删除`startup.png`和`icon.png`；启动图像和图标位于`www`文件夹之外，文件名为`Default.png`（320x480）、`Default-Landscape.png`（1004x768）、`Default-Portrait.png`（768x1024）、`icon-72.png`（72x72）和`icon.png`（57x57）。当我们针对其他设备时，需要不同分辨率的文件。
- en: Modify the `head` section of our web app with the relevant PhoneGap code.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用相关的PhoneGap代码修改我们的web应用程序的`head`部分。
- en: Then, replace the entire `www` folder content with it.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，用它替换整个`www`文件夹内容。
- en: Add hardware-specific features.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加硬件特定的功能。
- en: 'So far we haven''t added any hardware-specific features. PhoneGap API allows
    us to access hardware-specific features via the navigator.notification object
    in JavaScript:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们还没有添加任何硬件特定的功能。PhoneGap API允许我们通过JavaScript中的navigator.notification对象访问硬件特定的功能：
- en: '`navigator.notification.alert(message, alertCallback, [title], [buttonName])`
    allows us to have a native alert window with more features.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`navigator.notification.alert(message, alertCallback, [title], [buttonName])`允许我们使用更多功能的本机警报窗口。'
- en: '`navigator.notification.confirm(message, confirmCallback, [title], [buttonLabels])`
    allows us to have a native confirm dialog with more features.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`navigator.notification.confirm(message, confirmCallback, [title], [buttonLabels])`允许我们使用更多功能的本机确认对话框。'
- en: '`navigator.notification.beep(times)` allows us to cause beeps.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`navigator.notification.beep(times)`允许我们发出蜂鸣声。'
- en: '`navigator.notification.vibrate(milliseconds)` allows us to make the phone
    vibrate.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`navigator.notification.vibrate(milliseconds)`允许我们使手机振动。'
- en: 'Hence, let''s modify the code a little more to have native a beep, vibrate,
    and alert dialog. For the Disc Calculator app, the final code will in the www
    folder will be as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们修改代码，以便具有本机的蜂鸣、振动和警报对话框。对于Disc Calculator应用程序，最终的代码将在`www`文件夹中如下所示：
- en: '[PRE20]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Previewing in iPhone Simulator:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在iPhone模拟器中预览：
- en: 'Previewing in an iPhone Simulator is easy with the **Build and Run** option
    in Xcode with the Active Executable chosen. The following screenshot shows our
    **DiscCalculator** project in Xcode:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在Xcode中使用**构建和运行**选项并选择活动可执行文件，可以轻松在iPhone模拟器中预览。以下截图显示了我们在Xcode中的**DiscCalculator**项目：
- en: '![How to do it...](graphics/3081_09_07.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/3081_09_07.jpg)'
- en: 'As shown in the following screenshot, we can choose the **Active Executable**
    from the overview dropdown so that we can execute it in an iPhone Simulator:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，我们可以从概述下拉菜单中选择**活动可执行文件**，以便在iPhone模拟器中执行它：
- en: '![How to do it...](graphics/3081_09_08.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/3081_09_08.jpg)'
- en: 'Finally, we get our app run in iPhone Simulator as shown on the console as
    follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们的应用程序在iPhone模拟器中运行如下所示：
- en: '![How to do it...](graphics/3081_09_09.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/3081_09_09.jpg)'
- en: 'Previewing in an iPhone:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在iPhone中预览：
- en: In order to preview or submit our app to the App Store, we'd need to create
    Provisioning Profile and that in turn would require paid subscription for the
    iOS developer program. A Provisioning Profile is a collection that ties together
    apps, developers, and devices (iPhone) so that installing it on devices would
    authorize them for testing.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了预览或提交我们的应用到App Store，我们需要创建Provisioning Profile，这又需要iOS开发者计划的付费订阅。Provisioning
    Profile是一个集合，将应用程序、开发人员和设备（iPhone）绑定在一起，以便在设备上安装它以进行测试。
- en: '![How to do it...](graphics/3081_09_10.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/3081_09_10.jpg)'
- en: 'The process is easy with the Provisioning Assistant found in the Provisioning
    Portal of iOS developer webpage:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在iOS开发者网页的Provisioning Portal中找到Provisioning Assistant，这个过程很容易：
- en: '![How to do it...](graphics/3081_09_11.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/3081_09_11.jpg)'
- en: 'Though launching Provisioning Assistant as shown in the preceding screenshot
    will guide you through every step, here''s the summary:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如前面截图所示启动Provisioning Assistant将指导您完成每一步，但这里是摘要：
- en: Generate a CSR in the Keychain Access application and upload it to the provisioning
    portal. Then, download the generated certificate and install it in Keychain Access.
    Here, the certification creation should be for "Development".
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Keychain Access应用程序中生成CSR并将其上传到供应门户。然后，在Keychain Access中安装生成的证书。这里，证书的创建应该是为“开发”。
- en: Enter **APP ID** (in our case, `com.packt)` details in the provisioning portal
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在供应门户中输入**APP ID**（在我们的情况下，`com.packt`）的详细信息
- en: Add development devices' **UDID** (Unique Device Identifier) in the provisioning
    portal.
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在供应门户中添加开发设备的**UDID**（唯一设备标识符）。
- en: Now, development provisioning profile will be ready. Download and drop it in
    the Xcode project. Once the iPhone is connected with the Mac machine, launching
    the app on the device would load the app in an iPhone.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，开发配置文件将准备就绪。下载并将其放入Xcode项目中。一旦iPhone连接到Mac机器，在设备上启动应用程序将会在iPhone上加载应用程序。
- en: Note
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For finding an iPhone''s UDID, we may:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到iPhone的UDID，我们可以：
- en: Use the UDIDit app at [http://itunes.apple.com/app/udidit/id326123820](http://itunes.apple.com/app/udidit/id326123820)
    on iPhone.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在iPhone上使用[http://itunes.apple.com/app/udidit/id326123820](http://itunes.apple.com/app/udidit/id326123820)上的UDIDit应用程序。
- en: OR
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 或者
- en: Use iTunes after connecting the iPhone.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 连接iPhone后使用iTunes。
- en: 'Submitting to App Store:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交到App Store：
- en: For previewing in iPhone, we have to create a "Development" Provisioning Profile
    (this is also referred as "ad hoc") and for submitting to App Store, we have to
    create a "Distribution" Provisioning Profile. The steps to create a Provisioning
    Profile are similar, but in the certificates option, we have to create it for
    Distribution.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 要在iPhone上预览，我们必须创建一个“开发”配置文件（也称为“临时”），并且要提交到App Store，我们必须创建一个“分发”配置文件。创建配置文件的步骤是相似的，但在证书选项中，我们必须为分发创建它。
- en: The next step is to submit the app through iTunes Connect at [https://itunesconnect.apple.com/](http://https://itunesconnect.apple.com/)
    For this, we have to add new application in iTunes Connect website and enter the
    necessary details. In the final step, we have to upload the app file binary via
    the Application Loader application that acts as an uploader. Once uploaded and
    submitted, the app will be reviewed by Apple staff. When the app meets their criteria,
    it will be approved.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是通过[https://itunesconnect.apple.com/](http://https://itunesconnect.apple.com/)的iTunes
    Connect提交应用程序。为此，我们必须在iTunes Connect网站上添加新应用程序并输入必要的详细信息。在最后一步，我们必须通过充当上传器的Application
    Loader应用程序上传应用程序文件二进制文件。一旦上传并提交，应用程序将由苹果员工审核。当应用程序符合他们的标准时，它将被批准。
- en: How it works...
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: PhoneGap is actually a collection of WebView wrappers targeting different platforms.
    So, it displays a web app inside a browser control, giving a native feel. The
    wrappers expose the native code functions to JavaScript API. PhoneGap thus brings
    a native feel and HTML/CSS theming for any app.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap实际上是针对不同平台的WebView包装器集合。因此，它在浏览器控件中显示Web应用程序，给人一种本地的感觉。这些包装器将本地代码函数暴露给JavaScript
    API。因此，PhoneGap为任何应用程序带来了本地感觉和HTML/CSS主题。
- en: Creation of a Provisioning Profile decides authorized devices for ad hoc development
    testing. Through iTunes Connect website, apps are submitted and managed for further
    revisions.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 创建配置文件决定了临时开发测试的授权设备。通过iTunes Connect网站，应用程序可以提交并进行进一步的修订。
- en: There's more...
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: We have learned about PhoneGap on the iOS platform. But, we may have to build
    apps for other platforms.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了iOS平台上的PhoneGap。但是，我们可能需要为其他平台构建应用程序。
- en: Getting Started Guide/Help Wizard
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入门指南/帮助向导
- en: PhoneGap offers a good starter guide for all platforms at [http://www.phonegap.com/start](http://www.phonegap.com/start).
    By choosing the target platform, we can get step-by-step video tutorials or screen
    walkthroughs.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: PhoneGap在[http://www.phonegap.com/start](http://www.phonegap.com/start)上为所有平台提供了一个很好的入门指南。通过选择目标平台，我们可以获得逐步视频教程或屏幕演示。
- en: Speeding up a PhoneGap project
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加快PhoneGap项目的速度
- en: In the last recipes, we have seen how to build a web app with jQTouch and convert
    it into a native app through PhoneGap. In this recipe, we'll see how to reduce
    the steps involved and see an alternative solution for jQTouch.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一篇文章中，我们已经看到了如何使用jQTouch构建Web应用程序，并通过PhoneGap将其转换为本地应用程序。在本篇文章中，我们将看到如何减少涉及的步骤，并看到jQTouch的另一种替代解决方案。
- en: Getting ready
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: We'll require access to PhoneGap Build at [https://build.phonegap.com/](http://https://build.phonegap.com/).
    At the time of writing, this feature is in private beta and would require jQuery
    Mobile from [http://jquerymobile.com/](http://jquerymobile.com/) along with jQuery
    core.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要访问[https://build.phonegap.com/](http://https://build.phonegap.com/)上的PhoneGap
    Build。在撰写本文时，此功能处于私人测试阶段，需要从[http://jquerymobile.com/](http://jquerymobile.com/)获取jQuery
    Mobile和jQuery核心。
- en: How to do it...
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To speed up the development, we have to reduce the steps and improve our programming
    approaches:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加快开发速度，我们必须减少步骤并改进我们的编程方法：
- en: 'PhoneGap Build service:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PhoneGap构建服务：
- en: Nitobi, the company that developed PhoneGap has an online build service as shown
    in the following screenshot. This means, we don't need to follow any build steps
    in our machine.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 开发PhoneGap的Nitobi公司在下图中展示了一个在线构建服务。这意味着我们不需要在我们的机器上遵循任何构建步骤。
- en: '![How to do it...](graphics/3081_09_12.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/3081_09_12.jpg)'
- en: It would be enough to upload the source files in HTML/CSS/JavaScript and then
    build over the cloud. The cloud build service lets the source files be built for
    other platforms too, such as Android, Palm, Symbion, and Blackberry. This will
    be a good timesaver as well as a good option for those who're using Windows machines.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只需上传HTML/CSS/JavaScript源文件，然后在云端构建即可。云构建服务还可以为其他平台构建源文件，如Android、Palm、Symbion和Blackberry。这将是一个节省时间的好方法，也是一个适用于使用Windows机器的好选择。
- en: 'jQuery Mobile:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: jQuery Mobile：
- en: jQuery Mobile is a newer framework as compared to jQTouch. It offers similar
    theming and programming ability through HTML, CSS, and JavaScript. It is an official
    jQuery library for mobile development.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 与jQTouch相比，jQuery Mobile是一个较新的框架。它通过HTML、CSS和JavaScript提供类似的主题和编程能力。这是移动开发的官方jQuery库。
- en: '![How to do it...](graphics/3081_09_13.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/3081_09_13.jpg)'
- en: '**jQTouch** primarily targets WebKit browsers and thus support is good only
    in iPhone. But, if we target more devices, jQTouch may not work smoothly as it''s
    not meant to be cross-platform and cross-device. jQuery Mobile on the other hand
    supports multiple platform and devices. The preceding chart shows jQuery Mobile''s
    support on various platforms.'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '**jQTouch**主要针对WebKit浏览器，因此仅在iPhone上支持良好。但是，如果我们针对更多设备，jQTouch可能无法顺利工作，因为它不是跨平台和跨设备的。另一方面，jQuery
    Mobile支持多个平台和设备。上面的图表显示了jQuery Mobile在各个平台上的支持情况。'
- en: As shown, this is a timesaver when we build apps for multiple platform and devices.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，当我们为多个平台和设备构建应用时，这是一个节省时间的工具。
- en: How it works...
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它的工作原理...
- en: As PhoneGap Build service works over the cloud, we don't need to have any development
    environment requirement. It builds apps for multiple devices.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 由于PhoneGap Build服务在云端工作，我们不需要满足任何开发环境要求。它可以为多个设备构建应用。
- en: jQuery Mobile targets multiple devices and platforms. This is similar to jQTouch
    in terms of handling theme through CSS and easier JavaScript API. As its major
    focus is in cross-platform and cross-device support, it would save our time in
    porting the app in other devices. The support chart clearly shows the level of
    support that this framework offers on a particular device.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile针对多个设备和平台。在处理主题和更容易的JavaScript API方面，这与jQTouch类似。由于其主要关注点是跨平台和跨设备支持，它将节省我们在其他设备上移植应用的时间。支持图表清楚地显示了该框架在特定设备上提供的支持水平。
- en: There's more...
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Apart from PhoneGap, there are other native app development tools available:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 除了PhoneGap，还有其他原生应用开发工具可用：
- en: '**Rhomobile Rhodes**'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Rhomobile Rhodes**'
- en: Rhomobile Rhodes found at [http://rhomobile.com/](http://rhomobile.com/) is
    another development solution for native apps. Unlike PhoneGap, Rhodes builds a
    true native application. Its language is Ruby. Similar to PhoneGap Build service,
    it offers RhoHub [http://www.rhohub.com/](http://www.rhohub.com/) , browser-based
    build solution. When we know Ruby and want to build a real native app, this would
    be a good solution.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: Rhomobile Rhodes可在[http://rhomobile.com/](http://rhomobile.com/)找到，是另一个用于原生应用的开发解决方案。与PhoneGap不同，Rhodes构建真正的原生应用。它的语言是Ruby。类似于PhoneGap
    Build服务，它提供了基于浏览器的构建解决方案RhoHub [http://www.rhohub.com/](http://www.rhohub.com/)。当我们了解Ruby并想构建一个真正的原生应用时，这将是一个很好的解决方案。
- en: '**Appcelerator Titanium/**'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Appcelerator Titanium/**'
- en: Appcelerator Titanium found at[http://www.appcelerator.com/products/titanium-cross-platform-application-development/](http://www.appcelerator.com/products/titanium-cross-platform-application-development/)
    previously mimicked the native app feel through Web View/browser control. Of late,
    it produces true native code. Unlike Rhodes, it uses JavaScript. When we want
    to develop a true native app with web technologies, this may be a good solution.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: Appcelerator Titanium可在[http://www.appcelerator.com/products/titanium-cross-platform-application-development/](http://www.appcelerator.com/products/titanium-cross-platform-application-development/)找到，之前通过Web
    View/浏览器控制模拟原生应用的感觉。最近，它可以生成真正的原生代码。与Rhodes不同，它使用JavaScript。当我们想要用Web技术开发真正的原生应用时，这可能是一个很好的解决方案。
- en: Building a currency conversion hybrid app
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建货币转换混合应用
- en: The term **hybrid app** loosely means an app built through WebView wrappers
    that displays remote data in it. The web browser component inside the native app
    wrapper is primarily used to display the UI and data that has been fetched in
    JSON format to update the content. PhoneGap is one such technology. And so, native
    app development with PhoneGap along with the ability to update UI from remote
    data can also be referred to as a hybrid app. In this recipe, we'll see how to
    build a currency conversion app.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 术语**混合应用**宽泛地指的是通过WebView包装器构建的应用，它在其中显示远程数据。原生应用包装器内部的Web浏览器组件主要用于显示已以JSON格式获取的UI和数据，以更新内容。PhoneGap就是这样的技术。因此，使用PhoneGap进行原生应用开发，并能够从远程数据更新UI也可以称为混合应用。在本配方中，我们将看到如何构建一个货币转换应用。
- en: Getting ready
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'We''ll require:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要：
- en: A Mac machine with Xcode installed
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了Xcode的Mac机器
- en: PhoneGapLib installed in Xcode
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Xcode中安装的PhoneGapLib
- en: jQTouch available from [http://jqtouch.com/](http://jqtouch.com/) along with
    jQuery core
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jQTouch可在[http://jqtouch.com/](http://jqtouch.com/)以及jQuery核心一起使用
- en: '`money.js`, a JavaScript currency conversion library available from [http://josscrowcroft.github.com/money.js/](http://josscrowcroft.github.com/money.js/)'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`money.js`，一个JavaScript货币转换库，可从[http://josscrowcroft.github.com/money.js/](http://josscrowcroft.github.com/money.js/)获取'
- en: Open source Exchange Rates API available at [http://openexchangerates.org/latest.php](http://openexchangerates.org/latest.php)
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开源汇率API可在[http://openexchangerates.org/latest.php](http://openexchangerates.org/latest.php)找到
- en: How to do it...
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Open source exchange rates API offers over 120 conversion rates with USD as
    a base currency. Its sister library for currency conversion—money.js can convert
    to different currencies when fed with exchange rates data; note that it's enough
    to have one base currency and converting across other currencies is done through
    mathematic calculation. Say, for example, if we have USD to AUD and USD to INR
    exchange rates, we can easily calculate INR to AUD using `money.js`. Hence, when
    we have `money.js` and that's fed with open source exchange rates data, we can
    have live currency conversion done.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 开源汇率API提供了超过120种以美元为基础货币的转换率。它的货币转换姊妹库money.js可以在提供汇率数据时转换到不同的货币；请注意，只需要一个基础货币，通过数学计算就可以在其他货币之间进行转换。例如，如果我们有美元兑澳大利亚元和美元兑印度卢比的汇率，我们可以很容易地使用`money.js`计算印度卢比兑澳大利亚元。因此，当我们有`money.js`并且提供了开源汇率数据时，我们可以进行实时货币转换。
- en: 'With the API and currency conversion library, we can build an app, as shown
    in the following screenshot:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 有了API和货币转换库，我们可以构建一个应用，如下面的截图所示：
- en: '![How to do it...](graphics/3081_09_14.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/3081_09_14.jpg)'
- en: 'Here is the code from the HTML file that is part of the Xcode PhoneGap project.
    We have only created the HTML file. The rest of the files are derived from the
    PhoneGap Xcode template:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '这是Xcode PhoneGap项目的HTML文件中的代码。我们只创建了HTML文件。其余文件都是从PhoneGap Xcode模板派生的： '
- en: '[PRE21]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: To compile or preview the app in an iPhone Simulator, refer to the *Building
    native apps with PhoneGap* recipe in this chapter.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 要在iPhone模拟器中编译或预览应用，请参阅本章中的*使用PhoneGap构建原生应用*配方。
- en: How it works...
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它的工作原理...
- en: 'We have used the `money.js` library and open source exchange rates API for
    the conversion process. During the application load, it fetches the exchange data
    in the JSON format in a synchronous manner. We set the `async` flag to `false`
    in the `$.ajax()` method so that the function calls will be serial. The exchange
    data from the API looks like the following:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了`money.js`库和开源汇率API进行转换过程。在应用程序加载期间，它以同步方式以JSON格式获取汇率数据。我们在`$.ajax()`方法中将`async`标志设置为`false`，以便函数调用将是串行的。来自API的汇率数据如下：
- en: '[PRE22]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The data is fed to the `money.js` library through `fx.rates` when it's loaded,
    otherwise set in the global `fxSetup` variable for the library to use once loaded.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 数据通过`fx.rates`传递给`money.js`库，当加载时，否则设置为全局`fxSetup`变量，以便库在加载后使用。
- en: The `fx.rates` object has currency codes in its index; they're iterated through
    the `$.each()` method for populating the source currency dropdown and initial
    exchange rates listing for the value of `1 USD`. Note that for good performance,
    we have reduced access to DOM by populating HTML content first and injecting it
    through a single `html()` call.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`fx.rates`对象在其索引中具有货币代码；它们通过`$.each()`方法进行迭代，以填充源货币下拉菜单和初始汇率列表，值为`1美元`。请注意，为了获得良好的性能，我们通过首先填充HTML内容并通过单个`html()`调用注入来减少对DOM的访问。'
- en: 'As per requirement, when either amount or source currency is changed, the whole
    exchange rates listing is to be repainted. It''s achieved by hooking a `change`
    event and using the `fx.convert()` method. `money.js` supports different syntaxes
    including jQuery-like chaining support:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 根据要求，当金额或源货币更改时，整个汇率列表将被重新绘制。这是通过挂接`change`事件并使用`fx.convert()`方法实现的。`money.js`支持包括类似jQuery的链式支持在内的不同语法：
- en: '[PRE23]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We have used the following syntax that is easier to iterate and has less overhead
    than chained syntax:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了以下语法，它比链式语法更容易迭代，开销更小：
- en: '[PRE24]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note that PhoneGap-based apps were earlier rejected by Apple citing that they're
    just web clips (not completely native).
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，基于PhoneGap的应用程序早些时候被苹果拒绝，理由是它们只是网络剪辑（不完全本地化）。
- en: 'It is advised that the template/view logic done in HTML is always available
    locally and the data is received from server in JSON format. This way, the app
    won''t lose its look/feel even without data. In other words, pulling HTML content
    from the server is not encouraged and such HTML content may cause gaps, leaving
    a broken appearance. When the App Store audit team reviews the app, if the app''s
    design/feel is changed through remote HTML content, the app may be rejected. App
    review is an important process in submission and it''s advisable to check the
    following:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 建议将在HTML中完成的模板/视图逻辑始终本地可用，数据以JSON格式从服务器接收。这样，即使没有数据，应用程序也不会失去其外观/感觉。换句话说，不鼓励从服务器拉取HTML内容，这样的HTML内容可能会导致间隙，留下破碎的外观。当App
    Store审核团队审核应用程序时，如果应用程序的设计/感觉通过远程HTML内容更改，应用程序可能会被拒绝。应用审核是提交的重要流程，建议检查以下内容：
- en: 'App Store Review Guidelines and Mac App Store Review Guidelines: [http://developer.apple.com/appstore/guidelines.html](http://developer.apple.com/appstore/guidelines.html)'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'App Store Review Guidelines and Mac App Store Review Guidelines: [http://developer.apple.com/appstore/guidelines.html](http://developer.apple.com/appstore/guidelines.html)'
- en: 'App Store Review Guidelines: [https://developer.apple.com/appstore/resources/approval/guidelines.html](http://https://developer.apple.com/appstore/resources/approval/guidelines.html)'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'App Store Review Guidelines: [https://developer.apple.com/appstore/resources/approval/guidelines.html](http://https://developer.apple.com/appstore/resources/approval/guidelines.html)'
- en: There's more...
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: As the apps would usually fetch data from remote server in JSON format, it's
    wise to use a client-side template solution.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 应用通常会以JSON格式从远程服务器获取数据，因此最好使用客户端模板解决方案。
- en: Mustache
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Mustache
- en: 'Mustache is a popular logic-less templating solution found at [http://mustache.github.com/](http://mustache.github.com/).
    It is available in many programming languages—including JavaScript. Here is some
    sample usage:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: Mustache是一个流行的无逻辑模板解决方案，可以在[http://mustache.github.com/](http://mustache.github.com/)找到。它在许多编程语言中都有，包括JavaScript。以下是一些示例用法：
- en: '[PRE25]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The preceding code will give the output: **Alice should pay 12000**.'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将产生输出：**Alice应支付12000**。
- en: drink, jQuery micro template
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: drink, jQuery微模板
- en: 'This jQuery micro template library is available at [http://plugins.jquery.com/project/micro_template](http://plugins.jquery.com/project/micro_template).
    It''s based on jQuery author John Resig''s JavaScript Micro-Templating article
    [http://ejohn.org/blog/javascript-micro-templating/](http://ejohn.org/blog/javascript-micro-templating/)
    on developing a lightweight script. This plugin has improved the template selection
    and variables can be plain HTML with template markup; the data is pushed to the
    template. This is an ideal template library for mobile platforms due to its small
    code size. Here''s some sample usage:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这个jQuery微模板库可以在[http://plugins.jquery.com/project/micro_template](http://plugins.jquery.com/project/micro_template)找到。它基于jQuery作者John
    Resig的JavaScript微模板文章[http://ejohn.org/blog/javascript-micro-templating/](http://ejohn.org/blog/javascript-micro-templating/)，讲述了如何开发一个轻量级脚本。该插件改进了模板选择，变量可以是带有模板标记的纯HTML；数据被推送到模板中。由于其代码大小较小，这是一个适合移动平台的理想模板库。以下是一些示例用法：
- en: '[PRE26]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
