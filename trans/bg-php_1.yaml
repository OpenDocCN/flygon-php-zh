- en: Chapter 1. Getting Started with PHP
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. PHP入门
- en: PHP, or Pre-Processor Hypertext, is a programming language that is used to design
    web applications and to make a website look more intuitive and interesting. PHP
    has also gained a lot of popularity over the years as a server-side scripting
    language. PHP is an easy to use, but powerful, language. PHP works on multiple
    operating systems and can support multiple servers. All of these features of PHP
    make it an ideal candidate for a web designing language.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: PHP，或者预处理超文本，是一种用于设计网页应用程序并使网站看起来更直观和有趣的编程语言。多年来，PHP也在服务器端脚本语言方面获得了很大的流行。PHP是一种易于使用但功能强大的语言。PHP可以在多个操作系统上运行，并支持多个服务器。PHP的所有这些特性使其成为网页设计语言的理想选择。
- en: This book will take you through the basics of PHP, including declaring the syntax,
    declaring and using the variables and data types, operators, and conditionals.
    It will then cover the principles of building a PHP framework along with building
    your own PHP web application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将带你了解PHP的基础知识，包括声明语法、声明和使用变量和数据类型、运算符和条件语句。然后，它将涵盖构建PHP框架的原则以及构建自己的PHP网页应用程序。
- en: In this chapter, you will begin to learn the building blocks of the PHP programming
    language. We will be covering the syntax and how to declare and use variables
    in PHP. We will also look at controlling the execution flow using the `if` statement.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将开始学习PHP编程语言的基本知识。我们将涵盖语法以及如何在PHP中声明和使用变量。我们还将看看如何使用`if`语句控制执行流程。
- en: By the end of this chapter, you should be able to write simple programs using
    these elements.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，你应该能够使用这些元素编写简单的程序。
- en: 'By the end of this chapter, you will be able to:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，你将能够：
- en: Use the basic syntax of PHP to write simple programs
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用PHP的基本语法编写简单的程序
- en: Use variables for different data, and manipulate them using different operators
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用变量存储不同的数据，并使用不同的运算符进行操作
- en: Use conditionals to control the flow of execution
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用条件语句来控制执行流程
- en: The Basics
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础知识
- en: We will start our journey with a look at PHP syntax and executing our first
    file. Let's begin.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从查看PHP语法和执行我们的第一个文件开始。让我们开始吧。
- en: 'In PHP, syntax is very important; you need proper syntax for your server to
    know where it should start parsing PHP, and you have to show it via the open and
    close PHP tags, as shown here:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在PHP中，语法非常重要；你需要适当的语法让你的服务器知道它应该从哪里开始解析PHP，并且你必须通过开放和关闭PHP标签来显示它，如下所示：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Through using the PHP tags, you can add your code just about anywhere in the
    document. This means that if you have an HTML website, you can just add the tags,
    along with some PHP code, and it will process. In addition to using the open and
    close PHP tags, you must also use the `.php` extension in your file.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用PHP标签，你可以在文档的任何地方添加你的代码。这意味着如果你有一个HTML网站，你可以添加标签以及一些PHP代码，它就会被处理。除了使用开放和关闭PHP标签，你还必须在文件中使用`.php`扩展名。
- en: Let's get started with a quick example.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个快速示例开始。
- en: Using PHP to Display "Hello World"
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用PHP显示"Hello World"
- en: 'In this section, we are going to use what we''ve learned so far to display
    a string to the user:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将利用我们到目前为止学到的知识来向用户显示一个字符串：
- en: Open your code editor.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的代码编辑器。
- en: Create a new file and name it `syntax.php.`
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件并命名为`syntax.php`。
- en: 'Enter the following, and save your document:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下内容，并保存你的文档：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Open your working directory in the **Terminal.**
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**终端**中打开你的工作目录。
- en: 'Type the following command:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Using PHP to Display "Hello World"](graphics/1_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![使用PHP显示"Hello World"](graphics/1_01.jpg)'
- en: 'Switch back to your document and enter the following:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换回你的文档并输入以下内容：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Go back to the Terminal and type the following:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到终端并输入以下内容：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You should now see the string, "Hello World" printed on the screen.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该在屏幕上看到字符串"Hello World"被打印出来。
- en: Variables and Data Types
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变量和数据类型
- en: To start our learning with PHP, we must first look at the core building blocks
    that will be used to build every project. In our applications, we will always
    need a way to store our data temporarily (in our case, we call the storage methods
    variables).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始学习PHP，我们必须首先看一下将用于构建每个项目的核心构建块。在我们的应用程序中，我们总是需要一种临时存储数据的方法（在我们的情况下，我们称之为存储方法变量）。
- en: 'Variables are defined as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 变量定义如下：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see in the preceding example, variables start off using the `$` symbol,
    followed by the name, and the value is assigned using the assignment operator.
    Here, we have a variable named `VARIABLENAME,` with a string value of `VALUE`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如你在上面的例子中所见，变量以`$`符号开头，后面跟着变量名，使用赋值运算符赋值。在这里，我们有一个名为`VARIABLENAME`的变量，其字符串值为`VALUE`。
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Variable names cannot start with numbers or special symbols, besides the `$`
    sign, used to define the variable itself.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 变量名不能以数字或特殊符号开头，除了用于定义变量本身的`$`符号。
- en: PHP is one of the few languages that doesn't require you to declare a data type
    before assigning a value.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: PHP是少数几种不需要在赋值之前声明数据类型的语言之一。
- en: '| **Types** | **Examples** |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| **类型** | **示例** |'
- en: '| String | "Hello World" |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 字符串 | "Hello World" |'
- en: '| Number | 123 |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 数字 | 123 |'
- en: '| Float | 1.095 |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 浮点数 | 1.095 |'
- en: '| Boolean | TRUE or FALSE |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 布尔值 | TRUE或FALSE |'
- en: We will now try to implement variables in PHP.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将尝试在PHP中实现变量。
- en: Working with Variables
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用变量
- en: 'In this section, we will illustrate a real-world example of using variables
    in a program. We will start off by creating a variable to store a user''s name:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将举例说明在程序中使用变量的真实例子。我们将首先创建一个变量来存储用户的姓名：
- en: Open your code editor.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的代码编辑器。
- en: Create a new file and name it `variables.php.`
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件并命名为`variables.php`。
- en: 'Enter the following, and save your document:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下内容，并保存你的文档：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Open your working directory in the Terminal.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中打开你的工作目录。
- en: Enter the following command, and then press *Enter*:![Working with Variables](graphics/1_02.jpg)
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令，然后按*Enter*：![使用变量](graphics/1_02.jpg)
- en: Note
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Another way to insert a variable''s value into a string is to use this special
    syntax:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 将变量的值插入字符串的另一种方法是使用特殊的语法：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Operators
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运算符
- en: We will now have a look at the various operators that are available in PHP.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将看一下PHP中可用的各种运算符。
- en: Comparison Operators
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 比较运算符
- en: In the section on variables, we saw the = symbol, which, in PHP, is known as
    an assignment operator. This operator does exactly what the name implies, allowing
    you to give a variable a value. The first operators are known as comparison operators.
    Comparison operators allow you to compare two values within a given conditional
    case.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在变量部分，我们看到了=符号，在PHP中被称为赋值运算符。这个运算符正如其名，允许您给变量赋值。首先是比较运算符。比较运算符允许您在给定的条件情况下比较两个值。
- en: Inside of the set of comparison operators are the equal, identical, not equal,
    not identical, less than, and greater than operators.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在比较运算符集合中包括等于、相同、不等、不相同、小于和大于运算符。
- en: '| Usage | Name | Description |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 用法 | 名称 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `$a == $b` | Equal | TRUE if `$a` is equal to `$b.` |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `$a == $b` | 等于 | 如果`$a`等于`$b`，则为TRUE。 |'
- en: '| `$a === $b` | Identical | TRUE if $a is equal to `$b`, and they are of the
    same type. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `$a === $b` | 相同 | 如果`$a`等于`$b`，并且它们是相同类型，则为TRUE。 |'
- en: '| `$a!= $b` | Not Equal | TRUE if `$a` is not equal to `$b`. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `$a!= $b` | 不等 | 如果`$a`不等于`$b`，则为TRUE。 |'
- en: '| `$a!== $b` | Not Identical | TRUE if `$a` is not equal to `$b`, or they are
    not of the same type. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `$a!== $b` | 不相同 | 如果`$a`不等于`$b`，或它们不是相同类型，则为TRUE。 |'
- en: '| `$a < $b` | Less Than | TRUE if `$a` is strictly less than `$b`. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `$a < $b` | 小于 | 如果`$a`严格小于`$b`，则为TRUE。 |'
- en: '| `$a > $b` | Greater Than | TRUE if `$a` is strictly greater than `$b`. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `$a > $b` | 大于 | 如果`$a`严格大于`$b`，则为TRUE。 |'
- en: '| `$a <= $b` | Less Than or Equal To | TRUE if `$a` is less than or equal to
    `$b`. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `$a <= $b` | 小于或等于 | 如果`$a`小于或等于`$b`，则为TRUE。 |'
- en: '| `$a >= $b` | Greater Than or Equal To | TRUE if `$a` is greater than or equal
    to `$b`. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `$a >= $b` | 大于或等于 | 如果`$a`大于或等于`$b`，则为TRUE。 |'
- en: Logical Operators
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 逻辑运算符
- en: Up next are logical operators. Logical operators are used to check for multiple
    cases at one time. The set of logical operators gives you the `NOT`, `AND`, and
    `OR` operators.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是逻辑运算符。逻辑运算符用于一次检查多个情况。逻辑运算符集合包括`NOT`、`AND`和`OR`运算符。
- en: '| Usage | Name | Description |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 用法 | 名称 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `! $a` | NOT | TRUE if `$a` is not TRUE. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `! $a` | NOT | 如果`$a`不为TRUE，则为TRUE。 |'
- en: '| `$a && $b` | AND | TRUE if both `$a` and `$b` are TRUE. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| `$a && $b` | AND | 如果`$a`和`$b`都为TRUE，则为TRUE。 |'
- en: '| `$a &#124;&#124; $b` | OR | TRUE if either `$a` or `$b` is TRUE. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| `$a &#124;&#124; $b` | OR | 如果`$a`或`$b`中的一个为TRUE，则为TRUE。 |'
- en: Mathematical Operators
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数学运算符
- en: In your program, you will sometimes need to do a little math; this is where
    mathematical operators come in. They give you the ability to add, subtract, multiply,
    divide, and get the remainder of two divided numbers.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的程序中，有时需要进行一些数学运算；这就是数学运算符发挥作用的地方。它们使您能够对两个数进行加法、减法、乘法、除法，并得到两个数相除的余数。
- en: '| Usage | Name | Description |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 用法 | 名称 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `$a + $b` | Addition | Sum of `$a` and `$b` |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `$a + $b` | 加法 | `$a`和`$b`的和 |'
- en: '| `$a - $b` | Subtraction | Difference of `$a` and `$b` |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `$a - $b` | 减法 | `$a`和`$b`的差 |'
- en: '| `$a * $b` | Multiplication | Product of `$a` and `$b` |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `$a * $b` | 乘法 | `$a`和`$b`的乘积 |'
- en: '| `$a / $b` | Division | Quotient of `$a` and `$b` |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `$a / $b` | 除法 | `$a`和`$b`的商 |'
- en: '| `$a % $b` | Modulus | Remainder of `$a` divided by `$b` |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `$a % $b` | 模数 | `$a`除以`$b`的余数 |'
- en: Let's try to use these operators in PHP.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试在PHP中使用这些运算符。
- en: Combining Variables and Operators
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组合变量和运算符
- en: 'In this section, we will be extending our previous example to calculate the
    annual salary of our user. Here we go with the steps:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将扩展我们之前的示例，计算用户的年薪。以下是步骤：
- en: Open your code editor.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的代码编辑器。
- en: Create a new file and name it `operators.php.`
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件，并将其命名为`operators.php`。
- en: To get started, copy the contents from our `variables.php` document.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始，请复制我们的`variables.php`文档中的内容。
- en: 'Now, we will add an additional variable to the document, which will hold the
    number of weeks:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将在文档中添加一个额外的变量，用于保存周数：
- en: '[PRE8]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Next, we will use the multiplication operator to calculate our weekly pay and
    assign it to a new variable:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用乘法运算符来计算我们的周薪，并将其赋值给一个新变量：
- en: '[PRE9]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, with our weekly pay rate, we can calculate our salary:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，有了我们的周薪率，我们可以计算我们的工资：
- en: '[PRE10]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Our last step is to display our final calculations:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的最后一步是显示我们的最终计算：
- en: '[PRE11]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Your final document should look like the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 您的最终文档应如下所示：
- en: '[PRE12]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next, we''ll open our directory in our `Terminal` and run the following command:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将在我们的`终端`中打开我们的目录，并运行以下命令：
- en: '[PRE13]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We should now see our data being displayed:![Combining Variables and Operators](graphics/1_03.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们应该看到我们的数据被显示出来：![组合变量和运算符](graphics/1_03.jpg)
- en: Conditionals
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条件语句
- en: Now that we have a foundation for operators, we can start to use them in what
    are known as conditionals. Conditionals allow you to control the flow of your
    program, and they come in the form of `if` statements.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经掌握了运算符的基础，我们可以开始在所谓的条件语句中使用它们。条件语句允许您控制程序的流程，它们采用`if`语句的形式。
- en: 'A basic `if` statement is represented as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的`if`语句表示如下：
- en: '[PRE14]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Inside of the parentheses, you will hold the condition that is required to activate
    the code within the curly braces.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在括号内，您将保存激活大括号内代码所需的条件。
- en: 'Additionally, you can add an `else` statement, which will allow you to give
    alternate code to run if the condition isn''t met:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以添加一个`else`语句，这将允许您在条件不满足时运行替代代码：
- en: '[PRE15]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Conditionals](graphics/1_04.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![条件语句](graphics/1_04.jpg)'
- en: Note
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A helpful function to use with conditionals is the `empty` function. The `empty`
    function is used to check whether a variable is empty
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 与条件语句一起使用的一个有用的函数是`empty`函数。`empty`函数用于检查变量是否为空
- en: Working with Conditionals
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用条件语句
- en: In this section, we will be implementing conditionals where we will check the
    name of the animal and if it matches, we will be printing the sound of the particular
    animal.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将实现条件语句，我们将检查动物的名称，如果匹配，我们将打印特定动物的声音。
- en: Open your code editor.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的代码编辑器。
- en: Create a new file and name it `conditionals.php.`
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件并命名为`conditionals.php`。
- en: 'We are going to start by adding our open and close `php` tags:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从添加我们的开放和关闭`php`标签开始：
- en: '[PRE16]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Then, we''ll create a new function to hold our animal name:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将创建一个新函数来保存我们的动物名称：
- en: '[PRE17]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now, we can write our first conditional; here, we want to check whether the
    animal is a cat, and if it is, we will print meow to the user:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以编写我们的第一个条件语句；在这里，我们要检查动物是否是猫，如果是，我们将向用户打印meow：
- en: '[PRE18]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Save the file and open your working directory in the Terminal.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并在终端中打开您的工作目录。
- en: 'Run the following command, and see the results:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令，查看结果：
- en: '[PRE19]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![Working with Conditionals](graphics/1_05.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![使用条件语句](graphics/1_05.jpg)'
- en: 'Now, we''ll expand our conditional a bit further, to add other animal sounds
    and change our animal to a lion:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将进一步扩展我们的条件语句，添加其他动物的声音，并将我们的动物更改为狮子：
- en: '[PRE20]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now, let's save it again and run the command in the Terminal; you should get
    the following result:![Working with Conditionals](graphics/1_06.jpg)
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们再次保存并在终端中运行命令；您应该会得到以下结果：![使用条件语句](graphics/1_06.jpg)
- en: 'Activity: Building an Employee Salary Calculator'
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动：构建员工工资计算器
- en: Imagine that you are a PHP developer for a department store chain, and the store
    is preparing for its upcoming Black Friday sale. Staff who work during the sale
    hours will be given time and a half, as well as a 10% commission on all sales
    that they make. Additionally, if they make over $1,000 in gross sales, they will
    earn a $1,000 bonus. Management wants you to create a calculator that makes it
    easy for the staff members to calculate how much they earned.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，您是一家百货商店连锁店的PHP开发人员，该商店正在为即将到来的黑色星期五大甩卖做准备。在大甩卖期间工作的员工将获得加班工资，以及所有销售额的10%提成。此外，如果他们的总销售额超过1000美元，他们将获得1000美元的奖金。管理层希望您创建一个计算器，使员工能够轻松计算他们赚了多少钱。
- en: The aim of this activity is to help you understand variables and conditionals.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这项活动的目的是帮助您了解变量和条件语句。
- en: 'Follow these steps:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作：
- en: Create a new directory and name it `salary_calculator`.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新目录并命名为`salary_calculator`。
- en: Within the new directory, create an `index.php` file.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新目录中创建一个`index.php`文件。
- en: 'Define the placeholder variables:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义占位符变量：
- en: '[PRE21]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Our next step will be to define our calculations and assign the outcomes to
    their respective variables:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的下一步将是定义我们的计算并将结果分配给它们各自的变量：
- en: '[PRE22]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Next, we will need to check the gross sales variable to see if the staff member
    has made over $1,000, to be awarded with a bonus:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要检查总销售额变量，看看员工是否超过了1000美元，以获得奖金：
- en: '[PRE23]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now that we have the default rates and the calculators, we can display the
    results to our user:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了默认费率和计算器，我们可以向用户显示结果：
- en: '[PRE24]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: All that a staff member would have to do now is change the value of their hourly
    rate and gross sales and run the program to get their total pay amount.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，员工只需更改其小时工资和总销售额的值，并运行程序以获取其总工资金额。
- en: Summary
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We have now reached the end of this chapter. In this chapter, we began with
    the PHP syntax. We then moved on to variables and the different operators that
    are used in PHP. Finally, we saw how to implement conditionals and control the
    execution flow.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经到达了本章的结尾。在本章中，我们从PHP语法开始。然后，我们转向变量和在PHP中使用的不同运算符。最后，我们看到了如何实现条件语句并控制执行流程。
- en: You should now have a clear understanding of variables, data types, and conditionals,
    as well as how they are used together. In the next chapter, you will learn about
    how arrays and loops are implemented in PHP.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该清楚地了解了变量、数据类型和条件语句，以及它们如何一起使用。在下一章中，您将了解PHP中如何实现数组和循环。
