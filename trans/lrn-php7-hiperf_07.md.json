["```php\n    class Foo\n    {\n      \u2026\n      \u2026\n      \u2026\n    }\n    ```", "```php\n    public function phpBook($arg1, $arg2, $arg3)\n    {\n      \u2026\n      \u2026\n      \u2026\n    }\n    ```", "```php\n    namespace Packt\\Videos;\n\n    use Packt\\Books;\n    use Packt\\Presentations;\n\n    class PacktClass extends VideosClass implements BaseClass\n    {\n      \u2026\n      \u2026\n      \u2026\n    }\n    ```", "```php\n    class PacktClass\n    {\n      public $books;\n      private $electronicBooks;\n      \u2026\n      \u2026\n      \u2026\n    }\n    ```", "```php\n    abstract class PacktClass\n    {\n      final public static function favoriteBooks()\n      {\n        \u2026\n        \u2026\n        \u2026\n      }\n    }\n    ```", "```php\n    if ($book == \"PHP 7\") {\n      \u2026\n      \u2026\n      \u2026\n    } else {\n      \u2026\n      \u2026\n      \u2026\n    }\n    ```", "```php\n    for ($h = 0; $h < 10; $h++) {\n      \u2026\n      \u2026\n      \u2026\n    }\n\n    foreach ($books as $key => $value) {\n      \u2026\n      \u2026\n      \u2026\n    }\n\n    while ($book) {\n      \u2026\n      \u2026\n      \u2026\n    }\n    ```", "```php\nclass Book \n{\n  public $title;\n  public function __construct($title)\n  {\n    $this->title = $title;\n}\n\n  public function getBook()\n  {\n    return $this->title;\n  }\n}\n```", "```php\n    include (__DIR__.'/../Book.php');\n\n    class BookTest extends PHPUnit_Framework_TestCase \n    {\n      public function testBookClass()\n      {\n        $expected = 'PHP 7';\n        $book = new Book('PHP 7');\n        $actual = $book->getBook();\n        $this->assertEquals($expected, $book);\n      }\n    }\n    ```", "```php\n    **php phpunit.phar tests/BookTest.php**\n\n    ```", "```php\n    public function testBookClass()\n    {\n      $book = new Book('PHP');\n      $title = $book->getBook();\n      $this->assertEquals('PHP 7', $book);\n    }\n    ```"]