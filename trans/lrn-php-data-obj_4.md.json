["```php\n$authors = array(\narray(\n'firstName' => 'Alexander',\n'lastName' => 'Dumas',\n'bio' => 'Alexandre Dumas was a French writer, best known for his\nnumerous historical novels of high adventure which have\nmade him one of the most widely read French authors in\nthe world.'),\narray(\n'firstName' => 'Ivan',\n'lastName' => 'Franko',\n'bio' => 'Ivan Franko was a Ukrainian poet, writer, social and\nliterary critic, and journalist. In addition to his own\nliterary work, he translated the works of William\nShakespeare, Lord Byron, Dante, Victor Hugo, Goethe and\nSchiller into the Ukrainian language.'));\n\n```", "```php\nforeach($authors as $author)\n{\n$conn->query(\n'INSERT INTO authors(firstName, lastName, bio) VALUES(' .\n$conn->quote($author['firstName']) .\n',' . $conn->quote($author['lastName']) .\n',' . $conn->quote($author['bio'])')' .\n);\n}\n\n```", "```php\n$stmt = $conn->prepare('INSERT INTO authors(firstName, lastName, bio)\nVALUES(?, ?, ?)');\nforeach($authors as $author)\n{\n$stmt->execute(\narray($author['firstName'], $author['lastName'],\n$author['bio']));\n}\n\n```", "```php\n$stmt = $conn->prepare(\n'INSERT INTO authors(firstName, lastName, bio) ' .\n'VALUES(:first, :last, :bio)');\nforeach($authors as $author)\n{\n$stmt->execute(\narray(\n':first' => $author['firstName'],\n':last' => $author['lastName'],\n':bio' => $author['bio'])\n);\n}\n\n```", "```php\nforeach($authors as $author)\n{\n$stmt->execute(\narray(\n':bio' => $author['bio'],\n':last' => $author['lastName'],\n':first' => $author['firstName'])\n);\n}\n\n```", "```php\n$stmt = $conn->prepare(\n'INSERT INTO authors(firstName, lastName, bio) VALUES(?, ?, ?)');\nforeach($authors as $author)\n{\n$stmt->execute(array_values($author));\n}\n\n```", "```php\n$stmt = $conn->prepare(\"SELECT * FROM authors WHERE lastName\nLIKE '%?%'\");\n$stmt->execute(array($_GET['name']));\n\n```", "```php\n$stmt = $conn->prepare(\"SELECT * FROM authors WHERE lastName\nLIKE ?\");\n$stmt->execute(array('%' . $_GET['name'] . '%'));\n\n```", "```php\n$stmt = $conn->prepare(\n'INSERT INTO authors(firstName, lastName, bio) VALUES(?, ?, ?)');\nforeach($authors as $author)\n{\n$stmt->bindValue(1, $author['firstName']);\n$stmt->bindValue(2, $author['lastName']);\n$stmt->bindValue(3, $author['bio']);\n$stmt->execute();\n}\n\n```", "```php\n$stmt = $conn->prepare(\n'INSERT INTO authors(firstName, lastName, bio) ' .\n'VALUES(:last, :first, :bio)');\nforeach($authors as $author)\n{\n$stmt->bindValue(':first', $author['firstName']);\n$stmt->bindValue(':last', $author['lastName']);\n$stmt->bindValue(':bio', $author['bio']);\n$stmt->execute();\n}\n\n```", "```php\n$stmt = $conn->prepare('SELECT firstName, lastName FROM authors');\n$stmt->execute();\n$stmt->bindColumn(1, $first);\n$stmt->bindColumn(2, $last);\nwhile($stmt->fetch(PDO::FETCH_BOUND))\n{\necho \"$last, $first <br>\";\n}\n\n```", "```php\nif(@$book['id']) {\n$sql = \"UPDATE books SET title=\" . $conn->quote($_POST['title']) .\n', author=' . $conn->quote($_POST['author']) .\n', isbn=' . $conn->quote($_POST['isbn']) .\n', publisher=' . $conn->quote($_POST['publisher']) .\n', year=' . $conn->quote($_POST['year']) .\n', summary=' . $conn->quote($_POST['summary']) .\n\" WHERE id=$book[id]\";\n}\nelse {\n$sql = \"INSERT INTO books(title, author, isbn, publisher, year,\nsummary) VALUES(\" . $conn->quote($_POST['title']) .\n', ' . $conn->quote($_POST['author']) .\n', ' . $conn->quote($_POST['isbn']) .\n', ' . $conn->quote($_POST['publisher']) .\n', ' . $conn->quote($_POST['year']) .\n', ' . $conn->quote($_POST['summary']) .\n')';\n}\n// Now we are updating the DB.\n// We wrap this into a try/catch block\n// as an exception can get thrown if\n// the ISBN is already in the table.\ntry\n{\n$conn->query($sql);\n// If we are here, then there is no error.\n// We can return back to books listing\nheader(\"Location: books.php\");\nexit;\n}\ncatch(PDOException $e)\n{\n$warnings[] = 'Duplicate ISBN entered. Please correct';\n}\n\n```", "```php\nif(@$book['id']) {\n$sql = \"UPDATE books SET title=?, author=?, isbn=?, publisher=?\nyear=?, summary=? WHERE id=$book[id]\";\n}\nelse {\n$sql = \"INSERT INTO books(title, author, isbn, publisher, year,\nsummary) VALUES(?, ?, ?, ?, ?, ?)\";\n}\n$stmt = $conn->prepare($sql);\n// Now we are updating the DB.\n// We wrap this into a try/catch block\n// as an exception can get thrown if\n// the ISBN is already in the table.\ntry\n{\n$stmt->execute(array($_POST['title'], $_POST['author'],\n$_POST['isbn'], $_POST['publisher'], $_POST['year'],\n$_POST['summary']));\n// If we are here, then there is no error.\n// We can return back to books listing.\nheader(\"Location: books.php\");\nexit;\n}\ncatch(PDOException $e)\n{\n$warnings[] = 'Duplicate ISBN entered. Please correct';\n}\n\n```", "```php\nif(@$author['id']) {\n$sql = \"UPDATE authors SET firstName=\" .\n$conn->quote($_POST['firstName']) .\n', lastName=' . $conn->quote($_POST['lastName']) .\n', bio=' . $conn->quote($_POST['bio']) .\n\" WHERE id=$author[id]\";\n}\nelse {\n$sql = \"INSERT INTO authors(firstName, lastName, bio) VALUES(\" .\n$conn->quote($_POST['firstName']) .\n', ' . $conn->quote($_POST['lastName']) .\n', ' . $conn->quote($_POST['bio']) .\n')';\n}\n$conn->query($sql);\nheader(\"Location: authors.php\");\nexit;\n\n```", "```php\nif(@$author['id']) {\n$sql = \"UPDATE authors SET firstName=?, lastName=?, bio=?\nWHERE id=$author[id]\";\n}\nelse {\n$sql = \"INSERT INTO authors(firstName, lastName, bio)\nVALUES(?, ?, ?)\";\n}\n$stmt = $conn->prepare($sql);\n$stmt->execute(array($_POST['firstName'], $_POST['lastName'],\n$_POST['bio']));\nheader(\"Location: authors.php\");\nexit;\n\n```", "```php\n$blob = fopen('/path/to/file.jpg', 'rb');\n$stmt = $conn->prepare(\"INSERT INTO images(data) VALUES(?)\");\n$stmt->bindParam(1, $blob, PDO::PARAM_LOB);\n$stmt->execute();\n\n```", "```php\n$id = (int)$_GET['id'];\n$stmt = $db->prepare(\"SELECT data FROM images WHERE id=$id\");\n$stmt->execute();\n$stmt->bindColumn(1, $blob, PDO::PARAM_LOB);\n$stmt->fetch(PDO::FETCH_BOUND);\n$data = stream_get_contents($blob);\n\n```", "```php\nmysql> alter table books add column coverMime varchar(20);\nQuery OK, 3 rows affected (0.02 sec)\nRecords: 3 Duplicates: 0 Warnings: 0\nmysql> alter table books add column coverImage blob(24000);\nQuery OK, 3 rows affected (0.02 sec)\nRecords: 3 Duplicates: 0 Warnings: 0\n\n```", "```php\n<?php\n/**\n* This page allows adding or editing a book\n* PDO Library Management example application\n* @author Dennis Popel\n*/\n// Don't forget the include\ninclude('common.inc.php');\n// See if we have the book ID passed in the request\n$id = (int)$_REQUEST['book'];\nif($id) {\n// we have the ID, get the book details from the table\n$q = $conn->query(\"SELECT * FROM books WHERE id=$id\");\n$book = $q->fetch(PDO::FETCH_ASSOC);\n$q->closeCursor();\n$q = null;\n}\nelse {\n// we are creating a new book\n$book = array();\n}\n// Now get the list of all authors' first and last names\n// we will need it to create the dropdown box for author\n$authors = array();\n$q = $conn->query(\"SELECT id, lastName, firstName FROM authors ORDER\nBY lastName, firstName\");\n$q->setFetchMode(PDO::FETCH_ASSOC);\nwhile($a = $q->fetch())\n{\n$authors[$a['id']] = \"$a[lastName], $a[firstName]\";\n}\n// Now see if the form was submitted\nif($_POST['submit']) {\n// Validate every field\n$warnings = array();\n// Title should be non-empty\nif(!$_POST['title']) {\n$warnings[] = 'Please enter book title';\n}\n// Author should be a key in the $authors array\nif(!array_key_exists($_POST['author'], $authors)) {\n$warnings[] = 'Please select author for the book';\n}\n// ISBN should be a 10-digit number\nif(!preg_match('~^\\d{10}$~', $_POST['isbn'])) {\n$warnings[] = 'ISBN should be 10 digits';\n}\n// Published should be non-empty\nif(!$_POST['publisher']) {\n$warnings[] = 'Please enter publisher';\n}\n// Year should be 4 digits\nif(!preg_match('~^\\d{4}$~', $_POST['year'])) {\n$warnings[] = 'Year should be 4 digits';\n}\n// Summary should be non-empty\nif(!$_POST['summary']) {\n$warnings[] = 'Please enter summary';\n}\n**// Now validate the file upload\n$uploadSuccess = false;\nif(is_uploaded_file($_FILES['cover']['tmp_name'])) {\n// See if the file is an image\nif(!preg_match('~image/.+~', $_FILES['cover']['type'])\n|| filesize($_FILES['cover']['tmp_name']) > 24000) {\n$warnings[] = 'Please upload an image file less than 24K\nin size';\n}\nelse {\n// Set a flag that upload is successful\n$uploadSuccess = true;\n}\n}**\n// If there are no errors, we can update the database\n// If there was book ID passed, update that book\nif(count($warnings) == 0) {\nif(@$book['id']) {\n$sql = \"UPDATE books SET title=?, author=?, isbn=?,\npublisher=?, year=?, summary=? WHERE\nid=$book[id]\";\n}\nelse {\n$sql = \"INSERT INTO books(title, author, isbn, publisher,\nyear, summary) VALUES(?, ?, ?, ?, ?, ?)\";\n}\n$stmt = $conn->prepare($sql);\n// Now we are updating the DB.\n// we wrap this into a try/catch block\n// as an exception can get thrown if\n// the ISBN is already in the table\ntry\n{\n$stmt->execute(array($_POST['title'], $_POST['author'],\n$_POST['isbn'], $_POST['publisher'], $_POST['year'],\n$_POST['summary']));\n// If we are here that means that no error\n**// Now we can update the cover columns\n// But first we have to get the ID of the newly inserted book\nif(!@$book['id']) {\n$book['id'] = $conn->lastInsertId();\n}\n// Now see if there was an successful upload and\n// update cover image\nif($uploadSuccess) {\n$stmt = $conn->prepare(\"UPDATE books SET coverMime=?,\ncoverImage=? WHERE id=$book[id]\");\n$cover = fopen($_FILES['cover']['tmp_name'], 'rb');\n$stmt->bindValue(1, $_FILES['cover']['type']);\n$stmt->bindParam(2, $cover, PDO::PARAM_LOB);\n$stmt->execute();\n}**\n// We can return back to books listing\nheader(\"Location: books.php\");\nexit;\n}\ncatch(PDOException $e)\n{\n$warnings[] = 'Duplicate ISBN entered. Please correct';\n}\n}\n}\nelse {\n// Form was not submitted.\n// populate the $_POST array with the book's details\n$_POST = $book;\n}\n// Display the header\nshowHeader('Edit Book');\n// If we have any warnings, display them now\nif(count($warnings)) {\necho \"<b>Please correct these errors:</b><br>\";\nforeach($warnings as $w)\n{\necho \"- \", htmlspecialchars($w), \"<br>\";\n}\n}\n// Now display the form\n?>\n**<form action=\"editBook.php\" method=\"post\"\nenctype=\"multipart/form-data\">**\n<table border=\"1\" cellpadding=\"3\">\n<tr>\n<td>Title</td>\n<td>\n<input type=\"text\" name=\"title\"\nvalue=\"<?=htmlspecialchars($_POST['title'])?>\">\n</td>\n</tr>\n<tr>\n<td>Author</td>\n<td>\n<select name=\"author\">\n<option value=\"\">Please select...</option>\n<?php foreach($authors as $id=>$author)\n{ ?>\n<option value=\"<?=$id?>\"\n<?= $id == $_POST['author'] ? 'selected' : ''?>>\n<?=htmlspecialchars($author)?>\n</option>\n<?php } ?>\n</select>\n</td>\n</tr>\n<tr>\n<td>ISBN</td>\n<td>\n<input type=\"text\" name=\"isbn\"\nvalue=\"<?=htmlspecialchars($_POST['isbn'])?>\">\n</td>\n</tr>\n<tr>\n<td>Publisher</td>\n<td>\n<input type=\"text\" name=\"publisher\"\nvalue=\"<?=htmlspecialchars($_POST['publisher'])?>\">\n</td>\n</tr>\n<tr>\n<td>Year</td>\n<td>\n<input type=\"text\" name=\"year\"\nvalue=\"<?=htmlspecialchars($_POST['year'])?>\">\n</td>\n</tr>\n<tr>\n<td>Summary</td>\n<td>\n<textareaname=\"summary\"><?=htmlspecialchars($_POST['summary'])?>\n</textarea>\n</td>\n</tr>\n**<tr>\n<td>Cover Image</td>\n<td><input type=\"file\" name=\"cover\"></td>\n</tr>\n<?php if(@$book['coverMime'])\n{ ?>\n<tr>\n<td>Current Cover</td>\n<td><img src=\"showCover.php?book=<?=$book['id']?>\"></td>\n</tr>\n<? } ?>**\n<tr>\n<td colspan=\"2\" align=\"center\">\n<input type=\"submit\" name=\"submit\" value=\"Save\">\n</td>\n</tr>\n</table>\n<?php if(@$book['id']) { ?>\n<input type=\"hidden\" name=\"book\" value=\"<?=$book['id']?>\">\n<?php } ?>\n</form>\n<?php\n// Display footer\nshowFooter();\n\n```", "```php\n<?php\n/**\n* This script will render a book's cover image\n* PDO Library Management example application\n* @author Dennis Popel\n*/\n// Don't forget the include\ninclude('common.inc.php');\n// See if we have the book ID passed in the request\n$id = (int)$_REQUEST['book'];\n$stmt = $conn->prepare(\"SELECT coverMime, coverImage FROM books\nWHERE id=$id\");\n$stmt->execute();\n$stmt->bindColumn(1, $mime);\n$stmt->bindColumn(2, $image, PDO::PARAM_LOB);\n$stmt->fetch(PDO::FETCH_BOUND);\nheader(\"Content-Type: $mime\");\necho $image;\n\n```", "```php\n<?php\n/**\n* This page lists all the books we have\n* PDO Library Management example application\n* @author Dennis Popel\n*/\n// Don't forget the include\ninclude('common.inc.php');\n// Display the header\nshowHeader('Books');\n// Issue the query\n$q = $conn->query(\"SELECT authors.id AS authorId, firstName,\nlastName, books.* FROM authors, books WHERE\nauthor=authors.id ORDER BY title\");\n$q->setFetchMode(PDO::FETCH_ASSOC);\n// now create the table\n?>\n<table width=\"100%\" border=\"1\" cellpadding=\"3\">\n<tr style=\"font-weight: bold\">\n<td>Cover</td>\n<td>Author and Title</td>\n<td>ISBN</td>\n<td>Publisher</td>\n<td>Year</td>\n<td>Summary</td>\n<td>Edit</td>\n</tr>\n<?php\n// Now iterate over every row and display it\nwhile($r = $q->fetch())\n{\n?>\n**<tr>\n<td>\n<?php if($r['coverMime']) { ?>\n<img src=\"showCover.php?book=<?=$r['id']?>\">\n<?php }\nelse\n{ ?>\nn/a\n<? } ?>\n</td>\n<td>\n<a href=\"author.php?id=<?=$r['authorId']?>\">\n<?=htmlspecialchars(\"$r[firstName] $r[lastName]\")?></a><br/>\n<b><?=htmlspecialchars($r['title'])?></b>\n</td>**\n<td><?=htmlspecialchars($r['isbn'])?></td>\n<td><?=htmlspecialchars($r['publisher'])?></td>\n<td><?=htmlspecialchars($r['year'])?></td>\n<td><?=htmlspecialchars($r['summary'])?></td>\n<td>\n<a href=\"editBook.php?book=<?=$r['id']?>\">Edit</a>\n</td>\n</tr>\n<?php\n}\n?>\n</table>\n<a href=\"editBook.php\">Add book...</a>\n<?php\n// Display footer\nshowFooter();\n\n```"]