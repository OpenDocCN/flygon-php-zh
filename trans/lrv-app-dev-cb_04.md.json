["```php\n    **php artisan migrate:install**\n\n    ```", "```php\n    **php artisan migrate:make create_shows_table**\n\n    ```", "```php\n    class CreateShowsTable extends Migration {\n\n        /**\n         * Make changes to the database.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('shows', function($table)\n            {\n                $table->increments('id');\n                $table->string('name', 140);\n                $table->integer('rating')->nullable();\n                $table->timestamps();\n            });\n        }\n\n        /**\n         * Revert the changes to the database.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::drop('shows');\n        }\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n    **php artisan migrate:make add_actor_to_shows_table**\n\n    ```", "```php\n    class AddActorToShowsTable extends Migration {\n\n        /**\n         * Make changes to the database.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::table('shows', function($table)\n            {\n                $table->string('actor')->nullable();\n            });\n        }\n\n        /**\n         * Revert the changes to the database.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::table('shows', function($table)\n            {\n                $table->drop_column('actor');\n            });\n        }\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n**php artisan migrate:make create_shows_table \u2013table=show \u2013create**\n\n```", "```php\n<?php\n\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateShowsTable extends Migration {\n\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('shows', function(Blueprint $table)\n        {\n            $table->increments('id');\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::drop('shows');\n    }\n\n}\n```", "```php\n    **php artisan migrate:make add_data_to_shows_table**\n\n    ```", "```php\n    class AddDataToShowsTable {\n\n        /**\n         * Make changes to the database.\n         *\n         * @return void\n         */\n\n    public function up()\n        {\n            $sql = 'INSERT INTO shows (name, rating, actor)\n                VALUES (?, ?, ?)';\n            $data1 = array('Doctor Who', '9', 'Matt Smith');\n            $data2 = array('Arrested Development', '10', 'Jason\n                Bateman');\n            $data3 = array('Joanie Loves Chachi', '3', 'Scott\n                Baio');\n            DB::insert($sql, $data1);\n            DB::insert($sql, $data2);\n            DB::insert($sql, $data3);\n        }\n\n        /**\n         * Revert the changes to the database.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            $sql = \"DELETE FROM shows WHERE name = ?\";\n            DB::delete($sql, array('Doctor Who'));\n            DB::delete($sql, array('Arrested Development'));\n            DB::delete($sql, array('Joanie Loves Chachi'));\n        }\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n    class Show {\n        public function allShows($order_by = FALSE,$direction = 'ASC')\n        {\n            $sql = 'SELECT * FROM shows';\n            $sql .= $order_by ? ' ORDER BY ' . $order_by. ' ' . $direction : '';\n            return DB::select($sql);\n        }\n    }\n    ```", "```php\n    Route::get('shows', function()\n    {\n        $shows = new Show();\n        $shows_by_rating = $shows->allShows('rating', 'DESC');\n        dd($shows_by_rating);\n    }); \n    ```", "```php\n    **php artisan migrate:make add_data_to_shows_table**\n\n    ```", "```php\n    class AddDataToShowsTable {\n\n        /**\n         * Make changes to the database.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            $data1 = array('name' => 'Doctor Who',\n                'rating' => 9, 'actor' => 'Matt Smith');\n            $data2 = array('name' => 'Arrested Development',\n                'rating' => 10, 'actor' => 'Jason Bateman');\n            $data3 = array('name' => 'Joanie Loves Chachi',\n                'rating' => 3, 'actor' => 'Scott Baio');\n            DB::table('shows')->insert(array($data1, $data2,\n                $data3));\n        }\n\n        /**\n         * Revert the changes to the database.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            DB::table('shows')\n                ->where('name', 'Doctor Who')\n                ->orWhere('name', 'Arrested Development')\n                ->orWhere('name', 'Joanie Loves Chachi')\n                ->delete();\n        }\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n    class Show {\n        public function allShows($order_by = FALSE,$direction = 'ASC')\n        {\n            $shows = DB::table('shows');\n            return $order_by ? $shows->order_by($order_by,$direction)->get() : $shows->get();\n        }\n    }\n    ```", "```php\n    Route::get('shows', function()\n    {\n        $shows = new Show();\n        $shows_by_rating = $shows->allShows('rating', 'DESC');\n        dd($shows_by_rating);\n    }); \n    ```", "```php\n    **php artisan migrate:make add_data_to_shows_table**\n\n    ```", "```php\n    class AddDataToShowsTable {\n\n        /**\n         * Make changes to the database.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            $data1 = array('name' => 'Doctor Who',\n                'rating' => 9, 'actor' => 'Matt Smith');\n            $data2 = array('name' => 'Arrested Development',\n                'rating' => 10, 'actor' => 'Jason Bateman');\n            $data3 = array('name' => 'Joanie Loves Chachi',\n                'rating' => 3, 'actor' => 'Scott Baio');\n            DB::table('shows')->insert(array($data1, $data2,\n                $data3));\n        }\n\n        /**\n         * Revert the changes to the database.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            DB::table('shows')\n                ->where('name', 'Doctor Who')\n                ->orWhere('name', 'Arrested Development')\n                ->orWhere('name', 'Joanie Loves Chachi')\n                ->delete();\n        }\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n    class Show extends Eloquent{\n        public function getTopShows() {\n            return $this->where('rating', '>', 5)->orderBy('rating', 'DESC')->get();\n        }\n    }\n    ```", "```php\n    Route::get('shows', function()\n    {\n        $shows = Show::all();\n        echo '<h1>All Shows</h1>';\n        foreach ($shows as $show)\n        {\n            echo $show->name . ' - ' . $show->rating . ' - '\n    \t\t    . $show->actor . '<br>';\n        }\n\n        $show_object = new Show();\n        $top_shows = $show_object->getTopShows();\n        echo '<h1>Top Shows</h1>';\n        foreach ($top_shows as $top_show)\n        {\n            echo $top_show->name . ' - ' . $top_show->rating\n    \t\t     . ' - '. $top_show->actor . '<br>';\n        }\n    });\n    ```", "```php\n    **php artisan migrate:make create_users_table**\n\n    ```", "```php\n    use Illuminate\\Database\\Migrations\\Migration;\n\n    class CreateUsersTable extends Migration {\n\n        /**\n         * Make changes to the database.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('users', function($table)\n            {\n                $table->increments('id');\n                $table->string('username', 100);\n                $table->string('email', 100);\n                $table->timestamps();\n            });\n        }\n\n        /**\n         * Revert the changes to the database.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::drop('users');\n        }\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n    <?php\n    class User extends Eloquent {\n\n        protected $table = 'users';\n\n        private $rules = array(\n            'email' => 'required|email',\n            'username' => 'required|min:6'\n        );\n\n        public function validate($input) {\n            return Validator::make($input, $this->rules);\n        }\n    }\n    ```", "```php\n    $user = new User();\n        $input = array();\n\n        $input['email'] = 'racerx@example.com';\n        $input['username'] = 'Short';\n        $valid = $user->validate($input);\n        if ($valid->passes()) {\n            echo 'Everything is Valid!';\n            // Save to the database\n        } else {\n            var_dump($valid->messages());\n        }\n    ```", "```php\n    **php artisan migrate:make create_show_user**\n\n    ```", "```php\n    use Illuminate\\Database\\Migrations\\Migration;\n\n    class CreateShowUser extends Migration {\n\n        /**\n         * Make changes to the database.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('show_user', function($table)\n            {\n                $table->increments('id');\n                $table->integer('user_id');\n                $table->integer('show_id');\n                $table->timestamps();\n            });\n        }\n\n        /**\n         * Revert the changes to the database.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::drop('show_user');\n        }\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n    class User extends Eloquent {\n        public function shows()\n        {\n            return $this->belongsToMany ('Show');\n        }\n    }\n    ```", "```php\n    class Show extends Eloquent {\n        public function users()\n        {\n            return $this->belongsToMany ('User');\n        }\n    }\n    ```", "```php\n    Route::get('add-show', function()\n    {\n        // Create a new User\n        $user = new User();\n        $user->username = 'John Doe';\n        $user->email = 'johndoe@example.com';\n        $user->save();\n\n        // Attach two Shows\n        $user->shows()->attach(1);\n        $user->shows()->attach(3);\n\n        foreach($user->shows()->get() as $show) {\n            var_dump($show->name);\n        }\n    });\n    ```", "```php\n    Route::get('view-show', function()\n    {\n        $show = Show::find(1)->users;\n        dd($show);\n    });\n    ```", "```php\n    <?php\n\n    class UsersController extends BaseController {\n\n        public function getIndex()\n        {\n            $users = User::all();\n            return View::make('users.index')->with('users',$users);\n        }\n\n        public function getCreate()\n        {\n            return View::make('users.create');\n        }\n\n        public function postCreate()\n        {\n            $user = new User();\n            $user->username = Input::get('username');\n            $user->email = Input::get('email');\n            $user->save();\n            return Redirect::to('users');\n        }\n\n        public function getRecord($id)\n        {\n            $user = User::find($id);\n            return View::make('users.record')->with('user',$user);\n        }\n\n        public function putRecord()\n        {\n            $user = User::find(Input::get('user_id'));\n            $user->username = Input::get('username');\n            $user->email = Input::get('email');\n            $user->save();\n            return Redirect::to('users');\n        }\n\n        public function deleteRecord()\n        {\n            $user = User::find(Input::get('user_id'))->delete();\n            return Redirect::to('users');\n        }\n    }\n    ```", "```php\n    **Route::controller('users', 'UsersController');**\n\n    ```", "```php\n    <style>\n    table, th, td {\n        border:1px solid #444\n    }\n    </style>\n    <table>\n        <thead>\n            <tr>\n                <th>User ID</th>\n                <th>User Name</th>\n                <th>Email</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            <?php foreach($users as $user): ?>\n                <tr>\n                    <td><?php echo $user->id ?></td>\n                    <td><?php echo $user->username ?></td>\n                    <td><?php echo $user->email ?></td>\n                    <td>\n                        <a href=\"users/record/<?php echo $user->id ?>\">Edit</a> \n                        <form action=\"users/record\"method=\"post\">\n                            <input type=\"hidden\" name=\"_method\"value=\"DELETE\">\n                            <input type=\"hidden\" name=\"user_id\"value=\"<?php echo $user->id?>\">\n                            <input type=\"submit\"value=\"Delete\">\n                        </form>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </tbody>\n    </table>\n    <a href=\"users/create\">Add New User</a>\n    ```", "```php\n    <form action=\"create\" method=\"post\">\n        Username:<br>\n        <input name=\"username\"><br>\n        Email<br>\n        <input name=\"email\"><br>\n        <input type=\"submit\">\n    </form>\n    ```", "```php\n    <form action=\"\" method=\"post\">\n        <input type=\"hidden\" name=\"_method\" value=\"put\">\n        <input type=\"hidden\" name=\"user_id\" value=\"<?php echo$user->id ?>\">\n        Username:<br>\n        <input name=\"username\" value=\"<?php echo $user->username ?>\"><br>\n        Email<br>\n        <input name=\"email\" value=\"<?php echo $user->email?>\"><br>\n        <input type=\"submit\">\n    </form>\n    ```", "```php\n    Spock,Star Trek\n    Kirk,Star Trek\n    Luke,Star Wars\n    Lando,Star Wars\n    Deckard,Blade Runner\n    Dave,2001\n    ```", "```php\n    **php artisan migrate:make create_scifi_table**\n\n    ```", "```php\n    use Illuminate\\Database\\Migrations\\Migration;\n\n    class CreateScifiTable extends Migration {\n\n        /**\n         * Make changes to the database.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('scifi', function($table)\n            {\n                $table->increments('id');\n                $table->string('character');\n                $table->string('movie');\n                $table->timestamps();\n            });\n        }\n\n        /**\n         * Revert the changes to the database.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::drop('scifi');\n        }\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n    class Scifi extends Eloquent {\n        protected $table = 'scifi';\n    }\n    ```", "```php\n    Route::get('csv', function()\n    {\n        if (($handle = fopen(public_path() .. '/scifi.csv','r')) !== FALSE)\n        {\n            while (($data = fgetcsv($handle, 1000, ',')) !==FALSE)\n            {\n                    $scifi = new Scifi();\n                    $scifi->character = $data[0];\n                    $scifi->movie = $data[1];\n                    $scifi->save();\n            }\n            fclose($handle);\n        }\n\n        return Scifi::all();\n    });\n    ```", "```php\n    Route::get('rss', function()\n    {\n        $source = 'http://rss.cnn.com/rss/cnn_topstories.rss';\n\n        $headers = get_headers($source);\n        $response = substr($headers[0], 9, 3);\n        if ($response == '404')\n        {\n            return 'Invalid Source';\n        }\n\n        $data = simplexml_load_string(file_get_contents($source));\n\n        if (count($data) == 0)\n        {\n            return 'No Posts';\n        }\n            $posts = '';\n            foreach($data->channel->item as $item)\n            {\n                $posts .= '<h1><a href=\"' . $item->link . '\">'. $item->title . '</a></h1>';\n                $posts .= '<h4>' . $item->pubDate . '</h4>';\n                $posts .= '<p>' . $item->description . '</p>';\n                $posts .= '<hr><hr>';\n            }\n            return $posts;\n    });\n    ```", "```php\n    **php artisan migrate:make create_odd_table --table=odd --create**\n\n    ```", "```php\n    **php artisan migrate:make add_data_to_odd_table**\n\n    ```", "```php\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n\n    class CreateOddTable extends Migration {\n\n        /**\n         * Run the migrations.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('odd', function(Blueprint $table)\n            {\n                $table->increments('MyIDcolumn');\n                $table->string('MyUsernameGoesHere');\n                $table->string('ThisIsAnEmail');\n                $table->timestamps();\n            });\n        }\n\n        /**\n         * Reverse the migrations.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::drop('odd');\n        }\n    }\n    ```", "```php\n    use Illuminate\\Database\\Migrations\\Migration;\n\n    class AddDataToOddTable extends Migration {\n\n        /**\n         * Make changes to the database.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            $data1 = array('MyUsernameGoesHere' => 'John Doe','ThisIsAnEmail' => 'johndoe@example.com');\n            $data2 = array('MyUsernameGoesHere' => 'Jane Doe','ThisIsAnEmail' => 'janedoe@example.com');\n            DB::table('odd')->insert(array($data1, $data2));\n        }\n\n        /**\n         * Revert the changes to the database.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            DB::table('odd')->delete();\n        }\n    }\n    ```", "```php\n    **php artisan migrate**\n\n    ```", "```php\n    class Odd extends Eloquent {\n        protected $table = 'odd';\n\n        public function getIdAttribute($value) {\n            return $this->attributes['MyIDcolumn'];\n        }\n\n        public function getUsernameAttribute($value) {\n            return $this->attributes['MyUsernameGoesHere'];\n        }\n\n        public function getEmailAttribute($value) {\n            return $this->attributes['ThisIsAnEmail'];\n        }\n    }\n    ```", "```php\n    Route::get('odd', function()\n    {\n        $odds = Odd::all();\n        foreach($odds as $odd) \n        {\n            echo $odd->MyIDcolumn . ' - ' . $odd->MyUsernameGoesHere . ' - ' . $odd->ThisIsAnEmail . '<br>';\n        }\n    });\n    ```", "```php\n    Route::get('notodd', function()\n    {\n        $odds = Odd::all();\n        foreach($odds as $odd) \n        {\n            echo $odd->id . ' - ' . $odd->username . ' - '. $odd->email . '<br>';\n        }\n    });\n    ```", "```php\n    \"autoload\": {\n        \"classmap\": [\n            \"app/commands\",\n            \"app/controllers\",\n            \"app/models\",\n            \"app/database/migrations\",\n            \"app/database/seeds\",\n            \"app/tests/TestCase.php\",\n            \"app/libraries\"\n        ],\n    }\n    ```", "```php\n    **php composer.phar dump-autoload**\n\n    ```", "```php\n    $db_setup = Config::get('database.connections.mysql');\n    R::setup('mysql:host=' . $db_setup['host'] . ';dbname='. $db_setup['database'], $db_setup['username'],$db_setup['password']);\n    ```", "```php\n    Route::get('orm', function() \n    {\n        $superhero = R::dispense('superheroes');\n        $superhero->name = 'Spiderman';\n        $superhero->city = 'New York';\n        $superhero->age = 24;\n\n        $id1 = R::store($superhero);\n\n        $superhero = R::dispense('superheroes');\n        $superhero->name = 'Superman';\n        $superhero->city = 'Metropolis';\n        $superhero->age = 50;\n\n        $id2 = R::store($superhero);\n\n        $superhero = R::dispense('superheroes');\n        $superhero->name = 'Batman';\n        $superhero->city = 'Gotham';\n        $superhero->age = 36;\n\n        $id3 = R::store($superhero);\n\n        $heroes = R::batch('superheroes',array($id1, $id2,$id3));\n\n        foreach ($heroes as $hero)\n        {\n            echo $hero->name . ' - ' .  $hero->city . ' - '. $hero->age . '<br>';\n        }\n    });\n    ```"]