["```php\n$contents = file_get_contents(FILE_TO_SEARCH);\nforeach ($config['removed'] as $key => $value)\n\u00a0\u00a0\u00a0\u00a0if (str_pos($contents, $key) !== FALSE)\u00a0\u00a0echo $value;\n```", "```php\n// /repo/ch11/bc_break_scanner.config.php\nuse Migration\\BreakScan;\nreturn [\n\u00a0\u00a0\u00a0\u00a0// not all keys are shown\n\u00a0\u00a0\u00a0\u00a0BreakScan::KEY_REMOVED => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'__autoload' => 'spl_autoload_register(callable)',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'each' => 'Use \"foreach()\" or ArrayIterator',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'fgetss' => 'strip_tags(fgets($fh))',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'png2wbmp' => 'imagebmp',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// not all entries are shown\n\u00a0\u00a0\u00a0\u00a0],\n];\n```", "```php\n// /repo/ch11/bc_break_scanner.config.php\nreturn [\u00a0\u00a0\u00a0\u00a0// not all keys are shown\n\u00a0\u00a0\u00a0\u00a0BreakScan::KEY_RESOURCE => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'curl_init',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'xml_parser_create',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// not all entries are shown\n\u00a0\u00a0\u00a0\u00a0],\n];\n```", "```php\n// /repo/ch11/bc_break_scanner.config.php\nuse Php8\\Migration\\BreakScan;\nreturn [\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0BreakScan::KEY_MAGIC => [\n\u00a0\u00a0\u00a0\u00a0'__call' => [ 'signature' => \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'__call(string $name, array $arguments): mixed',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'regex' => '/__call\\s*\\((string\\s)?'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0. '\\$.+?(array\\s)?\\$.+?\\)(\\s*:\\s*mixed)?/',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'types' => ['string', 'array', 'mixed']],\n\u00a0\u00a0\u00a0\u00a0// other configuration keys not shown\n\u00a0\u00a0\u00a0\u00a0'__wakeup' => ['signature' => '__wakeup(): void',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'regex' => '/__wakeup\\s*\\(\\)(\\s*:\\s*void)?/',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'types' => ['void']],\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0\u00a0\u00a0// other configuration keys not shown\n];\n```", "```php\n// /repo/ch11/bc_break_scanner.config.php\nreturn [\n\u00a0\u00a0\u00a0\u00a0// not all keys are shown\n\u00a0\u00a0\u00a0BreakScan::KEY_CALLBACK => [\n\u00a0\u00a0\u00a0\u00a0'ERR_CONST_EXIT' => [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'callback' => function ($contents) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$ptn = '/__construct.*?\\{.*?(die|exit).*?}/im';\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return (preg_match($ptn, $contents)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&& strpos('__destruct', $contents)); },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'msg' => 'WARNING: __destruct() might not get '\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0. 'called if \"die()\" or \"exit()\" used '\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0. 'in __construct()'],\n\u00a0\u00a0\u00a0\u00a0], // etc.\n\u00a0\u00a0\u00a0\u00a0// not all entries are shown\n];\n```", "```php\n$contents = file_get_contents(FILE_TO_SEARCH);\n$className = 'SOME_CLASS';\nforeach ($config['callbacks'] as $key => $value)\n\u00a0\u00a0\u00a0\u00a0if ($value['callback']($contents)) echo $value['msg'];\n```", "```php\n    // /repo/src/Php8/Migration/BreakScan.php\n    declare(strict_types=1);\n    namespace Php8\\Migration;\n    use InvalidArgumentException;\n    use UnexpectedValueException;\n    class BreakScan {\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0const ERR_MAGIC_SIGNATURE = 'WARNING: magic method '\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0. 'signature for %s does not appear to match '\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0. 'required signature';\n    \u00a0\u00a0\u00a0\u00a0const ERR_NAMESPACE = 'WARNING: namespaces can no '\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0. 'longer contain spaces in PHP 8.';\n    \u00a0\u00a0\u00a0\u00a0const ERR_REMOVED = 'WARNING: the following function'\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0. 'has been removed: %s.\u00a0\u00a0Use this instead: %s';\n    \u00a0\u00a0\u00a0\u00a0// not all constants are shown\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0const KEY_REMOVED\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= 'removed';\n    \u00a0\u00a0\u00a0\u00a0const KEY_CALLBACK\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= 'callbacks';\n    \u00a0\u00a0\u00a0\u00a0const KEY_MAGIC\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= 'magic';\n    \u00a0\u00a0\u00a0\u00a0const KEY_RESOURCE\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0= 'resource';\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0public $config = [];\n    \u00a0\u00a0\u00a0\u00a0public $contents = '';\n    \u00a0\u00a0\u00a0\u00a0public $messages = [];\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0public function __construct(array $config) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->config = $config;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$required = [self::KEY_CALLBACK,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::KEY_REMOVED,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::KEY_MAGIC, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::KEY_RESOURCE];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreach ($required as $key) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!isset($this->config[$key])) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$message = sprintf(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::ERR_MISSING_KEY, $key);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw new Exception($message);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0public function getFileContents(string $fn) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!file_exists($fn)) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::$className = '';\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->contents\u00a0\u00a0= '';\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw new\u00a0\u00a0Exception(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sprintf(self::ERR_FILE_NOT_FOUND, $fn));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->contents = file_get_contents($fn);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->contents = str_replace([\"\\r\",\"\\n\"],\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0['', ' '], $this->contents);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return $this->contents;\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0public static function getKeyValue(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string $contents, string $key, string $end) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$pos = strpos($contents, $key);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$end = strpos($contents, $end, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$pos + strlen($key) + 1);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return trim(substr($contents, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$pos + strlen($key), \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$end - $pos - strlen($key)));\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0public function clearMessages() : void {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->messages = [];\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0public function getMessages(bool $clear = FALSE) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$messages = $this->messages;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($clear) $this->clearMessages();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return $messages;\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0public function runAllScans() : int {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$found = 0;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$found += $this->scanRemovedFunctions();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$found += $this->scanIsResource();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$found += $this->scanMagicSignatures();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$found += $this->scanFromCallbacks();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return $found;\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```php\n    public function scanRemovedFunctions() : int {\n    \u00a0\u00a0\u00a0\u00a0$found = 0;\n    \u00a0\u00a0\u00a0\u00a0$config = $this->config[self::KEY_REMOVED];\n    \u00a0\u00a0\u00a0\u00a0foreach ($config as $func => $replace) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$search1 = ' ' . $func . '(';\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$search2 = ' ' . $func . ' (';\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0strpos($this->contents, $search1) !== FALSE\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|| \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0strpos($this->contents, $search2) !== FALSE)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->messages[] = sprintf(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::ERR_REMOVED, $func, $replace);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$found++;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if ($found === 0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->messages[] = sprintf(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::OK_PASSED, __FUNCTION__);\n    \u00a0\u00a0\u00a0\u00a0return $found;\n    }\n    ```", "```php\n    public function scanIsResource() : int {\n    \u00a0\u00a0\u00a0\u00a0$found = 0;\n    \u00a0\u00a0\u00a0\u00a0$search = 'is_resource';\n    \u00a0\u00a0\u00a0\u00a0if (strpos($this->contents, $search) === FALSE)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return 0;\n    \u00a0\u00a0\u00a0\u00a0$config = $this->config[self::KEY_RESOURCE];\n    \u00a0\u00a0\u00a0\u00a0foreach ($config as $func) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ((strpos($this->contents, $func) !== FALSE)){\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->messages[] =\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sprintf(self::ERR_IS_RESOURCE, $func);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$found++;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0if ($found === 0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->messages[] = \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sprintf(self::OK_PASSED, __FUNCTION__);\n    \u00a0\u00a0\u00a0\u00a0return $found;\n    }\n    ```", "```php\n    public function scanFromCallbacks() {\n    \u00a0\u00a0\u00a0\u00a0$found = 0;\n    \u00a0\u00a0\u00a0\u00a0$list = array_keys($this-config[self::KEY_CALLBACK]);\n    \u00a0\u00a0\u00a0\u00a0foreach ($list as $key) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$config = $this->config[self::KEY_CALLBACK][$key] \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0?? NULL;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (empty($config['callback']) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|| !is_callable($config['callback'])) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$message = sprintf(self::ERR_INVALID_KEY,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::KEY_CALLBACK . ' => ' \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0. $key . ' => callback');\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw new Exception($message);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($config['callback']($this->contents)) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->messages[] = $config['msg'];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$found++;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0return $found;\n    }\n    ```", "```php\n    public function scanMagicSignatures() : int {\n    \u00a0\u00a0\u00a0\u00a0$found\u00a0\u00a0\u00a0= 0;\n    \u00a0\u00a0\u00a0\u00a0$matches = [];\n    \u00a0\u00a0\u00a0\u00a0$result\u00a0\u00a0= preg_match_all(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'/function __(.+?)\\b/', \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->contents, $matches);\n    ```", "```php\n    \u00a0\u00a0\u00a0if (!empty($matches[1])) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$config = $this->config[self::KEY_MAGIC] ?? NULL;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreach ($matches[1] as $name) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$key = '__' . $name;\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (empty($config[$key])) continue;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($pos = strpos($this->contents, $key)) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$end = strpos($this->contents, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'{', $pos);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$sub = (empty($sub) || !is_string($sub))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0? '' : trim($sub);\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$ptn = $config[$key]['regex'] ?? '/.*/';\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!preg_match($ptn, $sub)) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->messages[] = sprintf(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::ERR_MAGIC_SIGNATURE, $key);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->messages[] = \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$config[$key]['signature'] \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0?? 'Check signature'\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$found++;\n    \u00a0\u00a0\u00a0\u00a0}}}}\n    \u00a0\u00a0\u00a0\u00a0if ($found === 0)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$this->messages[] = sprintf(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self::OK_PASSED, __FUNCTION__);\n    \u00a0\u00a0\u00a0\u00a0\u00a0return $found;\n    }\n    ```", "```php\n    // /repo/ch11/php7_bc_break_scanner.php\n    define('DEMO_PATH', __DIR__);\n    require __DIR__ . '/../src/Server/Autoload/Loader.php';\n    $loader = new \\Server\\Autoload\\Loader();\n    use Php8\\Migration\\BreakScan;\n    // some code not shown\n    $path = $_GET['path'] ?? $argv[1] ?? NULL;\n    $show = $_GET['show'] ?? $argv[2] ?? 0;\n    $show = (int) $show;\n    $csv\u00a0\u00a0= $_GET['csv']\u00a0\u00a0?? $argv[3] ?? '';\n    $csv\u00a0\u00a0= basename($csv);\n    ```", "```php\n    if (empty($path)) {\n    \u00a0\u00a0\u00a0\u00a0if (!empty($_SERVER['REQUEST_URI']))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo '<pre>' . $usage . '</pre>';\n    \u00a0\u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo $usage;\n    \u00a0\u00a0\u00a0\u00a0exit;\n    }\n    ```", "```php\n    $config\u00a0\u00a0= include __DIR__ \n    . '/php8_bc_break_scanner_config.php';\n    $scanner = new BreakScan($config);\n    ```", "```php\n    $iter = new RecursiveIteratorIterator(\n    \u00a0\u00a0\u00a0\u00a0new RecursiveDirectoryIterator($path));\n    $filter = new class ($iter) extends FilterIterator {\n    \u00a0\u00a0\u00a0\u00a0public function accept() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$obj = $this->current();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return ($obj->getExtension() === 'php');\n    \u00a0\u00a0\u00a0\u00a0}\n    };\n    ```", "```php\n    if ($csv) {\n    \u00a0\u00a0\u00a0\u00a0$csv_file = new SplFileObject($csv, 'w');\n    \u00a0\u00a0\u00a0\u00a0$csv_file->fputcsv(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0['Directory','File','OK','Messages']);\n    }\n    $write = function ($dir, $fn, $found, $messages) \n    \u00a0\u00a0\u00a0\u00a0use ($csv_file) {\n    \u00a0\u00a0\u00a0\u00a0$ok = ($found === 0) ? 1 : 0;\n    \u00a0\u00a0\u00a0\u00a0$csv_file->fputcsv([$dir, $fn, $ok, $messages]);\n    \u00a0\u00a0\u00a0\u00a0return TRUE;\n    };\n    ```", "```php\n    $dir\u00a0\u00a0\u00a0= '';\n    $total = 0;\n    foreach ($filter as $name => $obj) {\n    \u00a0\u00a0\u00a0\u00a0$found = 0;\n    \u00a0\u00a0\u00a0\u00a0$scanner->clearMessages();\n    \u00a0\u00a0\u00a0\u00a0if (dirname($name) !== $dir) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$dir = dirname($name);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo \"Processing Directory: $name\\n\";\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0if ($obj->isDir()) continue;\n    \u00a0\u00a0\u00a0\u00a0$fn = basename($name);\n    \u00a0\u00a0\u00a0\u00a0$scanner->getFileContents($name);\n    \u00a0\u00a0\u00a0\u00a0$found\u00a0\u00a0\u00a0\u00a0= $scanner->runAllScans();\n    \u00a0\u00a0\u00a0\u00a0$messages = implode(\"\\n\", $scanner->getMessages());\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0switch ($show) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case 2 :\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo \"Processing: $fn\\n\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo \"$messages\\n\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($csv) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$write($dir, $fn, $found, $messages);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case 1 :\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!$found) break;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo \"Processing: $fn\\n\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo BreakScan::WARN_BC_BREAKS . \"\\n\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(BreakScan::TOTAL_BREAKS, $found);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo \"$messages\\n\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($csv) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$write($dir, $fn, $found, $messages);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case 0 :\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default :\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!$found) break;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo \"Processing: $fn\\n\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo BreakScan::WARN_BC_BREAKS . \"\\n\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if ($csv) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$write($dir, $fn, $found, $messages);\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```php\n    \u00a0\u00a0\u00a0\u00a0$total += $found;\n    }\n    echo \"\\n\" . str_repeat('-', 40) . \"\\n\";\n    echo \"\\nTotal number of possible BC breaks: $total\\n\";\n    ```", "```php\nroot@php8_tips_php7 [ /repo ]# \nphp ch11/php7_bc_break_scanner.php \\\n\u00a0\u00a0\u00a0\u00a0sample_data/phpldapadmin-1.2.3/ 1 |less\n```", "```php\nProcessing: functions.php\nWARNING: the code in this file might not be \ncompatible with PHP 8\nTotal potential BC breaks: 4\nWARNING: the following function has been removed: function __autoload.\u00a0\u00a0\nUse this instead: spl_autoload_register(callable)\nWARNING: the following function has been removed: create_function.\u00a0\u00a0Use this instead: Use either \"function () {}\" or \"fn () => <expression>\"\nWARNING: the following function has been removed: each.\u00a0\u00a0Use this instead: Use \"foreach()\" or ArrayIterator\nPASSED this scan: scanIsResource\nPASSED this scan: scanMagicSignatures\nWARNING: using the \"@\" operator to suppress warnings \nno longer works in PHP 8.\n```", "```php\n$ git branch php8_migration\n$ git checkout php8_migration\nSwitched to branch 'php8_migration'\n```", "```php\ndocker run -it \\\n\u00a0\u00a0unlikelysource/ubuntu_focal_with_php_7_4:latest /bin/bash\n```", "```php\n    apt update\n    apt upgrade\n    ```", "```php\n    add-apt-repository ppa:ondrej/php\n    ```", "```php\n    apt install php8.0\n    ```", "```php\n    apt search php8.0-*\n    ```", "```php\n    php --version\n    ```", "```php\nroot@ec873e16ee93:/# php --version\nPHP 8.0.7 (cli) (built: Jun\u00a0\u00a04 2021 21:26:10) ( NTS )\nCopyright (c) The PHP Group\nZend Engine v4.0.7, Copyright (c) Zend Technologies\nwith Zend OPcache v8.0.7, Copyright (c), by Zend Technologies\n```", "```php\nroot@ec873e16ee93:/# whereis php\nphp: /usr/bin/php /usr/bin/php8.0 /usr/bin/php7.4 /usr/lib/php /etc/php /usr/share/php7.4-opcache /usr/share/php8.0-opcache /usr/share/php8.0-readline /usr/share/php7.4-readline /usr/share/php7.4-json /usr/share/php8.0-common /usr/share/php7.4-common\n```", "```php\nupdate-alternatives --config php\n```", "```php\nroot@ec873e16ee93:/# update-alternatives --config php \nThere are 2 choices for the alternative php \n(providing /usr/bin/php).\n\u00a0\u00a0Selection\u00a0\u00a0\u00a0\u00a0Path\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Priority\u00a0\u00a0\u00a0Status\n------------------------------------------------------------\n* 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/usr/bin/php8.0\u00a0\u00a0\u00a080\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0auto mode\n\u00a0\u00a01\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/usr/bin/php7.4\u00a0\u00a0\u00a074\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0manual mode\n\u00a0\u00a02\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/usr/bin/php8.0\u00a0\u00a0\u00a080\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0manual mode\nPress <enter> to keep the current choice[*], or type selection number:\n```", "```php\ndocker run -it unlikelysource/fedora_34_with_php_7_4 /bin/bash\n```", "```php\n    [root@9d4e8c93d7b6 /]# uname -a\n    Linux 9d4e8c93d7b6 5.8.0-55-generic #62~20.04.1-Ubuntu\n    SMP Wed Jun 2 08:55:04 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n    [root@9d4e8c93d7b6 /]# cat /etc/fedora-release \n    Fedora release 34 (Thirty Four)\n    ```", "```php\n    dnf upgrade\u00a0\u00a0\n    dnf install 'dnf-command(config-manager)'\n    ```", "```php\n    dnf install \\\n    \u00a0\u00a0https://rpms.remirepo.net/fedora/remi-release-NN.rpm\n    ```", "```php\n    [root@56b9fbf499d6 /]# dnf module list |grep php\n    php\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0remi-7.4 [e]\u00a0\u00a0\u00a0\u00a0\u00a0common [d] [i],\n    devel, minimal\u00a0\u00a0\u00a0\u00a0PHP scripting language\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0php\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0remi-8.0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0common [d], devel, minimal\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PHP scripting language\n    ```", "```php\n    [root@d044cbe477c8 /]# php --version\n    PHP 7.4.20 (cli) (built: Jun\u00a0\u00a01 2021 15:41:56) (NTS)\n    Copyright (c) The PHP Group\n    Zend Engine v3.4.0, Copyright (c) Zend Technologies\n    ```", "```php\n    dnf -y module reset php\n    dnf -y module install php:remi-8.0\n    ```", "```php\n    [root@56b9fbf499d6 /]# php -v\n    PHP 8.0.7 (cli) (built: Jun\u00a0\u00a01 2021 18:43:05) \n    ( NTS gcc x86_64 ) Copyright (c) The PHP Group\n    Zend Engine v4.0.7, Copyright (c) Zend Technologies\n    ```", "```php\n    dnf -y module reset php\n    dnf -y module install php:remi-X.Y\n    ```", "```php\nzend_extension=xdebug.so\nxdebug.log=/repo/xdebug.log\nxdebug.log_level=7\nxdebug.mode=develop,profile\n```", "```php\nroot@php8_tips_php8 [ /srv ]# \ncomposer create-project laminas-api-tools/api-tools-skeleton\nCreating a \"laminas-api-tools/api-tools-skeleton\" project at \"./api-tools-skeleton\"\nInstalling laminas-api-tools/api-tools-skeleton (1.3.1p1)\n\u00a0\u00a0- Downloading laminas-api-tools/api-tools-skeleton (1.3.1p1)\n\u00a0\u00a0- Installing laminas-api-tools/api-tools-skeleton (1.3.1p1):\nExtracting archiveCreated project in /srv/api-tools-skeleton\nLoading composer repositories with package information\nUpdating dependencies\nYour requirements could not be resolved to an installable set of packages.\n\u00a0\u00a0Problem 1\n\u00a0\u00a0\u00a0\u00a0- Root composer.json requires laminas/laminas-developer-tools dev-master, found laminas/laminas-developer-tools[dev-release-1.3, 0.0.1, 0.0.2, 1.0.0alpha1, ..., 1.3.x-dev, 2.0.0, ..., 2.2.x-dev] but it does not match the constraint.\n\u00a0\u00a0Problem 2\n\u00a0\u00a0\u00a0\u00a0- zendframework/zendframework 2.5.3 requires php ^5.5 \u00a0\u00a0\u00a0\u00a0|| ^7.0 -> your php version (8.1.0-dev) does not satisfy \u00a0\u00a0\u00a0\u00a0that requirement.\n```", "```php\nroot@php8_tips_php8 [ /srv ]# \ncomposer create-project --ignore-platform-reqs \\\n\u00a0\u00a0\u00a0\u00a0laminas-api-tools/api-tools-skeleton\nCreating a \"laminas-api-tools/api-tools-skeleton\" project at \"./api-tools-skeleton\"\nInstalling laminas-api-tools/api-tools-skeleton (1.6.0)\n\u00a0\u00a0- Downloading laminas-api-tools/api-tools-skeleton (1.6.0)\n\u00a0\u00a0- Installing laminas-api-tools/api-tools-skeleton (1.6.0):\nExtracting archive\nCreated project in /srv/api-tools-skeleton\nInstalling dependencies from lock file (including require-dev)\nVerifying lock file contents can be installed on current\nplatform.\nPackage operations: 109 installs, 0 updates, 0 removals\n- Downloading laminas/laminas-zendframework-bridge (1.3.0)\n- Downloading laminas-api-tools/api-tools-asset-manager\n(1.4.0)\n- Downloading squizlabs/php_codesniffer (3.6.0)\n- Downloading dealerdirect/phpcodesniffer-composer-installer\n(v0.7.1)\n- Downloading laminas/laminas-component-installer (2.5.0)\n... not all output is shown\n```", "```php\nroot@php8_tips_php7 [ /repo/test/phpunit5 ]# php --version\nPHP 7.1.33 (cli) (built: May 16 2020 12:47:37) (NTS)\nCopyright (c) 1997-2018 The PHP Group\nZend Engine v3.1.0, Copyright (c) 1998-2018 Zend Technologies\n\u00a0\u00a0\u00a0\u00a0with Xdebug v2.9.1, Copyright (c) 2002-2020, by Derick\nRethans\nroot@php8_tips_php7 [ /repo/test/phpunit5 ]#\nvendor/bin/phpunit \nPHPUnit 5.7.27 by Sebastian Bergmann and contributors.\n........\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a08 / 8 (100%)\nTime: 27 ms, Memory: 4.00MB\nOK (8 tests, 8 assertions)\n```", "```php\nroot@php8_tips_php8 [ /repo/test/phpunit5 ]# php --version\nPHP 8.1.0-dev (cli) (built: Dec 24 2020 00:13:50) (NTS)\nCopyright (c) The PHP Group\nZend Engine v4.1.0-dev, Copyright (c) Zend Technologies\n\u00a0\u00a0\u00a0\u00a0with Zend OPcache v8.1.0-dev, Copyright (c), \n\u00a0\u00a0\u00a0\u00a0by Zend Technologies\nroot@php8_tips_php8 [ /repo/test/phpunit5 ]#\nvendor/bin/phpunit \nPHP Warning:\u00a0\u00a0Private methods cannot be final as they are never overridden by other classes in /repo/test/phpunit5/vendor/ phpunit/phpunit/src/Util/Configuration.php on line 162\nPHPUnit 5.7.27 by Sebastian Bergmann and contributors.\n........\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a08 / 8 (100%)\nTime: 33 ms, Memory: 2.00MB\nOK (8 tests, 8 assertions)\n```"]