["```php\n**sudo curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony**\n**sudo chmod a+x /usr/local/bin/symfony**\n\n```", "```php\n**c:\\> php -r \"file_put_contents('symfony', file_get_contents('https://symfony.com/installer'));\"**\n\n```", "```php\n**php bin/console**\n\n```", "```php\n**php bin/console doctrine:schema:update --force**\n\n```", "```php\n**CREATE TABLE `customer` (**\n **`id` int(11) NOT NULL AUTO_INCREMENT,**\n **`firstname` varchar(255) COLLATE utf8_unicode_ci NOT NULL,**\n **`lastname` varchar(255) COLLATE utf8_unicode_ci NOT NULL,**\n **`email`** **varchar(255) COLLATE utf8_unicode_ci NOT NULL,**\n **PRIMARY KEY (`id`),**\n **UNIQUE KEY `UNIQ_81398E09E7927C74` (`email`)**\n**) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;**\n\n```", "```php\n**php bin/console generate:doctrine:crud**\n\n```", "```php\n/**\n * Creates a new Customer entity.\n *\n * @Route(\"/new\", name=\"customer_new\")\n * @Method({\"GET\", \"POST\"})\n */\npublic function newAction(Request $request)\n{\n  //...\n\n  return $this->render('customer/new.html.twig', array(\n    'customer' => $customer,\n    'form' => $form->createView(),\n  ));\n}\n```", "```php\n/**\n * Displays a form to edit an existing Customer entity.\n *\n * @Route(\"/{id}/edit\", name=\"customer_edit\")\n * @Method({\"GET\", \"POST\"})\n */\npublic function editAction(Request $request, Customer $customer)\n{\n  //...\n}\n```", "```php\napp:\n  resource: \"@AppBundle/Controller/\"\n  type:     annotation\n```", "```php\n// Basic Route Configuration\n/**\n * @Route(\"/\")\n */\npublic function homeAction()\n{\n  // ...\n}\n\n// Routing with Placeholders\n/**\n * @Route(\"/catalog/product/{sku}\")\n */\npublic function showAction($sku)\n{\n  // ...\n}\n\n// >>Required<< and Optional Placeholders\n/**\n * @Route(\"/catalog/product/{id}\")\n */\npublic function indexAction($id)\n{\n  // ...\n}\n// Required and >>Optional<< Placeholders\n/**\n * @Route(\"/catalog/product/{id}\", defaults={\"id\" = 1})\n */\npublic function indexAction($id)\n{\n  // ...\n}\n```", "```php\n@Route(\n  \"/catalog/product/{id}\",\n  defaults={\"id\": 1},\n  requirements={\"id\": \"\\d+\"}\n)\n```", "```php\n<h1>{{ title|upper }}</h1>\n\n{{ filter upper }}\n<h1>{{ title }}</h1>\n{% endfilter %}\n\n<h1>{{ title|lower|escape }}</h1>\n\n{% filter lower|escape %}\n<h1>{{ title }}</h1>\n{% endfilter %}\n```", "```php\n{{ random(['phone', 'tablet', 'laptop']) }}\n```", "```php\n{% extends 'base.html.twig' %}\n\n{% block body %}\n<h1>Customer list</h1>\n\u2026\n{% endblock %}\n```", "```php\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>{% block title %}Welcome!{% endblock %}</title>\n    {% block stylesheets%}{% endblock %}\n    <link rel=\"icon\" type=\"image/x-icon\"href=\"{{ asset('favicon.ico') }}\" />\n  </head>\n  <body>\n    {% block body %}{% endblock %}\n    {% block javascripts%}{% endblock %}\n  </body>\n</html>\n```", "```php\nclass Customer {\n  private $id;\n  private $firstname;\n  private $lastname;\n  private $email;\n\n  public function getId() {\n    return $this->id;\n  }\n\n  public function setFirstname($firstname) {\n    $this->firstname = $firstname;\n    return $this;\n  }\n\n  public function getFirstname() {\n    return $this->firstname;\n  }\n\n  public function setLastname($lastname) {\n    $this->lastname = $lastname;\n    return $this;\n  }\n\n  public function getLastname() {\n    return $this->lastname;\n  }\n\n  public function setEmail($email) {\n    $this->email = $email;\n    return $this;\n  }\n\n  public function getEmail() {\n    return $this->email;\n  }\n}\n```", "```php\nnamespace AppBundle\\Form;\n\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\n\nclass CustomerType extends AbstractType\n{\n  public function buildForm(FormBuilderInterface $builder, array $options) {\n    $builder\n    ->add('firstname')\n    ->add('lastname')\n    ->add('email')\n    ;\n  }\n\n  public function configureOptions(OptionsResolver $resolver) {\n    $resolver->setDefaults(array(\n      'data_class' =>'AppBundle\\Entity\\Customer'\n    ));\n  }\n}\n```", "```php\n$customer = new Customer();\n$form = $this->createForm('AppBundle\\Form\\CustomerType', $customer);\n$form->handleRequest($request);\n\nif ($form->isSubmitted() && $form->isValid()) {\n  $em = $this->getDoctrine()->getManager();\n  $em->persist($customer);\n  $em->flush();\n\n  return $this->redirectToRoute('customer_show', array('id' =>$customer->getId()));\n}\n\nreturn $this->render('customer/new.html.twig', array(\n  'customer' => $customer,\n  'form' => $form->createView(),\n));\n```", "```php\n{% extends 'base.html.twig' %}\n\n{% block body %}\n<h1>Customer creation</h1>\n\n{{ form_start(form) }}\n{{ form_widget(form) }}\n<input type=\"submit\" value=\"Create\" />\n{{ form_end(form) }}\n\n<ul>\n  <li>\n    <a href=\"{{ path('customer_index') }}\">Back to the list</a>\n  </li>\n</ul>\n{% endblock %}\n```", "```php\nimports:\n  - { resource: parameters.yml }\n  - { resource: security.yml }\n  - { resource: services.yml }\n\nframework:\n\u2026\n\n# Twig Configuration\ntwig:\n\u2026\n\n# Doctrine Configuration\ndoctrine:\n\u2026\n\n# Swiftmailer Configuration\nswiftmailer:\n\u2026\n```", "```php\n**php bin/console config:dump-reference FrameworkBundle**\n\n```", "```php\n# web/app.php\n\u2026\n$kernel = new AppKernel('prod', false);\n\u2026\n\n# web/app_dev.php\n\u2026\n$kernel = new AppKernel('dev', true);\n\u2026\n```", "```php\npublic function registerContainerConfiguration(LoaderInterface $loader)\n{\n  $loader->load($this->getRootDir().'/config/config_'.$this->getEnvironment().'.yml');\n}\n```", "```php\npublic function registerBundles()\n{\n  $bundles = [\n    new Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle(),\n    new Symfony\\Bundle\\SecurityBundle\\SecurityBundle(),\n    new Symfony\\Bundle\\TwigBundle\\TwigBundle(),\n    new Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle(),\n    new Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle(),\n    //\u2026\n    new AppBundle\\AppBundle(),\n  ];\n\n  //\u2026\n\n  return $bundles;\n}\n```", "```php\nnamespace TestBundle;\n\nuse Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\nclass TestBundle extends Bundle\n{\n  \u2026\n}\n```", "```php\nclass AppKernel extends Kernel {\n//\u2026\n  public function registerBundles() {\n    $bundles = [\n      // \u2026\n      new TestBundle\\TestBundle(),\n      // \u2026\n    ];\n    return $bundles;\n  }\n  //\u2026\n}\n```", "```php\n**php bin/console generate:bundle --namespace=Foggyline/TestBundle**\n\n```", "```php\nparameters:\ndatabase_host: 127.0.0.1\ndatabase_port: null\ndatabase_name: symfony\ndatabase_user: root\ndatabase_password: mysql\n```", "```php\ndoctrine:\ndbal:\n  driver:   pdo_mysql\n  host:     \"%database_host%\"\n  port:     \"%database_port%\"\n  dbname:   \"%database_name%\"\n  user:     \"%database_user%\"\n  password: \"%database_password%\"\n  charset:  UTF8\n```", "```php\nphp bin/console doctrine:database:drop --force\nphp bin/console doctrine:database:create\n```", "```php\n// Fetch all entities\n$customers = $em->getRepository('AppBundle:Customer')->findAll();\n\n// Persist single entity (existing or new)\n$em = $this->getDoctrine()->getManager();\n$em->persist($customer);\n$em->flush();\n\n// Delete single entity\n$em = $this->getDoctrine()->getManager();\n$em->remove($customer);\n$em->flush();\n```", "```php\n<phpunit \u2026 >\n  <php>\n    <ini name=\"error_reporting\" value=\"-1\" />\n    <server name=\"KERNEL_DIR\" value=\"app/\" />\n  </php>\n\n  <testsuites>\n    <testsuite name=\"Project Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n\n  <filter>\n    <whitelist>\n      <directory>src</directory>\n      <exclude>\n        <directory>src/*Bundle/Resources</directory>\n        <directory>src/*/*Bundle/Resources</directory>\n        <directory>src/*/Bundle/*Bundle/Resources</directory>\n      </exclude>\n    </whitelist>\n  </filter>\n</phpunit>\n```", "```php\n<testsuites>\n  <testsuite name=\"Project Test Suite\">\n    <directory>tests</directory>\n    <directory>src/AppBundle/Tests</directory>\n  </testsuite>\n</testsuites>\n```", "```php\nframework:\n  validation:{ enable_annotations: true }\n```", "```php\n$customer = new Customer();\n\n$validator = $this->get('validator');\n\n$errors = $validator->validate($customer);\n\nif (count($errors) > 0) {\n  // Handle error state\n}\n\n// Handle valid state\n```", "```php\n//\u2026\nuse Symfony\\Component\\Validator\\Constraints as Assert;\n//\u2026\nclass Customer\n{\n  //\u2026\n  /**\n  * @var string\n  *\n  * @ORM\\Column(name=\"email\", type=\"string\", length=255, unique=true)\n  * @Assert\\Email(\n    *      checkMX = true,\n    *      message = \"Email '{{ value }}' is invalid.\",\n    * )\n    */\n  private $email;\n  //\u2026\n}\n```", "```php\n$customer = new Customer();\n$form = $this->createForm('AppBundle\\Form\\CustomerType', $customer);\n$form->handleRequest($request);\n\nif ($form->isSubmitted() && $form->isValid()) {\n// \u2026\n```"]