["```php\nserver {\n    listen 80 default;\n    client_max_body_size 308M;\n    access_log /var/log/nginx/application.access.log;\n    root  /application/public;\n    index index.php;\n    if (!-e $request_filename) {\n        rewrite ^.*$ /index.php last;\n    }\n    location ~ \\.php$ {\n        fastcgi_pass php-fpm:9000;\n        fastcgi_index index.php;\n        fastcgi_param SCRIPT_FILENAME\n         $document_root$fastcgi_script_name;\n        fastcgi_param PHP_VALUE\n         \"error_log=/var/log/nginx/application_php_errors.log\";\n        fastcgi_buffers 16 16k;\n        fastcgi_buffer_size 32k;\n        include fastcgi_params;\n    }\n}\n```", "```php\nFROM phpdockerio/php72-fpm:latest\nWORKDIR \"/application\"\n# Install selected extensions and other stuff\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install php7.2-mysql\n     libmcrypt-dev \\\n    && apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n    /usr/share/doc/*\n```", "```php\nupload_max_filesize = 300M\npost_max_size = 308M\n[Xdebug]\nzend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/xdebug.so\nxdebug.remote_enable=1\nxdebug.remote_autostart=1\nxdebug.remote_host=111.111.11.1 # you must use your own IP address here\nxdebug.remote_port=9009\n```", "```php\nversion: \"3.1\"\nservices:\nmysql:\n  image: mysql:5.7\n  container_name: chapter-04-mysql\n  working_dir: /application\n  volumes:\n    - .:/application\n  environment:\n    - MYSQL_ROOT_PASSWORD=123456\n    - MYSQL_DATABASE=chapter-04\n    - MYSQL_USER=chapter-04\n    - MYSQL_PASSWORD=123456\n  ports:\n    - \"8083:3306\"\n```", "```php\nwebserver:\n  image: nginx:alpine\n  container_name: chapter-04-webserver\n  working_dir: /application\n  volumes:\n    - .:/application\n    - ./phpdocker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf\n  ports:\n    - \"8081:80\"\n```", "```php\nphp-fpm:\nbuild: phpdocker/php-fpm\ncontainer_name: chapter-04-php-fpm\nworking_dir: /application\nvolumes:\n- .:/application\n- ./phpdocker/php-fpm/php-ini-overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini\n```", "```php\ndocker ps -a\n```", "```php\ndocker stop <containerId> \n```", "```php\ndocker rm <containerId> \n```", "```php\ndocker stop $(docker ps -a -q)\n```", "```php\ndocker rm $(docker ps -a -q)\n```", "```php\ndocker-compose build\n```", "```php\n---> 5f8ed0da2be9 Successfully built 5f8ed0da2be9 Successfully tagged chapter-04_php-fpm:latest mysql uses an image, skipping\n```", "```php\ndocker-compose up -d\n```", "```php\n---> 5f8ed0da2be9 Successfully built 5f8ed0da2be9 Successfully tagged chapter-04_php-fpm:latest mysql uses an image, skipping\n```", "```php\ndocker ps -a\n```", "```php\ndocker-compose exec php-fpm bash\n```", "```php\ncomposer --version\n```", "```php\nComposer version 1.6.3\n```", "```php\ncomposer create-project laravel/laravel=5.6.12 project --prefer-dist\n```", "```php\nGenerating optimized autoload files > Illuminate\\Foundation\\ComposerScripts::postAutoloadDump > @php artisan package:discover Discovered Package: fideloper/proxy Package: laravel/tinker Discovered Package: nunomaduro/collision Package manifest generated successfully. > @php artisan key:generate\n```", "```php\nphp-fpm:\n  build: phpdocker/php-fpm\n  container_name: chapter-04-php-fpm\n  working_dir: /application\n  volumes:\n    - ./project:/application\n    - ./phpdocker/php-fpm/php-ini-\n    overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini\n```", "```php\ndocker-compose kill\n```", "```php\nStopping chapter-04-webserver ... done Stopping chapter-04-mysql ... done Stopping chapter-04-php-fpm ... done\n```", "```php\ndocker-compose up -d\n```", "```php\nRecreating chapter-04-php-fpm ... done Starting chapter-04-webserver ... done Starting chapter-04-webserver ... done\n```", "```php\nmysql:\n    image: mysql:5.7\n    container_name: chapter-04-mysql\n    working_dir: /application\n    volumes:\n    - .:/application\n    - ./storage-db:/var/lib/mysql\n```", "```php\nDB_HOST=mysql\nDB_PORT=3306\nDB_DATABASE=chapter-04\nDB_USERNAME=chapter-04\nDB_PASSWORD=123456\n```", "```php\ndocker-compose exec php-fpm bash\n```", "```php\nphp artisan tinker\n```", "```php\nDB::connection()->getPdo();\n```", "```php\n=> PDO {#760\ninTransaction: false,\nattributes: {\nCASE: NATURAL,\nERRMODE: EXCEPTION,\nAUTOCOMMIT: 1,\nPERSISTENT: false,\nDRIVER_NAME: \"mysql\",\nSERVER_INFO: \"Uptime: 2491 Threads: 1 Questions: 9 Slow queries: 0 Opens: 105 Flush tables: 1 Open tables: 98 Queriesper second avg: 0.003\",\nORACLE_NULLS: NATURAL,\nCLIENT_VERSION: \"mysqlnd 5.0.12-dev - 20150407 - $Id: 38fea24f2847fa7519001be390c98ae0acafe387 $\",\nSERVER_VERSION: \"5.7.21\",\nSTATEMENT_CLASS: [\n\"PDOStatement\",\n],\nEMULATE_PREPARES: 0,\nCONNECTION_STATUS: \"mysql via TCP/IP\",\nDEFAULT_FETCH_MODE: BOTH,\n},\n}\n```", "```php\ndocker-compose kill\n```", "```php\ndocker-compose rm mysql\n```", "```php\ndocker-compose up -d\n```", "```php\nCreating chapter-04-mysql ... done Starting chapter-04-php-fpm ... done Starting chapter-04-webserver ... done\n```", "```php\ndocker-compose exec php-fpm bash\n```", "```php\nphp artisan make:model Bike -m\n```", "```php\nprotected $fillable = [\n    'make',\n    'model',\n    'year',\n    'mods',\n    'picture'\n];\n```", "```php\nSchema::create('bikes', function (Blueprint $table) {\n$table->increments('id');\n$table->string('make');\n$table->string('model');\n$table->string('year');\n$table->text('mods');\n$table->string('picture');\n$table->timestamps();\n});\n```", "```php\nphp artisan migrate\n```", "```php\nMigration table created successfully. Migrating: XXXX_XX_XX_XXXXXX_create_users_table Migrated: XXXX_XX_XX_XXXXXX_create_users_table Migrating: XXXX_XX_XX_XXXXXX_create_password_resets_table Migrated: XXXX_XX_XX_XXXXXX_create_password_resets_table Migrating: XXXX_XX_XX_XXXXXX_create_bikes_table Migrated: XXXX_XX_XX_XXXXXX_create_bikes_table\n```", "```php\n[{\n  \"id\": 1,\n  \"make\": \"Harley Davidson\",\n  \"model\": \"XL1200 Nightster\",\n  \"year\": \"2009\",\n  \"mods\": \"Nobis vero sint non eius. Laboriosam sed odit hic quia\n    doloribus. Numquam laboriosam numquam quas quis.\",\n  \"picture\": \"https://placeimg.com/640/480/nature\n  }, {\n  \"id\": 2,\n  \"make\": \"Harley Davidson\",\n  \"model\": \"Blackline\",\n  \"year\": \"2008\",\n  \"mods\": \"Nobis vero sint non eius. Laboriosam sed odit hic quia\n   doloribus. Numquam laboriosam numquam quas quis.\",\n  \"picture\": \"https://placeimg.com/640/480/nature\"\n }, {\n  \"id\": 3,\n  \"make\": \"Harley Davidson\",\n  \"model\": \"Dyna Switchback\",\n  \"year\": \"2009\",\n  \"mods\": \"Nobis vero sint non eius. Laboriosam sed odit hic quia\n   doloribus. Numquam laboriosam numquam quas quis.\",\n  \"picture\": \"https://placeimg.com/640/480/nature\"\n }, {\n  \"id\": 4,\n  \"make\": \"Harley Davidson\",\n  \"model\": \"Dyna Super Glide\",\n  \"year\": \"2009\",\n  \"mods\": \"Nobis vero sint non eius. Laboriosam sed odit hic quia\n  doloribus. Numquam laboriosam numquam quas quis.\",\n  \"picture\": \"https://placeimg.com/640/480/nature\"\n },{\n  \"id\": 5,\n  \"make\": \"Harley Davidson\",\n  \"model\": \"Dyna Wild Glide\",\n  \"year\": \"2005\",\n  \"mods\": \"Nobis vero sint non eius. Laboriosam sed odit hic quia\n   doloribus. Numquam laboriosam numquam quas quis.\",\n  \"picture\": \"https://placeimg.com/640/480/nature\"\n}]\n```", "```php\nphp artisan make:seeder BikesTableSeeder\n```", "```php\nuse Illuminate\\Database\\Seeder;\nuse App\\Bike;\nclass BikesTableSeeder extends Seeder\n    {\n    /**\n    * Run the database seeds.\n    *\n    * @return void\n    */\n    public function run()\n    {\n        DB::table('bikes')->delete();\n        $json = File::get(\"database/data-sample/bikes.json\");\n        $data = json_decode($json);\n        foreach ($data as $obj) {\n        Bike::create(array(\n            'id' => $obj->id,\n            'make' => $obj->make,\n            'model' => $obj->model,\n            'year' => $obj->year,\n            'mods' => $obj->mods,\n            'picture'=> $obj->picture\n        ));\n        }\n    }\n}\n```", "```php\n$this->call(BikesTableSeeder::class);\n```", "```php\nphp artisan db:seed\n```", "```php\ncomposer require \"darkaonline/l5-swagger\"\n```", "```php\n\\L5Swagger\\L5SwaggerServiceProvider::class\n```", "```php\nphp artisan vendor:publish --provider \"L5Swagger\\L5SwaggerServiceProvider\"\n```", "```php\nphp artisan make:controller ApiController\n```", "```php\n* Class ApiController\n*\n* @package App\\Http\\Controllers\n*\n* @SWG\\Swagger(\n* basePath=\"\",\n* host=\"localhost:8081\",\n* schemes={\"http\"},\n* @SWG\\Info(\n* version=\"1.0\",\n* title=\"Custom Bikes\",\n* @SWG\\Contact(name=\"Developer Contact\", url=\"https://www.example.com\"),\n* )\n* )\n*/\n```", "```php\nphp artisan l5-swagger:generate\n```", "```php\n<?php\nnamespace App;\nuse Illuminate\\Database\\Eloquent\\Model;\n    /**\n    * @SWG\\Definition(\n    * definition=\"Bike\",\n    * required={\"make\", \"model\", \"year\", \"mods\"},\n    * @SWG\\Property(\n    * property=\"make\",\n    * type=\"string\",\n    * description=\"Company name\",\n    * example=\"Harley Davidson, Honda, Yamaha\"\n    * ),\n    * @SWG\\Property(\n    * property=\"model\",\n    * type=\"string\",\n    * description=\"Motorcycle model\",\n    * example=\"Xl1200, Shadow ACE, V-Star\"\n    * ),\n    * @SWG\\Property(\n    * property=\"year\",\n    * type=\"string\",\n    * description=\"Fabrication year\",\n    * example=\"2009, 2008, 2007\"\n    * ),\n    * @SWG\\Property(\n    * property=\"mods\",\n    * type=\"string\",\n    * description=\"Motorcycle description of modifications\",\n    * example=\"New exhaust system\"\n    * ),\n    * @SWG\\Property(\n    * property=\"picture\",\n    * type=\"string\",\n    * description=\"Bike image URL\",\n    * example=\"http://www.sample.com/my.bike.jpg\"\n    * )\n    * )\n    */\nclass Bike extends Model\n{\n        /**\n        * The attributes that are mass assignable.\n        *\n        * @var array\n        */\n        protected $fillable = [\n            'make',\n            'model',\n            'year',\n            'mods',\n            'picture'\n        ];\n}\n```", "```php\nphp artisan l5-swagger:generate\n```", "```php\n* @SWG\\Property( * property=\"make\", * type=\"string\", * description=\"Company name\", * example=\"Harley Davidson, Honda, Yamaha\"\n```"]