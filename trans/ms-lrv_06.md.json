["```php\nJava 1.2\n/**\n * @author      Jon Doe <jon@doe.com>\n * @version     1.6               (current version number)\n * @since       2010-03-31        (version package...)\n */\npublic void speak() {\n}\n\npublic class Animal {\n    public void speak() {\n    }\n} \npublic class Cat extends Animal {\n    @Override\n    public void speak() {\n        System.out.println(\"Meow.\");\n    }\n }\n```", "```php\n[AttributeUsageAttribute(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false, Inherited = true)]\npublic sealed class AssociationAttribute : Attribute\n```", "```php\n/**\n * @BeforeSuite\n */\npublic static function prepare(SuiteEvent $event)\n{\n// prepare system for test suite\n// before it runs\n}\n```", "```php\n/**\n```", "```php\n */\n```", "```php\n/**\n * @Route(\"/accommodations/search\")\n * @Method({\"GET\"})\n */\n\npublic function searchAction($id)\n{\n```", "```php\n/**\n * @Route(route=\"/accommodations/search\")\n */\n\npublic function searchAction()\n{\n```", "```php\n/**\n * @Get(\"/hotels/search\")\n */\n\npublic function search()\n{\n```", "```php\nRoute::patch('hotel/{hid}/room/{rid}','AccommodationsController@editRoom');\nRoute::post('hotel/{hid}/room/{rid}','AccommodationsController@reserve');\nRoute::get('hotel/stats,HotelController@Stats');\nRoute::resource('country', 'CountryController');\nRoute::resource(city', 'CityController');\nRoute::resource('state', 'StateController');\nRoute::resource('amenity', 'AmenitiyController');\nRoute::resource('country', 'CountryController');\nRoute::resource(city', 'CityController');\nRoute::resource('country', 'CountryController');\nRoute::resource('city', 'CityController');\nRoute::resource('horse', 'HorseController');\nRoute::resource('cow', 'CowController');\nRoute::resource('zebra', 'ZebraController');\nRoute::get('dragon/{id}', 'DragonController@show');\nRoute::resource('giraffe', 'GiraffeController');\nRoute::resource('zebrafish', 'ZebrafishController');\n```", "```php\n**$ composer require laravelcollective/annotations**\n\n```", "```php\n\"require\": {\n    \"laravel/framework\": \"5.0.*\",\n    \"laravelcollective/annotations\": \"~5.0\",\n  },\n```", "```php\n<?php namespace App\\Providers;\n\nuse Collective\\Annotations\\AnnotationsServiceProvider as ServiceProvider;\n\nclass AnnotationsServiceProvider extends ServiceProvider {\n\n    /**\n     * The classes to scan for event annotations.\n     *\n     * @var array\n     */\n    protected $scanEvents = [];\n\n    /**\n     * The classes to scan for route annotations.\n     *\n     * @var array\n     */\n    protected $scanRoutes = [];\n\n    /**\n     * The classes to scan for model annotations.\n     *\n     * @var array\n     */\n    protected $scanModels = [];\n\n    /**\n     * Determines if we will auto-scan in the local environment.\n     *\n     * @var bool\n     */\n    protected $scanWhenLocal = false;\n\n    /**\n     * Determines whether or not to automatically scan the controllers\n     * directory (App\\Http\\Controllers) for routes\n     *\n     * @var bool\n     */\n    protected $scanControllers = false;\n\n    /**\n     * Determines whether or not to automatically scan all namespaced\n     * classes for event, route, and model annotations.\n     *\n     * @var bool\n     */\n    protected $scanEverything = false;\n\n}\n```", "```php\n'providers' => [\n    // ...\n    'App\\Providers\\AnnotationsServiceProvider'\n  ];\n```", "```php\n**$ php artisan make:controller AccommodationsController**\n\n```", "```php\nprotected $scanRoutes = [\n    'App\\Http\\Controllers\\HomeController',\n    'App\\Http\\Controllers\\AccommodationsController'\n];\n```", "```php\n/**\n* @Resource(\"/accommodations\")\n*/\n\n```", "```php\n<?php namespace MyCompany\\Http\\Controllers;\n\nuse Illuminate\\Support\\Facades\\Response;\nuse MyCompany\\Http\\Requests;\nuse MyCompany\\Http\\Controllers\\Controller;\nuse MyCompany\\Accommodation;\nuse Illuminate\\Http\\Request;\n\n/**\n* @Resource(\"/accommodations\")\n*/\nclass AccommodationsController extends Controller {\n\n    /**\n     * Display a listing of the resource.\n     *\n     * @return Response\n     */\n    public function index(Accommodation $accommodation)\n    {\n        return $accommodation->paginate();\n    }\n```", "```php\n@Resource(\"/accommodations\")\n```", "```php\n@Resource('/accommodations')\n```", "```php\n/**\n * Search for an accommodation\n * @Get(\"/search-accommodation\")\n */\n```", "```php\n<?php namespace MyCompany\\Http\\Controllers;\n\nuse Illuminate\\Support\\Facades\\Response;\nuse MyCompany\\Http\\Requests;\nuse MyCompany\\Http\\Controllers\\Controller;\nuse MyCompany\\Accommodation;\nuse Illuminate\\Http\\Request;\n\nclass AccommodationsController extends Controller {\n\n    /**\n    * Search for an accommodation\n    * @Get(\"/search-accommodation\")\n    */\n    public function index(Accommodation $accommodation)\n    {\n        return $accommodation->paginate();\n    }\n```", "```php\n**$ php artisan route:scan**\n\n**Routes scanned!**\n\n```", "```php\n$router->get('search-accommodation', [\n  'uses' => 'MyCompany\\Http\\Controllers\\AccommodationsController@search',\n  'as' => NULL,\n  'middleware' => [],\n  'where' => [],\n  'domain' => NULL,\n]);\n```", "```php\n<?php namespace App\\Providers;\n\nuse Collective\\Annotations\\AnnotationsServiceProvider as ServiceProvider;\n\nclass AnnotationsServiceProvider extends ServiceProvider {\n\n    /**\n     * The classes to scan for event annotations.\n     *\n     * @var array\n     */\n    protected $scanEvents = [];\n\n    \u2026\n\n    /**\n     * Determines if we will auto-scan in the local environment.\n     *\n     * @var bool\n     */\n    protected $scanWhenLocal = true;\n\n    /**\n     * Determines whether or not to automatically scan the controllers\n     * directory (App\\Http\\Controllers) for routes\n     *\n     * @var bool\n     */\n    protected $scanControllers = true;\n\n    /**\n     * Determines whether or not to automatically scan all namespaced\n     * classes for event, route, and model annotations.\n     *\n     * @var bool\n     */\n    protected $scanEverything = true;\n\n}\n```", "```php\n/**\n* Display the specified resource.\n* @Get(\"/accommodation/{id}\")\n*/\n```", "```php\n@Where({\"id\": \"\\d+\"})\n```", "```php\n/**\n * Display the specified resource.\n * @Get(\"/accommodation/{id}\")\n * @Where({\"id\": \"\\d+\"})\n */\n```", "```php\n/**\n * Display the specified resource.\n * @Get(\"/accommodation/{id}\")\n * @Where({\"id\": \"\\d+\"})\n * @Middleware(\"auth\")\n */\n```", "```php\n$ php artisan make:controller ReservationsController\n```", "```php\n<?php namespace MyCompany\\Http\\Controllers;\n\nuse ...\n\nclass ReservationsController extends Controller {\n/**\n* @Post(\"/bookRoom\")\n*/\n  public function reserve()\n  {\n  }\n```", "```php\n<?php namespace App\\Http\\Controllers;\n\nuse \u2026\n/**\n* @Controller(domain=\"booking.hotelwebsite.com\")\n*/\n\nclass ReservationsController extends Controller {\n\n/**\n* @Post(\"/bookRoom\")\n* @Middleware(\"auth\")\n*/\n  public function reserve()\n  {\n```", "```php\n**$ php artisan make:command ReserveRoom**\n\n```", "```php\n<?php namespace MyCompany\\Commands;\n\nuse MyCompany\\Commands\\Command;\nuse MyCompany\\User;\nuse MyCompany\\Accommodation\\Room;\nuse MyCompany\\Events\\RoomWasReserved;\n\nuse Illuminate\\Contracts\\Bus\\SelfHandling;\n\nclass ReserveRoomCommand extends Command implements SelfHandling {\n\n  public function __construct()\n  {\n  }\n  /**\n   * Execute the command.\n   */\n  public function handle()\n  {\n  }\n}\n```", "```php\n<?php namespace MyCompany\\Http\\Controllers;\n\nuse MyCompany\\Accommodation\\Reservation;\nuse MyCompany\\Commands\\PlaceOnWaitingListCommand;\nuse MyCompany\\Commands\\ReserveRoomCommand;\nuse MyCompany\\Events\\RoomWasReserved;\nuse MyCompany\\Http\\Requests;\nuse MyCompany\\Http\\Controllers\\Controller;\nuse MyCompany\\User;\nuse MyCompany\\Accommodation\\Room;\n\nuse Illuminate\\Http\\Request;\n\nclass ReservationsController extends Controller {\n\n/**\n * @Post(\"/bookRoom\")\n * @Middleware(\"auth\")\n */\n  public function reserve()\n  {\t\n    $this->dispatch(\n    new ReserveRoom(\\Auth::user(),$start_date,$end_date,$rooms)\n    );\n  }\n```", "```php\n**$ php artisan make:event RoomWasReserved**\n\n```", "```php\n<?php namespace App\\Commands;\n\nuse App\\Commands\\Command;\nuse Illuminate\\Contracts\\Bus\\SelfHandling;\n\nclass ReserveRoom extends Command implements SelfHandling {\n    public function __construct(User $user, $start_date, $end_date, $rooms)\n    {\n    }\n    public function handle()\n    {\n        $reservation = Reservation::createNew();\n        event(new RoomWasReserved($reservation));\n    }\n}\n```", "```php\n**$ php artisan handler:event RoomReservedEmail \u2013event=RoomWasReserved**\n\n```", "```php\n<?php namespace MyCompany\\Handlers\\Events;\n\nuse MyCompany\\Events\\RoomWasReserved;\n\nuse Illuminate\\Queue\\InteractsWithQueue;\nuse Illuminate\\Contracts\\Queue\\ShouldBeQueued;\n\nclass RoomReservedEmail {\n  public function __construct()\n  {\n  }\n\n  /**\n   * Handle the event.\n   * @Hears(\"\\App\\Events\\RoomWasReserved\")\n   * @param  RoomWasReserved  $event\n   */\n  public function handle(RoomWasReserved $event)\n  {\n     //TODO: send email to $event->user\n  }\n}\n```", "```php\nprotected $scanEvents = [\n   'App\\Handlers\\Events\\RoomReservedEmail'\n];\n```", "```php\n**$ php artisan event:scan**\n\n **Events scanned!**\n\n```", "```php\n<?php $events->listen(array(0 => 'App\\\\Events\\\\RoomWasReserved',\n), App\\Handlers\\Events\\RoomReservedEmail@handle');\n```", "```php\n**storage/framework/events.scanned.php**\n**storage/framework/routes.scanned.php**\n\n```", "```php\n**$ php artisan route:cache**\n**Route cache cleared!**\n**Routes cached successfully!**\n\n```", "```php\n$ php artisan route:scan\nRoutes scanned!\n\n$ php artisan route:cache\nRoute cache cleared!\nRoutes cached successfully!\n```", "```php\n<?php\n\napp('router')->setRoutes(\n  unserialize(base64_decode('TzozNDoiSWxsdW1pbmF0ZVxSb3V0aW5nXFd\u2026'))\n);\n```"]