["```php\n  <dynamicField name=\"*_s\"  type=\"string\"  indexed=\"true\"  stored=\"true\" />\n```", "```php\n  $grp = $query->getGrouping();\n  $grp->addField('author_s');\n  $grp->addField('genre_s');\n```", "```php\n  $grp->setLimit(3);\n```", "```php\n  $grp->setNumberOfGroups(true);\n```", "```php\n  $groups = $resultSet->getGrouping();\n```", "```php\n  foreach($groups as $grpName => $grpFld)  {\n  echo '<h1> Grouped by ' . $grpName . '</h1>';\n  echo 'Total Matches: ' . $grpFld->getMatches();\n  echo 'Number of groups: ' . $grpFld->getNumberOfGroups();\n  foreach($grpFld as $grpVal)     {\n  echo '<h2>Grouping for ' . $grpVal->getValue() . ' : ' . $grpVal->getNumFound() . '</h2>';\n  foreach($grpVal as $doc){\n  echo $doc->id;\n  echo $doc->name;\n  echo $doc->author;\n        }\n    }\n}\n```", "```php\n1013311 [http-bio-8080-exec-2] INFO  org.apache.solr.core.SolrCore  \u2013 [collection1] webapp=/solr path=/select params={omitHeader=true&**group.ngroups=true**&fl=id,name,author,series_t,score,last_modified&start=0&q=cat:book&**group.limit=3&group.field=author_s&group.field=genre_s&group=true&**wt=json&rows=25} hits=30 status=0 QTime=4\n\n```", "```php\n  $grp->addQuery('price:[0 TO 5]');\n  $grp->addQuery('price:[5.01 TO 10]');\n  $grp->addQuery('price:[10.01 TO *]');\n```", "```php\n  $grp->setSort('price desc');\n```", "```php\n  1404903 [http-bio-8080-exec-4] INFO  org.apache.solr.core.SolrCore  \u2013 [collection1] webapp=/solr path=/select params={omitHeader=true&**group.ngroups=true**&fl=id,name,author,series_t,score,price&start=0&q=cat:book&**group.limit=3&group.query=price:[0+TO+5]&group.query=price:[5.01+TO+10]&group.query=price:[10.01+TO+*]**    **&group.sort=price+desc&group=true&**wt=json&rows=25} hits=30 status=0 QTime=38\n```", "```php\n  $mltquery = $query->getMoreLikeThis();\n  $mltquery->setFields('author,series_t');\n```", "```php\n  $mltquery->setMinimumDocumentFrequency(1);\n  $mltquery->setMinimumTermFrequency(1);\n```", "```php\n  $resultset = $client->select($query);\n  $mltResult = $resultset->getMoreLikeThis();\n  foreach($resultset as $doc) {\n  echo $doc->id.', '.$doc->name.', '.$doc->author;\n  $mltdocs = $mltResult->getResult($doc->id);\n  if($mltdocs)   {\n  echo \"\\n\".$mltdocs->getMaximumScore();\n  echo \"\\n\".$mltdocs->getNumFound();\n  echo 'Docs fetched : '.count($mltdocs);\n  foreach($mltdocs as $mltdoc){\n  echo \"\\n\".$mltdoc->id.' : '.$mltdoc->name.' ['.$mltdoc->score.'] ';\n        }\n    }\n}\n```", "```php\n  cd <Solr home>\n  cp \u2013r example example2\n  cd example2\n  java -jar start.jar \u2013Djetty.port=8983\n```", "```php\n  java -Durl=http://localhost:8983/solr/update -Dtype=application/csv -jar post.jar <path/to/file/>books2.csv\n```", "```php\n  $dSearch = $query->getDistributedSearch();\n  $dSearch->addShard('shard1','localhost:8080/solr');\n  $dSearch->addShard('shard2','localhost:8983/solr');\n  $resultSet = $client->select($query);\n```", "```php\n  $dSearch->addShards(array(\n    'shard1' => 'localhost:8080/solr',\n    'shard2' => 'localhost:8983/solr'\n));\n```", "```php\n **cp -r example example3**\n **rm -rf example3/solr/collection1/data**\n\n```", "```php\n  <lst name=\"master\">\n  <str name=\"replicateAfter\">commit</str>\n  <str name=\"replicateAfter\">startup</str>\n  <str name=\"confFiles\">schema.xml,stopwords.txt</str>\n  </lst>\n```", "```php\n  <lst name=\"slave\">\n  <str name=\"masterUrl\">http://localhost:8080/solr</str>\n  <str name=\"pollInterval\">00:00:60</str>\n  </lst>\n```", "```php\n$config = array(\n    \"master\" => array(\n        \"master\" => array(\n            \"host\"=>\"127.0.0.1\",\n            \"port\"=>\"8080\",\n            \"path\"=>\"/solr\",\n            \"core\"=>\"collection1\",\n        ),      \n    ),\n    \"slave\" => array(\n        \"slave\" => array(\n            \"host\"=>\"127.0.0.1\",\n            \"port\"=>\"8983\",\n            \"path\"=>\"/solr\",\n            \"core\"=>\"collection1\",\n        ),\n    )\n);\n```", "```php\n  $masterEndpoint = $client->createEndpoint(\"master\");\n  $slaveEndpoint = $client->createEndpoint(\"slave\");\n  $lb = $client->getPlugin('loadbalancer');\n  $lb->addEndpoint($masterEndpoint, 1);\n  $lb->addEndpoint($slaveEndpoint, 5);\n```", "```php\n  $lb->setFailoverEnabled(true);\n  $lb->setFailoverMaxRetries(2);\n```", "```php\n  $lb->setForcedEndpointForNextQuery('master');\n```"]