["```php\nsudo apt-get install software-properties-common\nsudo apt-add-repository ppa:ansible/ansible\nsudo apt-get update\nsudo apt-get install ansible\n\n```", "```php\nssh-keygen -t rsa\n\n```", "```php\nmkdir mphp7\ncd mphp7/\n\n```", "```php\n[defaults]\nhostfile = hosts\n\n```", "```php\n[mphp7]\n45.76.88.214 ansible_ssh_user=root\n\n```", "```php\nansible mphp7 -m ping\n\n```", "```php\nsudo apt-get -y install python\n\n```", "```php\nansible-galaxy install fvarovillodres.lamp\n\n```", "```php\n- hosts: mphp7\n roles:\n - role: fvarovillodres.lamp\n become: yes\n\n```", "```php\nansible-playbook lamp.yml\n\n```", "```php\ncurl -LO https://deployer.org/releases/v4.3.0/deployer.phar\nmv deployer.phar /usr/local/bin/dep \nchmod +x /usr/local/bin/dep\n\n```", "```php\nset('color', 'Yellow');\nset('hello', function () {\n  return run(...)->toString();\n});\n\n```", "```php\ndesc('Foggyline task #1');\ntask('update', 'apt-get update');\n\ndesc('Foggyline task #2');\ntask('task_2', function () {\n  run(...);\n});\n\n```", "```php\nserver('mphp7_staging', 'mphp7.staging.foggyline.net')\n ->user('user')\n ->password('pass')\n ->set('deploy_path', '/home/www')\n ->set('branch', 'stage')\n ->stage('staging');\n\nserver('mphp7_prod', 'mphp7.foggyline.net')\n ->user('user')\n ->identityFile()\n ->set('deploy_path', '/home/www')\n ->set('branch', 'master')\n ->stage('production');\n\n```", "```php\ntask('deploy', [\n  'deploy:prepare',\n  'deploy:lock',\n  'deploy:release',\n  'deploy:update_code',\n  'deploy:shared',\n  'deploy:writable',\n  'deploy:vendors',\n  'deploy:clear_paths',\n  'deploy:symlink',\n  'deploy:unlock',\n  'cleanup',\n  'success' ]);\n\n```", "```php\ndep init\n\n```", "```php\n<?php namespace Deployer; require 'recipe/common.php';   // Configuration set('ssh_type', 'native'); set('ssh_multiplexing', true); set('repository', 'git@domain.com:username/repository.git'); set('shared_files', []); set('shared_dirs', []); set('writable_dirs', []);   // Servers   server('production', 'domain.com')\n ->user('username')\n ->identityFile() ->set('deploy_path', '/var/www/domain.com');   // Tasks   desc('Restart PHP-FPM service'); task('php-fpm:restart', function () {\n  // The user must have rights for restart service\n // /etc/sudoers: username ALL=NOPASSWD:/bin/systemctl restart php-fpm.service  run('sudo systemctl restart php-fpm.service'); }); after('deploy:symlink', 'php-fpm:restart'); desc('Deploy your project'); task('deploy', [\n  'deploy:prepare',\n  'deploy:lock',\n  'deploy:release',\n  'deploy:update_code',\n  'deploy:shared',\n  'deploy:writable',\n  'deploy:vendors',\n  'deploy:clear_paths',\n  'deploy:symlink',\n  'deploy:unlock',\n  'cleanup',\n  'success' ]); // [Optional] if deploy fails automatically unlock. after('deploy:failed', 'deploy:unlock');\n\n```", "```php\n<?php namespace Deployer; require 'recipe/common.php';   set('repository', 'https://github.com/ajzele/MPHP7-CH16.git');   server('production', '45.76.88.214')\n ->user('root')\n ->identityFile() ->set('deploy_path', '/var/www/MPHP7')\n ->set('branch', 'master')\n ->stage('production');   desc('Symlink html directory'); task('web:symlink', function () {\n run('ln -sf /var/www/MPHP7/current /var/www/html'); }); desc('Restart Apache service'); task('apache:restart', function () {\n run('service apache2 restart'); }); after('deploy:symlink', 'web:symlink'); after('web:symlink', 'apache:restart');   desc('Deploy your project'); task('deploy', [\n  'deploy:prepare',\n  'deploy:lock',\n  'deploy:release',\n  'deploy:update_code',\n  'deploy:shared',\n  'deploy:writable',\n  //'deploy:vendors',\n  'deploy:clear_paths',\n  'deploy:symlink',\n  'deploy:unlock',\n  'cleanup',\n  'success' ]); after('deploy:failed', 'deploy:unlock');\n\n```", "```php\ndep deploy production\n\n```"]