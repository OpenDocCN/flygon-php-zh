["```php\n**/path/to/app/**\n1 classes/\n2 tests/\n3 views/\n```", "```php\nfoo/bar/baz.php\n1 <?php\n2 // ... business logic ...\n3\n4 /* PRESENTATION */\n5 $response = new \\Mlaphp\\Response('/path/to/app/views');\n6 $response->setView('foo/bar/baz.html.php');\n7 $response->setVars(array());\n8 $response->send();\n9 ?>\n```", "```php\n1 <?php\n2 // ...\n3 $response->setVars(array(\n4 'id' => $id,\n5 'failure' => $article_transactions->getFailure(),\n6 'input' => $article_transactions->getInput(),\n7 'action' => $_SERVER['PHP_SELF'],\n8 ));\n9 // ...\n10 ?>\n```", "```php\n**unescaped.html.php**\n1 <form action=\"<?php\n2 echo $request->server['PHP_SELF'];\n3 ?>\" method=\"POST\">\n```", "```php\n**escaped.html.php**\n1 <form action=\"<?php\n2 echo htmlspecialchars(\n3 $request->server['PHP_SELF'],\n4 ENT_QUOTES,\n5 'UTF-8'\n6 );\n7 ?>\" method=\"POST\">\n```", "```php\n**escaped.php**\n1 <form action=\"<?php\n2 echo $this->esc($request->server['PHP_SELF']);\n3 ?>\" method=\"POST\">\n```", "```php\n**/path/to/app/tests/**\n1 bootstrap.php\n2 classes/\n3 phpunit.xml\n4 views/\n```", "```php\n**tests/phpunit.xml**\n1 <phpunit bootstrap=\"./bootstrap.php\">\n2 <testsuites>\n3 <testsuite>\n4 <directory>./classes</directory>\n5 <directory>./views</directory>\n6 </testsuite>\n7 </testsuites>\n8 </phpunit>\n```", "```php\n**tests/views/ArticlesHtmlTest.php**\n1 <?php\n2 class ArticlesHtmlTest extends \\PHPUnit_Framework_TestCase\n3 {\n4 protected $response;\n5 protected $output;\n6\n7 public function setUp()\n8 {\n9 $this->response = new \\Mlaphp\\Response('/path/to/app/views');\n10 $this->response->setView('articles.html.php');\n11 $this->response->setVars(\n12 'id' => '123',\n13 'failure' => array(),\n14 'action' => '/articles.php',\n15 'input' => array(\n16 'title' => 'Article Title',\n17 'body' => 'The body text of the article.',\n18 'max_ratings' => 5,\n19 'credits_per_rating' => 1,\n20 'notes' => '...',\n21 'ready' => 0,\n22 ),\n23 );\n24 $this->output = $this->response->requireView();\n25 }\n26\n27 public function testBasicView()\n28 {\n29 $expect = '';\n30 $this->assertSame($expect, $this->output);\n31 }\n32 }\n33 ?>\n```", "```php\n1 <?php\n2 public function assertOutputHas($expect)\n3 {\n4 if (strpos($this->output, $expect) === false) {\n5 $this->fail(\"Did not find expected output: $expect\");\n6 }\n7 }\n8\n9 public function testFormTag()\n10 {\n11 $expect = '<form method=\"POST\" action=\"/articles.php\">';\n12 $this->assertOutputHas($expect);\n13 }\n14 ?>\n```", "```php\n**foo.json.php**\n1 <?php\n2 header('Content-Type: application/json');\n3 setcookie('baz', 'dib');\n4 setrawcookie('zim', 'gir');\n5 echo json_encode($data);\n6 ?>\n```", "```php\n**foo.json.php**\n1 <?php\n2 $this->header('Content-Type: application/json');\n3 $this->setcookie('baz', 'dib');\n4 $this->setrawcookie('zim', 'gir');\n5 echo json_encode($data);\n6 ?>\n```", "```php\n**tests/views/FooJsonTest.php**\n1 <?php\n2 public function test()\n3 {\n4 // set up the response object\n5 $response = new \\Mlaphp\\Response('/path/to/app/views');\n6 $response->setView('foo.json.php');\n7 $response->setVars('data', array('foo' => 'bar'));\n8\n9 // invoke the view file and test its output\n10 $expect_body = '{\"foo\":\"bar\"}';\n11 $actual_body = $response->requireView();\n12 $this->assertSame($expect_output, $actual_output);\n13\n14 // test the buffered HTTP header calls\n15 $expect_headers = array(\n16 array('header', 'Content-Type: application/json'),\n17 array('setcookie', 'baz', 'dib'),\n18 array('setrawcookie', 'zim', 'gir'),\n19 );\n20 $actual_headers = $response->getHeaders();\n21 $this->assertSame($expect_output, $actual_output);\n22 }\n23 ?>\n```", "```php\n**foo.php**\n1 <?php\n2 // ... business logic ...\n3\n4 /* PRESENTATION */\n5 $template = new Template;\n6 $template->assign($this->getVars());\n7 $template->display('foo.tpl.php');\n8 ?>\n```", "```php\n**foo.php**\n1 <?php\n2 // ... business logic ...\n3\n4 /* PRESENTATION */\n5 $response = new Response('/path/to/app/views');\n6 $response->setView('foo.html.php');\n7 $response->setVars(array('foo' => $foo));\n8 $response->send();\n9 ?>\n```", "```php\n**foo.html.php**\n1 <?php\n2 // buffer calls to HTTP headers\n3 $this->setcookie('foo', 'bar');\n4 $this->setrawcookie('baz', 'dib');\n5\n6 // set up the template object with Response vars\n7 $template = new Template;\n8 $template->assign($this->getVars());\n9\n10 // display the template\n11 $template->display('foo.tpl.php');\n12 ?>\n```", "```php\n**classes/FileStreamer.php**\n1 <?php\n2 class FileStreamer\n3 {\n4 public function send($file, $dest = STDOUT)\n5 {\n6 $fh = fopen($file, 'rb');\n7 while (! feof($fh)) {\n8 $data = fread($fh, 8192);\n9 fwrite($dest, $data);\n10 }\n11 fclose($fh);\n12 }\n13 }\n14 ?>\n```", "```php\n**foo.php**\n1 <?php\n2 // ... business logic ...\n3 $file_streamer = new FileStreamer;\n4 $image_file = '/path/to/picture.tiff';\n5 $content_type = 'image/tiff';\n6\n7 /* PRESENTATION */\n8 $response = new Response('/path/to/app/views');\n9 $response->setView('foo.stream.php');\n10 $response->setVars(array(\n11 'streamer' => $file_streamer,\n12 'file' => $image_file,\n13 'type' => $content_type,\n14 ));\n15 ?>\n```", "```php\n**views/foo.stream.php**\n1 <?php\n2 $this->header(\"Content-Type: {$type}\");\n3 $this->setLastCall(array($streamer, 'send'), $file);\n4 ?>\n```", "```php\n**header.php**\n1 <html>\n2 <head>\n3 <title><?php\n4 echo $this->esc($page_title);\n5 ?></title>\n6 <link rel=\"stylesheet\" href=\"<?php\n7 echo $this->esc($page_style);\n8 ?>\"></link>\n9 </head>\n10 <body>\n11 <h1><?php echo $this->esc($page_title); ?></h1>\n12 <div id=\"navigation\">\n13 <ul>\n14 <?php foreach ($site_nav as $nav_item) {\nExtract Presentation Logic To View Files 117\n15 $href = $this->esc($nav_item['href']);\n16 $name = $this->esc($nav_item['name']);\n17 echo '<li><a href=\"' . $href\n18 . '\"/a>' . $name\n19 . '</li>' . PHP_EOL;\n20 }?>\n21 </ul>\n22 </div>\n23 <!-- end of header.php -->\n```", "```php\nclasses/HeaderDisplay.php\n1 <?php\n2 class HeaderDisplay\n3 {\n4 public $page_title;\n5 public $page_style;\n6 public $site_nav;\n7 }\n8 ?>\n```", "```php\n1 <?php\n2 public function namesAndRoles($list)\n3 {\n4 echo \"<p>Names and roles:</p>\";\n5 foreach ($list as $item) {\n6 echo \"<dl>\";\n7 echo \"<dt>Name</dt><dd>{$item['name']}</dd>\";\n8 echo \"<dt>Role</dt><dd>{$item['role']}</dd>\";\n9 echo \"</dl>\";\n10 }\n11 }\n12 ?>\n```", "```php\n1 <?php\n2 public function namesAndRoles($list)\n3 {\n4 $html = \"<p>Names and roles:</p>\";\n5 foreach ($list as $item) {\n6 $name = htmlspecialchars($item['name'], ENT_QUOTES, 'UTF-8');\n7 $role = htmlspecialchars($item['role'], ENT_QUOTES, 'UTF-8');\n8 $html .= \"<dl>\";\n9 $html .= \"<dt>Name</dt><dd>{$name}</dd>\";\n10 $html .= \"<dt>Role</dt><dd>{$role}</dd>\";\n11 $html .= \"</dl>\";\n12 }\n13 return $html;\n14 }\n15 ?>\n```", "```php\n1 <?php\n2 /* PRESENTATION */\n3 foreach ($post_transactions->fetchTopTenPosts() as $post) {\n4 echo \"{$post['title']} has \"\n5 . $comment_transactions->fetchCountForPost($post['id'])\n6 . \" comments.\";\n7 }\n8 ?>\n```", "```php\n1 <?php\n2 // ...\n3 $posts = $post_transactions->fetchTopTenPosts();\n4 foreach ($posts as &$post) {\n5 $count = $comment_transactions->fetchCountForPost($post['id']);\n6 $post['comment_count'] = $count;\n7 }\n8 // ...\n9\n10 /* PRESENTATION */\n11 foreach ($posts as $post) {\n12 $title = $this->esc($post['title']);\n13 $comment_count = $this->esc($post['comment_count']);\n14 echo \"{$title} has {$comment_count} comments.\"\n15 }\n16 ?>\n```"]