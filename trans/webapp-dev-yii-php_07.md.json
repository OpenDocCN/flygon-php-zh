["```php\n/**\n * @return array action filters\n */\npublic function filters()\n{\nreturn array(\n'accessControl', // perform access control for CRUD operations\n);\n}\n```", "```php\n/**\n * @return array action filters\n */\npublic function filters()\n{\nreturn array(\n'accessControl', // perform access control for CRUD operations\n);\n}\n```", "```php\n/**\n* Specifies the access control rules.\n* This method is used by the 'accessControl' filter.\n* @return array access control rules\n*/\npublic function accessRules()\n{\nreturn array(\narray('allow',  // allow all users to perform 'index' and 'view' actions\n'actions'=>array('index','view'),\n'users'=>array('*'),\n),\narray('allow', // allow authenticated user to perform 'create' and 'update' actions\n'actions'=>array('create','update'),\n'users'=>array('@'),\n),\narray('allow', // allow admin user to perform 'admin' and 'delete' actions\n'actions'=>array('admin','delete'),\n'users'=>array('admin'),\n),\narray('deny',  // deny all users\n'users'=>array('*'),\n),\n);\n}\n```", "```php\narray('allow',  // allow all users to perform 'index' and 'view' actions\n'actions'=>array('index','view'),\n'users'=>array('*'),\n),\n```", "```php\narray('allow', // allow authenticated user to perform 'create' and 'update' actions\n'actions'=>array('create','update'),\n'users'=>array('@'),\n),\n```", "```php\narray('allow', // allow admin user to perform 'admin' and 'delete' actions\n'actions'=>array('admin','delete'),\n'users'=>array('admin'),\n),\n```", "```php\narray('deny',  // deny all users\n'users'=>array('*'),\n),\n```", "```php\n/**\n * Specifies the access control rules.\n * This method is used by the 'accessControl' filter.\n * @return array access control rules\n */\npublic function accessRules()\n{\nreturn array(\narray('allow',  // allow all users to perform 'index' and 'view' actions\n**'controllers'=>array('issue','project','user'),**\n'actions'=>array('index','view'),\n**'users'=>array('@'),**\n),\narray('allow', // allow authenticated user to perform 'create' and 'update' actions\n**'controllers'=>array('issue','project','user'),**\n'actions'=>array('create','update'),\n'users'=>array('@'),\n),\narray('allow', // allow admin user to perform 'admin' and 'delete' actions\n**'controllers'=>array('issue','project','user'),**\n'actions'=>array('admin','delete'),\n'users'=>array('admin'),\n),\narray('deny',  // deny all users\n**'controllers'=>array('issue','project','user'),**\n'users'=>array('*'),\n),\n);\n}\n```", "```php\n// application components\n'components'=>array(\n\u2026\n'authManager'=>array(\n'class'=>'CDbAuthManager',\n'connectionID'=>'db',\n),\n```", "```php\n**$ cd /Webroot/trackstar/protected**\n**$ ./yiic migrate create create_rbac_tables**\n\n```", "```php\npublic function up()\n{\n//create the auth item table\n$this->createTable('tbl_auth_item', array(\n'name' =>'varchar(64) NOT NULL',\n'type' =>'integer NOT NULL',\n'description' =>'text',\n'bizrule' =>'text',\n'data' =>'text',\n'PRIMARY KEY (`name`)',\n), 'ENGINE=InnoDB');\n\n//create the auth item child table\n$this->createTable('tbl_auth_item_child', array(\n'parent' =>'varchar(64) NOT NULL',\n'child' =>'varchar(64) NOT NULL',\n'PRIMARY KEY (`parent`,`child`)',\n), 'ENGINE=InnoDB');\n\n//the tbl_auth_item_child.parent is a reference to tbl_auth_item.name\n$this->addForeignKey(\"fk_auth_item_child_parent\", \"tbl_auth_item_child\", \"parent\", \"tbl_auth_item\", \"name\", \"CASCADE\", \"CASCADE\");\n\n//the tbl_auth_item_child.child is a reference to tbl_auth_item.name\n$this->addForeignKey(\"fk_auth_item_child_child\", \"tbl_auth_item_child\", \"child\", \"tbl_auth_item\", \"name\", \"CASCADE\", \"CASCADE\");\n\n//create the auth assignment table\n$this->createTable('tbl_auth_assignment', array(\n'itemname' =>'varchar(64) NOT NULL',\n'userid' =>'int(11) NOT NULL',\n'bizrule' =>'text',\n'data' =>'text',\n'PRIMARY KEY (`itemname`,`userid`)',\n), 'ENGINE=InnoDB');\n\n//the tbl_auth_assignment.itemname is a reference \n//to tbl_auth_item.name\n$this->addForeignKey(\n\"fk_auth_assignment_itemname\", \n\"tbl_auth_assignment\", \n\"itemname\", \n\"tbl_auth_item\", \n\"name\", \n\"CASCADE\", \n\"CASCADE\"\n);\n\n//the tbl_auth_assignment.userid is a reference \n//to tbl_user.id\n$this->addForeignKey(\n\"fk_auth_assignment_userid\", \n\"tbl_auth_assignment\", \n\"userid\", \n\"tbl_user\", \n\"id\", \n\"CASCADE\", \n\"CASCADE\"\n);\n}\n\npublic function down()\n{\n$this->truncateTable('tbl_auth_assignment');\n$this->truncateTable('tbl_auth_item_child');\n$this->truncateTable('tbl_auth_item');\n$this->dropTable('tbl_auth_assignment');\n$this->dropTable('tbl_auth_item_child');\n$this->dropTable('tbl_auth_item');\n}\n```", "```php\n**$ ./yiic migrate**\n\n```", "```php\n// application components\n'components'=>array(\n\u2026\n'authManager'=>array(\n'class'=>'CDbAuthManager',\n'connectionID'=>'db',\n'itemTable' =>'tbl_auth_item',\n'itemChildTable' =>'tbl_auth_item_child',\n'assignmentTable' =>'tbl_auth_assignment',\n),\n```", "```php\n$auth=Yii::app()->authManager;  \n$role=$auth->createRole('owner');\n$auth->createOperation('createProject','create a new project');    \n$role->addChild('createProject');\n```", "```php\n'authManager'=>array(\n'class'=>'CDbAuthManager',\n'connectionID'=>'db',\n'itemTable' =>'tbl_auth_item',\n'itemChildTable' =>'tbl_auth_item_child',\n'assignmentTable' =>'tbl_auth_assignment',\n),\n```", "```php\n**$ ./yiic rbac delete**\n\n```", "```php\n**$auth=Yii::app()->authManager;**\n**$auth->assign('member',1);**\n\n```", "```php\nif( Yii::app()->user->checkAccess('createIssue'))\n{\n     //perform needed logic\n}\n```", "```php\n**$ cd /Webroot/trackstar/protected/**\n**$ ./yiic migrate create add_role_to_tbl_project_user_assignment**\n\n```", "```php\npublic function up()\n{\n$this->addColumn('tbl_project_user_assignment', 'role', 'varchar(64)');\n//the tbl_project_user_assignment.role is a reference \n     //to tbl_auth_item.name\n$this->addForeignKey('fk_project_user_role', 'tbl_project_user_assignment', 'role', 'tbl_auth_item', 'name', 'CASCADE', 'CASCADE');\n}\n\npublic function down()\n{\n$this->dropForeignKey('fk_project_user_role', 'tbl_project_user_assignment');\n$this->dropColumn('tbl_project_user_assignment', 'role');\n}\n```", "```php\n$bizRule='return isset($params[\"project\"]) && $params[\"project\"]->isUserInRole(\"owner\");';\n```", "```php\n//add the project AR instance to the input params\n$params=array('project'=>$project);\n//pass in the params to the checkAccess call\nif(Yii::app()->user->checkAccess('createIssue',$params))\n{\n     //proceed with issue creation logic\n}\n```", "```php\npublic function assignUser($userId, $role)\n{\n$command = Yii::app()->db->createCommand();\n$command->insert('tbl_project_user_assignment', array(\n'role'=>$role,\n'user_id'=>$userId,\n'project_id'=>$this->id,\n));\n}\n```", "```php\npublic function removeUser($userId)\n{\n$command = Yii::app()->db->createCommand();\n$command->delete(\n'tbl_project_user_assignment', \n'user_id=:userId AND project_id=:projectId', \narray(':userId'=>$userId,':projectId'=>$this->id));\n}\n```", "```php\npublic function allowCurrentUser($role)\n{\n$sql = \"SELECT * FROM tbl_project_user_assignment WHERE project_id=:projectId AND user_id=:userId AND role=:role\";\n$command = Yii::app()->db->createCommand($sql);\n$command->bindValue(\":projectId\", $this->id, PDO::PARAM_INT);\n$command->bindValue(\":userId\", Yii::app()->user->getId(), PDO::PARAM_INT);\n$command->bindValue(\":role\", $role, PDO::PARAM_STR);\nreturn $command->execute()==1;\n}\n```", "```php\n   /**\n * Returns an array of available roles in which a user can be placed when being added to a project\n */\npublic static function getUserRoleOptions()\n{\nreturn CHtml::listData(Yii::app()->authManager->getRoles(), 'name', 'name');\n} \n\n/* \n * Determines whether or not a user is already part of a project\n */\npublic function isUserInProject($user) \n{\n$sql = \"SELECT user_id FROM tbl_project_user_assignment WHERE project_id=:projectId AND user_id=:userId\";\n$command = Yii::app()->db->createCommand($sql);\n$command->bindValue(\":projectId\", $this->id, PDO::PARAM_INT);\n$command->bindValue(\":userId\", $user->id, PDO::PARAM_INT);\nreturn $command->execute()==1;\n}\n```", "```php\nclass ProjectUserForm extends CFormModel\n{\n\u2026\n      public function assign()\n{\nif($this->_user instanceof User)\n{\n//assign the user, in the specified role, to the project\n$this->project->assignUser($this->_user->id, $this->role);  \n//add the association, along with the RBAC biz rule, to our RBAC hierarchy\n        $auth = Yii::app()->authManager; \n$bizRule='return isset($params[\"project\"]) && $params[\"project\"]->allowCurrentUser(\"'.$this->role.'\");';  \n$auth->assign($this->role,$this->_user->id, $bizRule);\n                  return true;\n}\n            else\n{\n$this->addError('username','Error when attempting to assign this user to the project.'); \nreturn false;\n}\n      }\n```", "```php\n$auth = Yii::app()->authManager; \n$bizRule='return isset($params[\"project\"]) && $params[\"project\"]->isUserInRole(\"'.$this->role.'\");';\n$auth->assign($this->role,$user->id, $bizRule);\n```", "```php\n     /**\n * Provides a form so that project administrators can\n * associate other users to the project\n */\npublic function actionAdduser($id)\n{\n  $project = $this->loadModel($id);\n  if(!Yii::app()->user->checkAccess('createUser', array('project'=>$project)))\n{\n  throw new CHttpException(403,'You are not authorized to perform this action.');\n}\n\n  $form=new ProjectUserForm; \n  // collect user input data\n  if(isset($_POST['ProjectUserForm']))\n  {\n    $form->attributes=$_POST['ProjectUserForm'];\n    $form->project = $project;\n    // validate user input  \n    if($form->validate())  \n    {\n        if($form->assign())\n      {\n       Yii::app()->user->setFlash('success',$form->username . \" has been added to the project.\" ); \n       //reset the form for another user to be associated if desired\n      $form->unsetAttributes();\n      $form->clearErrors();\n      }\n    }\n  }\n$form->project = $project;\n$this->render('adduser',array('model'=>$form)); \n}\n```", "```php\npublic function accessRules()\n{\nreturn array(\narray('allow',  // allow all users to perform 'index' and 'view' actions\n'controllers'=>array('issue','project','user'),\n'actions'=>array('index','view',**'addUser'**),\n'users'=>array('@'),\n),\n```", "```php\n<?php\n$this->pageTitle=Yii::app()->name . ' - Add User To Project';\n$this->breadcrumbs=array(\n$model->project->name=>array('view','id'=>$model->project->id),\n'Add User',\n);\n$this->menu=array(\narray('label'=>'Back To Project', 'url'=>array('view','id'=>$model->project->id)),\n);\n?>\n\n<h1>Add User To <?php echo $model->project->name; ?></h1>\n\n**<?php if(Yii::app()->user->hasFlash('success')):?>**\n**<div class=\"successMessage\">**\n**<?php echo Yii::app()->user->getFlash('success'); ?>**\n**</div>**\n**<?phpendif; ?>**\n\n<div class=\"form\">\n<?php $form=$this->beginWidget('CActiveForm'); ?>\n\n<p class=\"note\">Fields with <span class=\"required\">*</span> are required.</p>\n\n<div class=\"row\">\n<?php echo $form->labelEx($model,'username'); ?>\n<?php\n$this->widget('zii.widgets.jui.CJuiAutoComplete', array(\n'name'=>'username',\n'source'=>$model->createUsernameList(),\n'model'=>$model,\n'attribute'=>'username',\n'options'=>array(\n'minLength'=>'2',\n),\n'htmlOptions'=>array(\n'style'=>'height:20px;'\n),\n));\n?>\n<?php echo $form->error($model,'username'); ?>\n</div>\n\n<div class=\"row\">\n<?php echo $form->labelEx($model,'role'); ?>\n<?php\necho $form->dropDownList($model,'role', \nProject::getUserRoleOptions()); ?>\n<?php echo $form->error($model,'role'); ?>\n</div>\n\n<div class=\"row buttons\">\n<?php echo CHtml::submitButton('Add User'); ?>\n</div>\n\n<?php $this->endWidget(); ?>\n</div>\n```", "```php\n$this->menu=array(\n\u2026\narray('label'=>'Add User To Project', 'url'=>array('project/adduser', 'id'=>$model->id)),\n);\n```", "```php\n$this->menu=array(\narray('label'=>'List Project', 'url'=>array('index')),\narray('label'=>'Create Project', 'url'=>array('create')),\narray('label'=>'Update Project', 'url'=>array('update', 'id'=>$model->id)),\narray('label'=>'Delete Project', 'url'=>'#', 'linkOptions'=>array('submit'=>array('delete','id'=>$model->id),'confirm'=>'Are you sure you want to delete this item?')),\narray('label'=>'Manage Project', 'url'=>array('admin')),\narray('label'=>'Create Issue', 'url'=>array('issue/create', 'pid'=>$model->id)),\n\n);\nif(Yii::app()->user->checkAccess('createUser',array('project'=>$model)))\n{\n$this->menu[] = array('label'=>'Add User To Project', 'url'=>array('adduser', 'id'=>$model->id));\n}\n```", "```php\npublic function actionAdduser($id)\n{\n$project = $this->loadModel($id);\nif(!Yii::app()->user->checkAccess('createUser', array('project'=>$project)))\n{\nthrow new CHttpException(403,'You are not authorized to perform this action.');\n}\n\n$form=new ProjectUserForm; \n```"]