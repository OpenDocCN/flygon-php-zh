["```php\n{\n\u2014_id\u2014 : \u2014_design/application\u2014,\n\"_rev\" : \"3-71c0b0bd73a9c9a45ea738f1e9612798\",\n\"views\" : {\n\"example\" : {\n\"map\" : \"function(doc){ emit(doc._id, doc)}\"\n}\n}\n}\n\n```", "```php\n\uff0dexample\uff0d : {\n\uff0dmap\uff0d : \uff0dfunction(doc){ emit(doc._id, doc)}\uff0d\n}\n\n```", "```php\n    function(doc) {\n    emit(doc._id, doc)\n    }\n\n    ```", "```php\n    function(doc) {\n    if (doc.type == 'post') {\n    emit(doc._id, doc);\n    }\n    }\n\n    ```", "```php\n**Warning: Please note that temporary views that we'll create are not suitable for use in production and will respond much slower as your data increases. It's recommended that you use temporary views in experimentation and development, but switch to a permanent view before using them in an application.** \n\n```", "```php\n    function(doc) {\n    if (doc.type == 'post') {\n    emit(doc.user, doc);\n    }\n    }\n\n    ```", "```php\n    **curl http://127.0.0.1:5984/verge/_design/application/_view/posts_by_user?key=%22johndoe%22 | python -mjson.tool** \n\n    ```", "```php\n    {\n    \"offset\": 0,\n    \"rows\": [\n    {\n    \"id\": \"352e5c2d51fb1293c44a2146d4003aa3\",\n    \"key\": \"johndoe\",\n    \"value\": {\n    \"_id\": \"352e5c2d51fb1293c44a2146d4003aa3\",\n    \"_rev\": \"3-ced38337602bd6c0587dc2d9792f6cff\",\n    \"content\": \"I don\\\\'t like peanut butter.\",\n    \"date_created\": \"Wed, 28 Sep 2011 13:44:09 -0700\",\n    \"type\": \"post\",\n    \"user\": \"johndoe\"\n    }\n    },\n    {\n    \"id\": \"d3dd453dbfefab8c8ea62a7efe000fad\",\n    \"key\": \"johndoe\",\n    \"value\": {\n    \"_id\": \"d3dd453dbfefab8c8ea62a7efe000fad\",\n    \"_rev\": \"2-07c7502eecb088aad5ee8bd4bc6371d1\",\n    \"content\": \"I do!\\r\\n\",\n    \"date_created\": \"Mon, 17 Oct 2011 21:36:18 -0700\",\n    \"type\": \"post\",\n    \"user\": \"johndoe\"\n    }\n    }\n    ],\n    \"total_rows\": 4\n    }\n\n    ```", "```php\n    **curl 'http://127.0.0.1:5984/verge/_design/application/_view/posts_by_user?key=%22johndoe%22&limit=1'| python -mjson.tool** \n\n    ```", "```php\n    {\n    \"offset\": 0,\n    \"rows\": [\n    {\n    \"id\": \"352e5c2d51fb1293c44a2146d4003aa3\",\n    \"key\": \"johndoe\",\n    \"value\": {\n    \"_id\": \"352e5c2d51fb1293c44a2146d4003aa3\",\n    \"_rev\": \"3-ced38337602bd6c0587dc2d9792f6cff\",\n    \"content\": \"I don\\\\'t like peanut butter.\",\n    \"content\": \"I don\\\\'t like peanut butter.\",\n    \"date_created\": \"Wed, 28 Sep 2011 13:44:09 -0700\",\n    \"type\": \"post\",\n    \"user\": \"johndoe\"\n    }\n    }\n    ],\n    \"total_rows\": 4\n    }\n\n    ```", "```php\n    **curl 'http://127.0.0.1:5984/verge/_design/application/_view/posts_by_user?key=%22johndoe%22&limit=1&descending=true'| python -mjson.tool** \n\n    ```", "```php\n    {\n    \"offset\": 2,\n    \"rows\": [\n    {\n    \"id\": \"d3dd453dbfefab8c8ea62a7efe000fad\",\n    \"key\": \"johndoe\",\n    \"value\": {\n    \"_id\": \"d3dd453dbfefab8c8ea62a7efe000fad\",\n    \"_rev\": \"2-07c7502eecb088aad5ee8bd4bc6371d1\",\n    \"content\": \"I do!\\r\\n\",\n    \"date_created\": \"Mon, 17 Oct 2011 21:36:18 -0700\",\n    \"type\": \"post\",\n    \"user\": \"johndoe\"\n    }\n    }\n    ],\n    \"total_rows\": 4\n    }\n\n    ```", "```php\n    public function get_posts_by_user($username) {\n    }\n\n    ```", "```php\n    public function get_posts_by_user($username) {\n    **$bones = new Bones();\n    $posts = array();\n    return $posts;** \n    }\n\n    ```", "```php\n    public function get_posts_by_user($username) {\n    $bones = new Bones();\n    $posts = array();\n    **foreach ($bones->couch- >get('_design/application/_view/posts_by_user?key=\"' . $username . '\"&descending=true')->body->rows as $_post) {\n    }** \n    return $posts;\n    }\n\n    ```", "```php\n    public function get_posts_by_user($username) {\n    $bones = new Bones();\n    $posts = array();\n    foreach ($bones->couch- >get('_design/application/_view/posts_by_user?key=\"' . $username . '\"')->body->rows as $_post) {\n    **$post = new Post();\n    $post->_id = $_post->id;\n    $post->date_created = $_post->value->date_created;\n    $post->content = $_post->value->content;\n    $post->user = $_post->value->user;\n    array_push($posts, $post);\n    }** \n    return $posts;\n    }\n\n    ```", "```php\n    get('/user/:username', function($app) {\n    $app->set('user', User::find_by_username($app- >request('username')));\n    $app->set('is_current_user', ($app->request('username') == User::current_user() ? true : false));\n    **$app->set('posts', Post::get_posts_by_user($app- >request('username')));** \n    $app->render('user/profile');\n    });\n\n    ```", "```php\n    <h2>Posts</h2>\n    **<?php foreach ($posts as $post): ?>\n    <div class=\"post-item row\">\n    <div class=\"span7\">\n    <strong><?php echo $user->name; ?></strong>\n    <p>\n    <?php echo $post->content; ?>\n    </p>\n    <?php echo $post->date_created; ?>\n    </div>\n    <div class=\"span1\">\n    <a href=#\">(Delete)</a>\n    </div>\n    <div class=\"span8\"></div>\n    </div>** \n    <?php endforeach; ?>\n\n    ```", "```php\n    .post-item {padding: 10px 0 10px 0;}\n    .post-item .span8 {margin-top: 20px; border-bottom: 1px solid #ccc;}\n    .post-item .span1 a {color:red;}\n\n    ```", "```php\n{\n\"_id\": \"_design/application\",\n\"_rev\": \"3-71c0b0bd73a9c9a45ea738f1e9612798\",\n\"language\": \"javascript\",\n\"views\": {\n\"posts_by_user\": {\n\"map\": \"function(doc) {emit(doc.user, doc)}\",\n**\"reduce\": \"_count\"** \n}\n}\n}\n\n```", "```php\n    public function get_posts_by_user($username) {\n    $bones = new Bones();\n    $posts = array();\n    **foreach ($bones->couch- >get('_design/application/_view/posts_by_user?key=\"' . $username . '\"&descending=true&reduce=false')->body->rows as $_post) {** \n\n    ```", "```php\n    public function get_post_count_by_user($username) {\n    }\n\n    ```", "```php\n    public function get_post_count_by_user($username) {\n    **$bones = new Bones();\n    $rows = $bones->couch- >get('_design/application/_view/posts_by_user?key=\"' . \" $username . '\"&reduce=true')->body->rows;\n    if ($rows) {\n    return $rows[0]->value;\n    } else {\n    return 0;\n    }** \n    }\n\n    ```", "```php\n    get('/user/:username', function($app) {\n    $app->set('user', User::get_by_username($app- >request('username')));\n    $app->set('is_current_user', ($app->request('username') == User::current_user() ? true : false));\n    $app->set('posts', Post::get_posts_by_user($app- >request('username')));\n    **$app->set('post_count', Post::get_post_count_by_user($app- >request('username')));** \n    $app->render('user/profile');\n    });\n\n    ```", "```php\n    <h2>Posts (<?php echo $post_count; ?>)</h2>\n\n    ```", "```php\n    abstract class Base\n    {\n    protected $_id;\n    **protected $_rev;** \n    protected $type;\n\n    ```", "```php\n    public function to_json() {\n    **if (isset($this->_rev) === false) {\n    unset($this->_rev);\n    }** \n    return json_encode(get_object_vars($this));\n    }\n\n    ```", "```php\n    public function get_posts_by_user($username) {\n    $bones = new Bones();\n    $posts = array();\n    foreach $bones->couch- >get('_design/application/_view/posts_by_user?key=\"' . $username . '\"&descending=true&reduce=false')->body->rows as $_post) {\n    $post = new Post();\n    $post->_id = $_post->value->_id;\n    **$post->_rev = $_post->value->_rev;** \n    $post->date_created = $_post->value->date_created;\n\n    ```", "```php\n    public function delete() {\n    $bones = new Bones();\n    try {\n    $bones->couch->delete($this->_id, $this->_rev);\n    }\n    catch(SagCouchException $e) {\n    $bones->error500($e);\n    }\n    }\n\n    ```", "```php\n    get('/post/delete/:id/:rev', function($app) {\n    $post = new Post();\n    $post->_id = $app->request('id');\n    $post->_rev = $app->request('rev'\n    $post->delete();\n    $app->set('success', 'Your post has been deleted');\n    $app->redirect('/user/' . User::current_user());\n    });\n\n    ```", "```php\n    <?php foreach ($posts as $post): ?>\n    <div class=\"post-item row\">\n    <div class=\"span7\">\n    <strong><?php echo $user->name; ?></strong>\n    <p>\n    <?php echo $post->content; ?>\n    </p>\n    <?php echo $post->date_created; ?>\n    </div>\n    <div class=\"span1\">\n    **<a href=\"<?php echo $this->make_route('/post/delete/' . $post->_id . '/' . $post->_rev)?>\" class=\"delete\">\n    (Delete)\n    </a>** \n    </div>\n    <div class=\"span8\"></div>\n    </div>\n    <?php endforeach; ?>\n\n    ```", "```php\n{\n\"_id\": \"_design/application\",\n\"_rev\": \"3-71c0b0bd73a9c9a45ea738f1e9612798\",\n\"language\": \"javascript\",\n**\"validate_doc_update\": \"function(newDoc, oldDoc, userCtx) { //JavaScript Code }\",** \n\"views\": {\n\"posts_by_user\": {\n\"map\": \"function(doc) {emit(doc.user, doc)}\",\n\"reduce\": \"_count\"\n}\n}\n}\n\n```", "```php\nfunction(newDoc, oldDoc, userCtx) { //JavaScript Code }\n\n```", "```php\n    function(newDoc, oldDoc, userCtx) {\n    if (newDoc.user) {\n    if(newDoc.user != userCtx.name) {\n    throw({\"forbidden\": \"You may only update this document with user \" + userCtx.name});\n    }\n    }\n    }\n\n    ```", "```php\n    if (newDoc.user).\n\n    ```", "```php\n    if(newDoc.user != userCtx.name).\n\n    ```", "```php\n    throw({\"forbidden\": \"You may only update this document with user \" + userCtx.name});\n\n    ```", "```php\nfunction(newDoc, oldDoc, userCtx) {\nif (newDoc.type == \"post\") {\n// validation logic for posts\n}\nif (newDoc.type == \"comment\") {\n// validation logic for comments\n}\n}\n\n```", "```php\n    <div class=\"span1\">\n    <?php if ($is_current_user) { ?>\n    <a href=\"<?php echo $this->make_route('/post/delete/' . $post-\n    >\n    _id . '/' . $post->_rev)?>\" class=\"delete\">(Delete)\n    </a>\n    <?php } ?>\n    </div>\n\n    ```"]