- en: Chapter 5. Backend Development
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章。后端开发
- en: In the previous chapter, we added all the frontend functionality for the gift
    registry. Now customers are able to create registries and add products to the
    customer registries, and in general have full control over their own registries.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们为礼品注册表添加了所有前端功能。现在客户能够创建注册表并向客户注册表添加产品，并且通常可以完全控制自己的注册表。
- en: In this chapter, we are going to build all the functionalities that store owners
    need to manage and control the registries through the backend of Magento.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将构建所有商店所有者需要通过Magento后端管理和控制注册表的功能。
- en: Magento backend can be considered in many senses a separate application from
    the frontend of Magento; it uses a completely separate theme, style, and a different
    base controller.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Magento后端在许多方面可以被视为与Magento前端分开的应用程序；它使用完全不同的主题、样式和不同的基本控制器。
- en: 'For our gift registry, we want to allow store owners to see all customer registries,
    modify the information, and add and remove items. In this chapter, we will cover
    the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的礼品注册表，我们希望允许商店所有者查看所有客户注册表，修改信息，并添加和删除项目。在本章中，我们将涵盖以下内容：
- en: Extending the Adminhtml with configuration
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用配置扩展Adminhtml
- en: Using the grid widget
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用网格小部件
- en: Using the form widget
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用表单小部件
- en: Restricting access and permissions with Access Control Lists
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用访问控制列表限制访问和权限
- en: Extending the Adminhtml
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展Adminhtml
- en: '`Mage_Adminhtml` is a single module that provides all the backend functionalities
    for Magento through the usage of configuration. As we learned before, Magento
    uses scopes for defining the configuration. In the previous chapter, we used the
    frontend scope to set up the configuration for our custom module.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`Mage_Adminhtml`是一个单一模块，通过使用配置提供Magento的所有后端功能。正如我们之前学到的，Magento使用范围来定义配置。在上一章中，我们使用前端范围来设置我们自定义模块的配置。'
- en: 'To modify the backend, we need to create a new scope in our configuration file
    called `admin`. Perform the following steps to do so:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改后端，我们需要在配置文件中创建一个名为`admin`的新范围。执行以下步骤来完成：
- en: Open the `config.xml` file, which can be found at the location `app/code/loca/Mdg/Giftregistry/etc/`.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`config.xml`文件，可以在`app/code/loca/Mdg/Giftregistry/etc/`位置找到。
- en: 'Add the following code to it:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到其中：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This code is very similar to the one we used before to specify our frontend
    route; however, by declaring the route this way we are breaking an unwritten Magento
    design pattern.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码与我们以前用来指定前端路由的代码非常相似；然而，通过这种方式声明路由，我们正在打破一个未写的Magento设计模式。
- en: In order to keep things consistent on the backend, all new modules should extend
    the main admin route.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在后端保持一致，所有新模块都应该扩展主管理路由。
- en: Instead of defining the route with the previous code, we are creating a completely
    new admin route. Normally, you don't want to do this for the Magento backend unless
    you are creating a new route that requires admin access but not the rest of the
    Magento backend. A callback URL for an admin action would be a good example of
    something like this.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 与以前的代码定义路由不同，我们正在创建一个全新的管理路由。通常情况下，除非您正在创建一个需要管理员访问但不需要Magento后端其余部分的新路由，否则不要在Magento后端这样做。管理员操作的回调URL就是这种情况的一个很好的例子。
- en: Fortunately, there is a very easy way to share route names among Magento modules.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有一种非常简单的方法可以在Magento模块之间共享路由名称。
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Sharing route names was introduced in Magento 1.3 but to this day, we still
    see extensions that don't use this pattern properly.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在Magento 1.3中引入了共享路由名称，但直到今天，我们仍然看到一些扩展没有正确使用这种模式。
- en: 'Let''s update our code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更新我们的代码：
- en: Open the `config.xml` file, which can be found at the location `app/code/loca/Mdg/Giftregistry/etc/`.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`config.xml`文件，可以在`app/code/loca/Mdg/Giftregistry/etc/`位置找到。
- en: 'Update the routes configuration with the following code:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码更新路由配置：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: After making this change, we can properly access our admin controllers through
    the admin namespace; for example, `http://magento.localhost.com/giftregistry/index`
    would now be `http://magento.localhost.com/admin/giftregistry/index`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 做出这些改变后，我们可以通过管理命名空间正确访问我们的管理控制器；例如，`http://magento.localhost.com/giftregistry/index`现在将是`http://magento.localhost.com/admin/giftregistry/index`。
- en: 'Our next step will be to create a new controller that we can use to manage
    the customer registries. We will call this controller `GiftregistryController.php`.
    Perform the following steps to do so:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步将是创建一个新的控制器，我们可以用来管理客户注册表。我们将把这个控制器称为`GiftregistryController.php`。执行以下步骤来完成：
- en: Navigate to your module controllers folder.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的模块控制器文件夹。
- en: Create a new folder called `Adminhtml`.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Adminhtml`的新文件夹。
- en: Create the file called `GiftregistryController.php` at the location `app/code/loca/Mdg/Giftregistry/controllers/Adminhtml/`.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app/code/loca/Mdg/Giftregistry/controllers/Adminhtml/`位置创建名为`GiftregistryController.php`的文件。
- en: 'Add the following code to it:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到其中：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Notice something important: this new controller extends `Mage_Adminhtml_Controller_Action`
    instead of `Mage_Core_Controller_Front_Action`, which we had been using so far.
    The reason for this is that the `Adminhtml` controller has additional validation
    to prevent non-admin users to access their actions.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意一个重要的事情：这个新控制器扩展了`Mage_Adminhtml_Controller_Action`而不是我们到目前为止一直在使用的`Mage_Core_Controller_Front_Action`。这样做的原因是`Adminhtml`控制器具有额外的验证，以防止非管理员用户访问它们的操作。
- en: Notice that we are placing our controller inside a new subfolder inside the
    `controllers/` directory; by using this subdirectory, we are keeping the frontend
    and backend controllers organized. This is a widely accepted Magento standard
    practice.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们将我们的控制器放在`controllers/`目录内的一个新子文件夹中；通过使用这个子目录，我们可以保持前端和后端控制器的组织。这是一个被广泛接受的Magento标准实践。
- en: For now, let's leave this blank controller alone, and let's extend the Magento
    backend navigation and add some extra tabs to the customer edit page.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们暂时不管这个空控制器，让我们扩展Magento后端导航并向客户编辑页面添加一些额外的选项卡。
- en: Back to the configuration
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回到配置
- en: 'As we have seen so far, most of the time Magento is controlled by XML configuration
    files and the backend layout is no different. We need to create a new `adminhtml`
    layout file. Perform the following steps to do so:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到，大多数情况下Magento由XML配置文件控制，后端布局也不例外。我们需要创建一个新的`adminhtml`布局文件。执行以下步骤来完成：
- en: Navigate to the design folder.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到设计文件夹。
- en: 'Create a new folder called `adminhtml` and inside it create the following folder
    structure:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`adminhtml`的新文件夹，并在其中创建以下文件夹结构：
- en: '`adminhtml/`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adminhtml/`'
- en: '`--default/`'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--default/`'
- en: '`----default/`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`----default/`'
- en: '`------template/`'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`------template/`'
- en: '`------layout/`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`------layout/`'
- en: Inside the `layout` folder let's create a new layout file called `giftregistry.xml`
    at the location `app/code/design/adminhtml/default/default/layout/`.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`layout`文件夹内，让我们在位置`app/code/design/adminhtml/default/default/layout/`创建一个名为`giftregistry.xml`的新布局文件。
- en: 'Copy the following code into the layout file:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码复制到布局文件中：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We also need to add the new layout file into the `config.xml` module. Perform
    the following steps to do so:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要将新的布局文件添加到`config.xml`模块中。执行以下步骤来完成：
- en: Navigate to the `etc/` folder.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`etc/`文件夹。
- en: Open the `config.xml` file, which can be found at the location `app/code/loca/Mdg/Giftregistry/etc/`.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`config.xml`文件，可以在位置`app/code/loca/Mdg/Giftregistry/etc/`找到。
- en: 'Copy the following code into the `config.xml` file:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码复制到`config.xml`文件中：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: What we are doing inside the layout is creating a new container block and declaring
    a new tab that contains this block.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在布局内部，我们正在创建一个新的容器块，并声明一个包含此块的新选项卡。
- en: Let's quickly test our changes so far by logging in to the Magento backend and
    opening a customer information by going into **Customer Manager** located at **Customers**
    | **Manage Customers**.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过登录到Magento后端并打开**客户管理**，进入**客户** | **管理客户**，快速测试我们迄今为止所做的更改。
- en: 'We should get the following error in the backend:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该在后端得到以下错误：
- en: '![Back to the configuration](graphics/3060OS_05_01.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![返回配置](graphics/3060OS_05_01.jpg)'
- en: 'This is because we are trying to add a block that has not been declared yet;
    to fix this, we need to create a new block class. Perform the following steps
    to do so:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为我们正在尝试添加一个尚未声明的块；为了解决这个问题，我们需要创建一个新的块类。执行以下步骤来完成：
- en: Navigate to the blocks folder and create a new block class following the directory
    structure called `Giftregistry.php` at the location `app/code/loca/Mdg/Giftregistry/Block/Adminhtml/Customer/Edit/Tab/`.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到块文件夹，并按照目录结构创建一个名为`Giftregistry.php`的新块类，位置在`app/code/loca/Mdg/Giftregistry/Block/Adminhtml/Customer/Edit/Tab/`。
- en: 'Add the following code to it:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到其中：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: There are a couple of interesting things happening with this block class. For
    starters, we are extending a different block class, `Mage_Adminhtml_Block_Template`,
    and implementing a new interface, `Mage_Adminhtml_Block_Widget_Tab_Interface`.
    This is done in order to access all the features and functionalities of the Magento
    backend.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这个块类有一些有趣的事情发生。首先，我们正在扩展一个不同的块类`Mage_Adminhtml_Block_Template`，并实现一个新的接口`Mage_Adminhtml_Block_Widget_Tab_Interface`。这样做是为了访问Magento后端的所有功能和功能。
- en: We are also setting the block template inside the construct function of our
    class; also under the `getCustomerId`, we are making use of the Magento global
    variables to get the current customer.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在类的构造函数中设置了块模板；同样在`getCustomerId`下，我们使用Magento全局变量来获取当前客户。
- en: Our next step will be to create the corresponding template file for this block,
    otherwise we would get an error on the block initialization.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步将是为此块创建相应的模板文件，否则我们将在块初始化时出现错误。
- en: Create a template file called `main.phtml` at the location `app/code/design/adminhtml/default/default/template/mdg/giftregistry/customer/`.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在位置`app/code/design/adminhtml/default/default/template/mdg/giftregistry/customer/`创建一个名为`main.phtml`的模板文件。
- en: 'Copy the following code into it:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码复制到其中：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: For now, we are just adding placeholder content to the template so that we can
    actually see our tabs in action; now, if we go to the customer section in the
    backend, we should see that a new tab is available, and clicking on that tab will
    display our placeholder content.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们只是向模板添加占位内容，以便我们实际上可以看到我们的选项卡在操作中；现在，如果我们转到后端的客户部分，我们应该看到一个新的选项卡可用，并且单击该选项卡将显示我们的占位内容。
- en: By now, we have modified the backend and added a **Customers** tab to the customer
    section just by changing a configuration and adding some simple blocks and a template
    file. But so far, this hasn't been particularly useful, so we need a way of displaying
    all the customer gift registries under the **Gift registry** tab.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经修改了后端，并通过更改配置和添加一些简单的块和模板文件，向客户部分添加了**Customers**选项卡。但到目前为止，这还没有特别有用，所以我们需要一种方法来显示所有客户礼品注册在**礼品注册**选项卡下。
- en: The grid widget
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网格小部件
- en: Instead of having to write our own grid blocks from scratch, we can reuse the
    ones that have been already provided by the Magento `Adminhtml` module.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以重用Magento `Adminhtml`模块已经提供的块，而不必从头开始编写我们自己的网格块。
- en: The block that we will be extending is called grid widget; the grid widget is
    a special type of block designed to render a collection of Magento objects in
    a particular table grid.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要扩展的块称为网格小部件；网格小部件是一种特殊类型的块，旨在以特定的表格网格中呈现Magento对象的集合。
- en: 'A grid widget is normally rendered inside a Grid container; the combination
    of both elements allow not only to display our data in a grid form but also adds
    search, filtering, sorting, and mass action capabilities. Perform the following
    steps:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 网格小部件通常呈现在网格容器内；这两个元素的组合不仅允许以网格形式显示我们的数据，还添加了搜索、过滤、排序和批量操作功能。执行以下步骤：
- en: Navigate to the block `Adminhtml/` folder and create a folder called `Giftregistry/`
    at the location `app/code/loca/Mdg/Giftregistry/Block/Adminhtml/Customer/Edit/Tab/`.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到块`Adminhtml/`文件夹，并在位置`app/code/loca/Mdg/Giftregistry/Block/Adminhtml/Customer/Edit/Tab/`创建一个名为`Giftregistry/`的文件夹。
- en: Create a class called `List.php` inside that folder.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在该文件夹内创建一个名为`List.php`的类。
- en: 'Copy the following code into the `Giftregistry/List.php` file:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码复制到`Giftregistry/List.php`文件中：
- en: '[PRE7]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Looking at the class we just created, there are only three functions involved:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 看看我们刚刚创建的类，只涉及三个函数：
- en: '`__construct()`'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`__construct()`'
- en: '`_prepareCollection()`'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_prepareCollection()`'
- en: '`_prepareColumns()`'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_prepareColumns()`'
- en: On the `__construct` function, we are specifying a few important options about
    our grid class. We are setting the `gridId`; the default sort to be by `eventDate`,
    and we are enabling pagination and filtering.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在`__construct`函数中，我们指定了关于我们的网格类的一些重要选项。我们设置了`gridId`；默认排序为`eventDate`，并启用了分页和过滤。
- en: The `__prepareCollection()` function loads a collection of registries filtered
    by current `customerId`. This function can be used to do more complex operations
    in our collection too; for example, joining a secondary table to get more information
    about the customer or another related record.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`__prepareCollection()`函数加载了一个由当前`customerId`过滤的注册表集合。这个函数也可以用来在我们的集合中执行更复杂的操作；例如，连接一个辅助表以获取有关客户或其他相关记录的更多信息。'
- en: Finally, by using the `__prepareColumns()` function, we are telling Magento
    which columns and attributes for our data collection should be shown and how we
    can render them.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过使用`__prepareColumns()`函数，我们告诉Magento应该显示哪些列和数据集的属性，以及如何渲染它们。
- en: 'Now that we have created a functional grid block, we would need to do some
    changes to our layout XML file in order to display it. Perform the following steps:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个功能性的网格块，我们需要对我们的布局XML文件进行一些更改才能显示它。执行以下步骤：
- en: Open the `giftregistry.xml` file, which can be found at the location `app/design/adminhtml/default/default/layout/`.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`giftregistry.xml`文件，该文件位于`app/design/adminhtml/default/default/layout/`位置。
- en: 'Make the following changes:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行以下更改：
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: What we did was to add the grid block as part of our main block, but if we go
    to the customer edit page and click on the **Gift registry** tab, we are still
    seeing the old placeholder text and the grid is not displaying.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的是将网格块添加为我们的主块的一部分，但如果我们转到客户编辑页面并点击**礼品注册**选项卡，我们仍然看到旧的占位文本，并且网格没有显示。
- en: '![The grid widget](graphics/3060OS_05_02.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![网格小部件](graphics/3060OS_05_02.jpg)'
- en: 'This is because we haven''t made the necessary changes to our `main.phtml`
    template file. In order to display children blocks, we specifically need to tell
    the templating system to load any or a specific child; for now, we will just load
    our specific grid block. Perform the following steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为我们还没有对`main.phtml`模板文件进行必要的更改。为了显示子块，我们需要明确告诉模板系统加载任何或特定的子块；现在，我们将只加载我们特定的网格块。执行以下步骤：
- en: Open the `main.phtml` template file, which can be found at the location `app/design/adminhtml/default/default/template/customer/`.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`main.phtml`模板文件，该文件位于`app/design/adminhtml/default/default/template/customer/`位置。
- en: 'Replace the template code with the following:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用以下内容替换模板代码：
- en: '[PRE9]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `getChildHtml()` function is responsible for rendering all the child blocks.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`getChildHtml()`函数负责渲染所有子块。'
- en: The function `getChildHtml()` can be called with a specific child block name
    or without parameters; when called without parameters, it will load all the available
    children blocks.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`getChildHtml()`函数可以使用特定的子块名称或无参数调用；如果没有参数调用，它将加载所有可用的子块。'
- en: In the case of our extension, we are only interested in instantiating a particular
    child block, so we will be passing the block name as the function parameter. Now,
    if we refresh the page, we should see our grid block loaded with all the gift
    registries available for that particular customer.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的扩展情况下，我们只对实例化特定的子块感兴趣，所以我们将传递块名称作为函数参数。现在，如果我们刷新页面，我们应该看到我们的网格块加载了该特定客户的所有可用礼品注册。
- en: Managing the registries
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理注册表
- en: Now, this is handy if we want to manage the registries for a specific customer,
    but it does not really help us if we want to manage all the registries available
    in a store. For that, we need to create a grid that loads all the available gift
    registries.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们想要管理特定客户的注册表，这很方便，但如果我们想要管理商店中所有可用的注册表，这并不真正帮助我们。为此，我们需要创建一个加载所有可用礼品注册的网格。
- en: Since we already created a gift registry controller for the backend, we can
    use the index action to display all the available registries.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经为后端创建了礼品注册控制器，我们可以使用索引操作来显示所有可用的注册表。
- en: 'The first thing we need to do is to modify the Magento backend navigation to
    show a link to our new controller index action. Again, we can achieve this by
    using XML. In this particular case, we are going to create a new XML file called
    `adminhtml.xml`. Perform the following steps:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是修改Magento后端导航，以显示指向我们新控制器索引操作的链接。同样，我们可以通过使用XML来实现这一点。在这种特殊情况下，我们将创建一个名为`adminhtml.xml`的新XML文件。执行以下步骤：
- en: Navigate to your module `etc` folder, which can be found at the location `app/code/local/Mdg/Giftregistry/`.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的模块`etc`文件夹，该文件夹位于`app/code/local/Mdg/Giftregistry/`位置。
- en: Create a new file called `adminhtml.xml`.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`adminhtml.xml`的新文件。
- en: 'Place the following code in that file:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码放入该文件中：
- en: '[PRE10]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: While the standard is to have this configuration added inside `adminhtml.xml`,
    you will likely encounter extensions where this standard is not followed. This
    configuration can be located inside `config.xml`.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然标准是将此配置添加到`adminhtml.xml`中，但您可能会遇到未遵循此标准的扩展。此配置可以位于`config.xml`中。
- en: This configuration code is creating a new main-level menu and a new child-level
    option under it; we are also specifying which action the menu should be mapped
    to, in this case, the index action of our gift registry controller.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配置代码正在创建一个新的主级菜单和一个新的子级选项；我们还指定了菜单应映射到哪个操作，在这种情况下，是我们的礼品注册控制器的索引操作。
- en: If we refresh the backend now, we should see a new **Gift registry** menu added
    to the top-level navigation.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在刷新后端，我们应该会看到一个新的**礼品注册**菜单添加到顶级导航中。
- en: Permissions and the ACL
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 权限和ACL
- en: Sometimes we need to restrict access to certain features of our module or even
    the whole module based on the admin rule. Magento allows us to do this by using
    a power feature called **ACL** or **Access Control List**. Each role in the Magento
    backend can have different permissions and different ACLs.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们需要根据管理员规则限制对模块的某些功能甚至整个模块的访问。Magento允许我们使用一个称为**ACL**或**访问控制列表**的强大功能来实现这一点。Magento后端中的每个角色都可以具有不同的权限和不同的ACL。
- en: 'The first step of enabling ACLs with our custom module is to define which resources
    should be restricted by the ACL; not so surprisingly, this is controlled by the
    configuration XML files. Perform the following steps:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 启用我们自定义模块的ACL的第一步是定义ACL应该受限制的资源；这由配置XML文件控制，这并不奇怪。执行以下步骤：
- en: Open the `adminhtml.xml` configuration file, which can be found at the location
    `app/code/local/Mdg/Giftregistry/etc/`.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`adminhtml.xml`配置文件，该文件位于`app/code/local/Mdg/Giftregistry/etc/`位置。
- en: 'Add the following code after the menu path:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在菜单路径之后添加以下代码：
- en: '[PRE11]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, in the Magento backend, if we navigate to **System** | **Permissions**
    | **Roles**, select the **Administrators** role, and try to set **Roles Resources**
    at the bottom of the list; we can see the new ACL resources we created, as shown
    in the following screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在Magento后端，如果我们导航到**系统** | **权限** | **角色**，选择**管理员**角色，并尝试在列表底部设置**角色资源**，我们可以看到我们创建的新ACL资源，如下面的截图所示：
- en: '![Permissions and the ACL](graphics/3060OS_05_06.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![权限和ACL](graphics/3060OS_05_06.jpg)'
- en: By doing this, we gain granular control over which operations each user has
    access to.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，我们可以精细控制每个用户可以访问哪些操作。
- en: If we click on the **Manage Registries** menu, we should get a blank page; since
    we haven't created the corresponding grid block, layouts, and templates, we should
    see a completely blank page.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们点击**管理注册表**菜单，我们应该会看到一个空白页面；因为我们还没有创建相应的网格块、布局和模板，所以我们应该会看到一个完全空白的页面。
- en: So let's start by creating the blocks that we will need for our new grid; the
    way we will create our gift registry grid will be slightly different from what
    we did for our **Customers** tab.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们开始创建我们新网格所需的块；我们创建礼品注册表网格的方式将与我们为**客户**选项卡所做的略有不同。
- en: 'We need to create a grid container block and a grid block. The grid container
    is used to hold the grid header, the buttons, and the grid content, while the
    grid block is only in charge of rendering the grid with pagination, filtering,
    and mass actions. Perform the following steps:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建一个网格容器块和一个网格块。网格容器用于保存网格标题、按钮和网格内容，而网格块只负责呈现带有分页、过滤和批量操作的网格。执行以下步骤：
- en: Navigate to your block `Adminhtml` folder.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的块`Adminhtml`文件夹。
- en: 'Create a new block called `Registries.php` at the location `app/code/local/Mdg/Giftregistry/Block/Adminhtml/`:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app/code/local/Mdg/Giftregistry/Block/Adminhtml/`位置创建一个名为`Registries.php`的新块：
- en: 'Add the following code to it:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到其中：
- en: '[PRE12]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: One important thing we are setting up in the `construct` function inside our
    grid container is the usage of protected values of `_controller` and `_blockGroup`
    by the Magento grid container to identify the corresponding grid block.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在网格容器内的`construct`函数中设置的一个重要的事情是使用受保护的`_controller`和`_blockGroup`值，Magento网格容器通过这些值来识别相应的网格块。
- en: It is important to clarify that `$this->_controller` is not the actual controller
    name but the block class name and `$this->_blockGroup` is actually the module
    name.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要澄清，`$this->_controller`不是实际的控制器名称，而是块类名称，`$this->_blockGroup`实际上是模块名称。
- en: 'Let''s continue with creating the grid block, which as we learned previously
    has three main functions: `_construct`, `_prepareCollection()`, and `_prepareColumns()`.
    But in this case, we will add a new function called `_prepareMassActions()`, which
    allows us to modify selected sets of records without having to edit each individually.
    Perform the following steps:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续创建网格块，正如我们之前学到的那样，它有三个主要功能：`_construct`，`_prepareCollection()`和`_prepareColumns()`。但在这种情况下，我们将添加一个名为`_prepareMassActions()`的新功能，它允许我们修改所选记录集而无需逐个编辑。执行以下步骤：
- en: Navigate to your block `Adminhtml` folder and create a new folder called `Registries`.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的块`Adminhtml`文件夹并创建一个名为`Registries`的新文件夹。
- en: Under the `Model` folder create a new block called `Grid.php` at the location
    `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/`.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Model`文件夹下，在`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/`位置创建一个名为`Grid.php`的新块。
- en: 'Add the following code to `Grid.php`:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到`Grid.php`中：
- en: '[PRE13]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This grid code is very similar to what we had created before for the **Customers**
    tab, with the exception that this time we are not specifically filtering by a
    customer record, and we are also creating a grid container block instead of implementing
    a custom block.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这个网格代码与我们之前为**客户**选项卡创建的非常相似，唯一的区别是这次我们不是特别按客户记录进行过滤，而且我们还创建了一个网格容器块，而不是实现一个自定义块。
- en: 'Finally, in order to show the grid in our controller action we need to perform
    the following steps:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了在我们的控制器动作中显示网格，我们需要执行以下步骤：
- en: Open the `giftregistry.xml` file, which can be found at the location `app/code/design/adminhtml/default/default/layout/`.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`giftregistry.xml`文件，该文件位于`app/code/design/adminhtml/default/default/layout/`位置。
- en: 'Add the following code to it:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到其中：
- en: '[PRE14]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Since we are using a grid container, we only need to specify the grid container
    block, and Magento will take care of loading the matching grid container.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们使用了网格容器，我们只需要指定网格容器块，Magento将负责加载匹配的网格容器。
- en: There is no need to specify or create a template file for the grid or the grid
    container as both blocks automatically load the base templates from the `adminhtml/base/default`
    theme.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 无需为网格或网格容器指定或创建模板文件，因为这两个块都会自动从`adminhtml/base/default`主题加载基本模板。
- en: Now, we can check our newly added gift registry by navigating to **Gift Registry**
    | **Manage Registries** in the backend.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过在后端导航到**礼品注册** | **管理注册表**来检查我们新添加的礼品注册。
- en: '![Permissions and the ACL](graphics/3060OS_05_03.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![权限和ACL](graphics/3060OS_05_03.jpg)'
- en: Updating in bulk with Massactions
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用大规模操作进行批量更新
- en: 'When creating our base grid block, we defined a function called `_prepareMassactions()`,
    which provides an easy way of manipulating multiple records from the grid. In
    our case, for now, let''s just implement a mass delete action. Perform the following
    steps to do so:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建我们的基本网格块时，我们定义了一个名为`_prepareMassactions()`的函数，它提供了一种简单的方式来操作网格中的多条记录。在我们的情况下，现在让我们只实现一个大规模删除动作。执行以下步骤：
- en: Open the registry grid block `Grid.php`, which can be found at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/`.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开注册表格块`Grid.php`，该文件位于`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/`位置。
- en: 'Replace the `_prepareMassaction()` function with the following code:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用以下代码替换`_prepareMassaction()`函数：
- en: '[PRE15]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The way mass actions work is by passing a series of selected IDs to our specified
    controller action; in this case, the `massDelete()` action will add code to iterate
    through the registry collection and delete each of the specified registries. Perform
    the following steps:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 大规模操作的工作方式是通过将一系列选定的ID传递给我们指定的控制器动作；在这种情况下，`massDelete()`动作将添加代码来迭代注册表集合并删除每个指定的注册表。执行以下步骤：
- en: Open the `GiftregistryController.php` file, which can be found at the location
    `app/code/local/Mdg/Giftregistry/controllers/Adminhtml/`.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`GiftregistryController.php`文件，该文件位于`app/code/local/Mdg/Giftregistry/controllers/Adminhtml/`位置。
- en: 'Replace the blank `massDelete()` action with the following code:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用以下代码替换空白的`massDelete()`动作：
- en: '[PRE16]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Challenge**: Add two new mass actions to change the status of the registries
    to enable or disable respectively. To see the answer with the complete code and
    full breakdown, visit [http://www.magedevguide.com/](http://www.magedevguide.com/).'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**挑战**：添加两个新的大规模操作，将注册表的状态分别更改为启用或禁用。要查看完整代码和详细分解的答案，请访问[http://www.magedevguide.com/](http://www.magedevguide.com/)。'
- en: 'Finally, we also want to be able to edit the records listed in our grid. For
    that, we need to add a new function to our registries grid class; this function
    is called `getRowUrl()`, and it is used to specify the action to be taken when
    clicking on a grid row; in our particular case, we want to map that function to
    the `editAction()`. Perform the following steps:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们还希望能够编辑我们网格中列出的记录。为此，我们需要向我们的注册表格类添加一个新函数；这个函数被称为`getRowUrl()`，它用于指定单击网格行时要执行的操作；在我们的特定情况下，我们希望将该函数映射到`editAction()`。执行以下步骤：
- en: Open the `Grid.php` file, which can be found at the location `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/`.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Grid.php`文件，该文件位于`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/`位置。
- en: 'Add the following function to it:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向其中添加以下函数：
- en: '[PRE17]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The form widget
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表单小部件
- en: So far, we have been working with the gift registry grid, but right now we aren't
    able to do much more than just getting the list of all the available registries
    or deleting registries in bulk. We need a way of getting the details of a specific
    registry; we can map this to the edit controller action.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在处理礼品注册表格，但现在我们除了获取所有可用注册表的列表或批量删除注册表之外，无法做更多事情。我们需要一种方法来获取特定注册表的详细信息；我们可以将其映射到编辑控制器动作。
- en: The `edit` action will display the registry-specific details and will also allow
    us to modify the details and status of a registry. We will need to create a few
    blocks and templates for this action.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`edit`动作将显示特定注册表的详细信息，并允许我们修改注册表的详细信息和状态。我们需要为此动作创建一些块和模板。'
- en: 'In order to view and edit the registry information, we need to implement a
    form widget block. Form widgets work in a similar fashion as the grid widget blocks
    and need to have a form block and a form container block that extends the `Mage_Adminhtml_Block_Widget_Form_Container`
    class. In order to create the form container, let''s perform the following steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看和编辑注册表信息，我们需要实现一个表单小部件块。表单小部件的工作方式与网格小部件块类似，需要有一个表单块和一个扩展`Mage_Adminhtml_Block_Widget_Form_Container`类的表单容器块。为了创建表单容器，让我们执行以下步骤：
- en: Navigate to the `Registries` folder.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`Registries`文件夹。
- en: Create a new class file called `Edit.php` at the location `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/`.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/`位置创建一个名为`Edit.php`的新类文件。
- en: 'Add the following code to the class file:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向类文件中添加以下代码：
- en: '[PRE18]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Similar to the grid widget, the form container widget will automatically identify
    and load the matching form block.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 与网格小部件类似，表单容器小部件将自动识别并加载匹配的表单块。
- en: One additional protected attribute that is being declared in the form container
    is the mode attribute; this protected attribute is used by the container to specify
    the location of the form block.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在表单容器中声明的另一个受保护属性是mode属性；这个受保护属性被容器用来指定表单块的位置。
- en: 'We can find the code responsible for creating the form block inside the `Mage_Adminhtml_Block_Widget_Form_Container`
    class:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在`Mage_Adminhtml_Block_Widget_Form_Container`类中找到负责创建表单块的代码：
- en: '[PRE19]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now that we have created the form container block, we can proceed to create
    the matching form block. Perform the following steps to do so:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了表单容器块，我们可以继续创建匹配的表单块。执行以下步骤：
- en: Navigate to the `Registries` folder.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`Registries`文件夹。
- en: Create a new folder called `Edit`.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Edit`的新文件夹。
- en: Create a new file called `Form.php` at the location `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit/`.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit/`位置创建一个名为`Form.php`的新文件。
- en: 'Add the following code to it:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向其中添加以下代码：
- en: '[PRE20]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: We also need to modify our layout file and tell Magento to load our form container.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要修改我们的布局文件，并告诉Magento加载我们的表单容器。
- en: 'Copy the following code to the layout file `giftregistry.xml`, which can be
    found at the location `app/code/design/adminhtml/default/default/layout/`:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码复制到布局文件`giftregistry.xml`中，该文件位于`app/code/design/adminhtml/default/default/layout/`位置：
- en: '[PRE21]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We can check out our progress at this point by going into the Magento backend
    and clicking on one of our example registries. We should see the following form:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们可以进入Magento后端，点击我们的示例注册表之一，查看我们的进展。我们应该看到以下表单：
- en: '![The form widget](graphics/3060OS_05_04.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![表单小部件](graphics/3060OS_05_04.jpg)'
- en: But there seems to be an issue. None of the data is loaded; we just have an
    empty form, so we have to modify our controller `editAction()` in order to load
    the data.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 但似乎有一个问题。没有加载任何数据；我们只有一个空表单，因此我们必须修改我们的控制器`editAction()`以加载数据。
- en: Loading the data
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载数据
- en: 'Let''s start by modifying `editAction()` inside our `GiftregistryController.php`
    file, which can be found at the location `app/code/local/Mdg/Giftregistry/controllers/Adminhtml/`:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从修改`GiftregistryController.php`文件中的`editAction()`开始，该文件位于`app/code/local/Mdg/Giftregistry/controllers/Adminhtml/`位置：
- en: '[PRE22]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'What we are doing inside our `editAction()` is to check for a registry with
    the same ID, and if it exists, we will load that registry entity and make it available
    to our form. Previously, when adding the form code to the file `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit/Form.php`,
    we included the following:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在`editAction()`中所做的是检查是否存在具有相同ID的注册表，如果存在，我们将加载该注册表实体并使其可用于我们的表单。之前，在将表单代码添加到文件`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit/Form.php`时，我们包括了以下内容：
- en: '[PRE23]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, we can test our changes by reloading the form:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过重新加载表单来测试我们的更改：
- en: '![Loading the data](graphics/3060OS_05_05.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![加载数据](graphics/3060OS_05_05.jpg)'
- en: Saving the data
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存数据
- en: 'Now that we have created the form for editing a registry, we need to create
    the corresponding action to process and save the data posted by the form. We can
    use the save form action to handle this. Perform the following steps:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经为编辑注册表创建了表单，我们需要创建相应的操作来处理并保存表单提交的数据。我们可以使用保存表单操作来处理这个过程。执行以下步骤：
- en: Open the `GiftregistryController.php` class, which can be found at the location
    `app/code/local/Mdg/Giftregistry/controllers/Adminhtml/`.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`GiftregistryController.php`类，该类位于`app/code/local/Mdg/Giftregistry/controllers/Adminhtml/`位置。
- en: 'Replace the blank `saveAction()` function with the following code:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用以下代码替换空白的`saveAction()`函数：
- en: '[PRE24]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Let''s break down what this code is doing step by step:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步分解一下这段代码在做什么：
- en: We check if the request has valid post data.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们检查请求是否具有有效的提交数据。
- en: We check that both the `$data` and `$id` variables are set.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们检查`$data`和`$id`变量是否都设置了。
- en: If both variables are set, we load a new registry entity and set the data.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果两个变量都设置了，我们加载一个新的注册表实体并设置数据。
- en: Finally, we try to save the registry entity.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们尝试保存注册表实体。
- en: The first thing we do is to check that the data posted is not empty and that
    we are getting a registry ID as part of the parameters; we also check if the registry
    ID is a valid instance of the registry entity.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先要做的是检查提交的数据不为空，并且我们在参数中获取了注册表ID；我们还检查注册表ID是否是注册表实体的有效实例。
- en: Summary
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to modify and extend the Magento backend to
    our specific needs.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学会了如何修改和扩展Magento后端以满足我们的特定需求。
- en: Whereas, the frontend extends the functionality that the customers and users
    can use; extending the backend allows us to control this custom functionality
    and how customers interact with it.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 前端扩展了客户和用户可以使用的功能；扩展后端允许我们控制这个自定义功能以及客户与其交互的方式。
- en: Grids and forms are important parts of the Magento backend, and by using them
    properly, we can add a lot of functionality without having to write a lot of code
    or reinvent the wheel.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 网格和表单是Magento后端的重要部分，通过正确使用它们，我们可以添加很多功能，而不必编写大量代码或重新发明轮子。
- en: Finally, we learned how to use the permissions and Magento ACL to control and
    restrict the permissions of our custom extension after extension, as well as Magento
    in general.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们学会了如何使用权限和Magento ACL来控制和限制我们的自定义扩展以及Magento的权限。
- en: In the next chapter, we will dive deep into the Magento API, and we will learn
    how to extend it to manipulate our registry data using several methods such as
    SOAP, XML-RPC, and REST.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入研究Magento API，并学习如何扩展它以使用多种方法（如SOAP、XML-RPC和REST）来操作我们的注册表数据。
