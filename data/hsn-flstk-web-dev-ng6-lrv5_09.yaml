- en: Creating Services and User Authentication
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建服务和用户认证
- en: In this chapter, we have a lot of work ahead of us. We will create many new
    things and refactor some things too. This is a great way to learn things in a
    regular and progressive way.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们有很多工作要做。我们将创建许多新东西，并对一些东西进行重构。这是以一种规律和渐进的方式学习东西的好方法。
- en: We will do a deep dive into the operation and use of the HTTP module of Angular,
    known as `HttpClient`.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将深入研究Angular的HTTP模块的操作和使用，该模块被称为`HttpClient`。
- en: In addition, we will see how to use interceptors and handle errors.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们将看到如何使用拦截器和处理错误。
- en: The new version of Angular provides extremely useful tools for creating modern
    web applications, and in this chapter we will use many of these resources.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Angular的新版本提供了非常有用的工具来创建现代Web应用程序，在本章中，我们将使用其中许多资源。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Dealing with models and classes
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理模型和类
- en: Using the new `HttpModule` and `HttpModuleClient` to deal with XHR requests
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用新的`HttpModule`和`HttpModuleClient`来处理XHR请求
- en: Dealing with the `HttpErrorHandler` service
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理`HttpErrorHandler`服务
- en: How to use authorization headers
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用授权头
- en: How to protect application routes with route guards
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用路由守卫保护应用程序路由
- en: Preparing the baseline code
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备基线代码
- en: 'Now, we need to prepare our baseline code, a process very similar to what we
    did in the previous chapter. Let''s follow these steps:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要准备我们的基线代码，这个过程与我们在上一章中所做的非常相似。让我们按照以下步骤进行：
- en: Copy all the content from the `chapter-08` folder.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制`chapter-08`文件夹中的所有内容。
- en: Rename the folder to `chapter-09`.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件夹重命名为`chapter-09`。
- en: Delete the `storage-db` folder.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除`storage-db`文件夹。
- en: Now, let's make some changes to the `docker-compose.yml` file so that it can
    fit a new database and server containers.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们对`docker-compose.yml`文件进行一些更改，以使其适应新的数据库和服务器容器。
- en: 'Open `docker-compose.yml` and replace its content with the following code:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`docker-compose.yml`并用以下代码替换其内容：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Note that we changed the container names, database, and MySQL user:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们更改了容器名称、数据库和MySQL用户：
- en: '`container_name: chapter-09-mysql`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`container_name: chapter-09-mysql`'
- en: '`container_name: chapter-09-webserver`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`container_name: chapter-09-webserver`'
- en: '`container_name: chapter-09-php-fpm`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`container_name: chapter-09-php-fpm`'
- en: '`MYSQL_DATABASE=chapter-09`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MYSQL_DATABASE=chapter-09`'
- en: '`MYSQL_USER=chapter-09`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MYSQL_USER=chapter-09`'
- en: 'Add the changes we made to Git source control. Open your Terminal window and
    type the following command:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们所做的更改添加到Git源代码控制中。打开您的终端窗口并输入以下命令：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Dealing with models and classes
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理模型和类
- en: Considered good practice by the community of Angular developers (and we consider
    it essential) is the creation of classes to use them as models. These are also
    known as **domain models**.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 由Angular开发者社区认为是良好实践（我们认为是必不可少的）的是创建类以将其用作模型。这些也被称为**领域模型**。
- en: We believe that creating classes to store our models in is a very important
    resource for creating large-scale applications or even small apps. This helps
    you keep your code organized.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们认为创建类来存储我们的模型是创建大型应用程序甚至小型应用程序的一个非常重要的资源。这有助于保持代码的组织性。
- en: Imagine if our project is much larger—if all the data was stored inside the
    plain objects, it would be hard for a new developer to find out where the data
    is stored.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果我们的项目规模更大——如果所有数据都存储在普通对象中，那么新开发人员将很难找到数据存储的位置。
- en: This is also a good reason to use classes to store our model information.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是使用类来存储我们的模型信息的一个很好的理由。
- en: Creating the User class model
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建用户类模型
- en: 'Let''s start by creating the class to store our user information. By convention,
    we will name this file `user.ts`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先创建一个类来存储我们的用户信息。按照惯例，我们将把这个文件命名为`user.ts`：
- en: Open your Terminal window.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的终端窗口。
- en: 'Go to `./Client/src/app` and type the following command:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到`./Client/src/app`并输入以下命令：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The previous command will create a new file in `./app/pages/auth/auth.ts`.
    Open this file and add the following code:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上一个命令将在`./app/pages/auth/auth.ts`中创建一个新文件。打开此文件并添加以下代码：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Creating the builders class model
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建构建者类模型
- en: 'Now, let''s create the model for the builder and understand the operation of
    classes as models a little better. Before that, we will observe the return of
    the API when we make a GET to the `api/builders/1` endpoint, as we can see in
    the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为构建者创建模型，并更好地理解类作为模型的操作。在此之前，我们将观察当我们对`api/builders/1`端点进行GET请求时API的返回，如下面的屏幕截图所示：
- en: '![](assets/08cc1ca5-aaed-4f32-b5df-38b529601d7d.png)Builder-detail JSON result'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/08cc1ca5-aaed-4f32-b5df-38b529601d7d.png)构建者详细JSON结果'
- en: 'In the previous screenshot, we have already included the bike information on
    the builders detail request. Let''s see how we can do this using the `builders`
    class:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在先前的屏幕截图中，我们已经在构建者详细请求中包含了自行车信息。让我们看看如何使用`builders`类来实现这一点：
- en: 'Still in your Terminal, type the following command:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仍然在您的终端中，输入以下命令：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The previous command will create a new file in `./app/pages/builders/builder.ts`.
    Open this file and add the following code:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上一个命令将在`./app/pages/builders/builder.ts`中创建一个新文件。打开此文件并添加以下代码：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that, in the previous code, we added an optional `bike` property and set
    its type to `Bike` model.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在先前的代码中，我们添加了一个可选的`bike`属性，并将其类型设置为`Bike`模型。
- en: Creating the Bike class model
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Bike类模型
- en: 'Now, it''s time to create the bike model class, but first let''s check the
    JSON format that we have on the bike''s detail endpoint, `api/bikes/2`, as we
    can see in the following screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候创建自行车模型类了，但首先让我们检查一下我们在自行车详细端点`api/bikes/2`上的JSON格式，如下面的屏幕截图所示：
- en: '![](assets/b1af74f8-64cb-4259-aae0-7dee28e2c45f.png)bike-detail JSON result'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/b1af74f8-64cb-4259-aae0-7dee28e2c45f.png)自行车详细JSON结果'
- en: 'Here, we can note that the `bike-detail` result points to `garages`, `items`,
    `builder`, `user`, and `ratings`. For the sample application we are building,
    we will just use the builder and user model. Don''t worry about the others; the
    example we are going to use here is enough for understanding the model domain:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以注意到`bike-detail`结果指向`garages`、`items`、`builder`、`user`和`ratings`。对于我们正在构建的示例应用程序，我们将只使用构建者和用户模型。不用担心其他的；我们在这里使用的示例足以理解模型领域：
- en: 'Still in your Terminal, type the following command:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仍然在您的终端中，输入以下命令：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The previous command will create a new file in `./app/pages/bikes/bike.ts`.
    Open this file and add the following code:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上一个命令将在`./app/pages/bikes/bike.ts`中创建一个新的文件。打开这个文件并添加以下代码：
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note that, in the previous code, we are using all properties from the previous
    screenshot, including `items` and `ratings`, as optional properties with type
    `any`, as we didn't create models for these properties.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在上一个代码中，我们使用了上一个截图中的所有属性，包括`items`和`ratings`，作为类型为`any`的可选属性，因为我们没有为这些属性创建模型。
- en: Using the new HttpClient to deal with XHR requests
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用新的HttpClient处理XHR请求
- en: The vast majority of web applications nowadays use `XMLHttpRequest` (XHR) requests,
    and applications made with Angular are no different. For that, we have the `HTTPClient`
    module that replaced the old HTTP module in previous versions.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，绝大多数Web应用程序都使用`XMLHttpRequest`（XHR）请求，而使用Angular制作的应用程序也不例外。为此，我们有`HTTPClient`模块取代了以前版本中的旧HTTP模块。
- en: In this session, we will understand how to use XHR requests inside our Angular
    services.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个会话中，我们将了解如何在我们的Angular服务中使用XHR请求。
- en: It is highly recommended that you use Angular services to handle requests of
    this type so that the code of the component is more organized and easy to maintain.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议您使用Angular服务来处理这种类型的请求，以便组件的代码更有组织性和易于维护。
- en: You can read more about XHR requests at [https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)上阅读更多关于XHR请求的信息。
- en: Creating the auth service
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建认证服务
- en: 'Let''s create the file that will store the necessary code for our authentication
    module:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个将存储我们认证模块所需代码的文件：
- en: 'Still in your Terminal, type the following command:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仍然在您的终端中，输入以下命令：
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The previous command will create a new folder and file in `./app/pages/auth/_services/auth.service.ts`.
    Now, let's add some pieces of code.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个命令将在`./app/pages/auth/_services/auth.service.ts`中创建一个新的文件夹和文件。现在，让我们添加一些代码。
- en: 'Open `./app/pages/auth/_services/auth.service.ts` and add the following imports
    to the top of the file:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`./app/pages/auth/_services/auth.service.ts`并在文件顶部添加以下导入：
- en: '[PRE9]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, we will use `HttpHeaders` to set the content type of our XHR requests.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将使用`HttpHeaders`来设置我们的XHR请求的内容类型。
- en: 'Add the following code right after the import files:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在导入文件后添加以下代码：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The previous code sample will add a new header to our requests using `HttpHeaders`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个代码示例将使用`HttpHeaders`为我们的请求添加一个新的头。
- en: 'Inside the `AuthService` class, add the following code:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`AuthService`类内部，添加以下代码：
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You must be asking yourself why `currentUser` is `public`and the others are
    `private`, right?
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您一定会问为什么`currentUser`是`public`而其他的是`private`，对吧？
- en: Well, the `currentUser` property is `public` because we will access it in other
    files, as we will see later in this section. Therefore, the other properties will
    not be available outside the `AuthService`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，`currentUser`属性是`public`的，因为我们将在其他文件中访问它，正如我们将在本节后面看到的那样。因此，其他属性将不会在`AuthService`之外可用。
- en: 'Now, let''s create our `constructor` function. Inside the `constructor` function,
    add the following code:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们创建我们的`constructor`函数。在`constructor`函数内部，添加以下代码：
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The `constructor` class will look like the following code:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`constructor`类将如下代码所示：'
- en: '[PRE14]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note here that we are using the `HttpClient` and `Router` module, so it is time
    to write our functions to see this module in practice.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们在这里使用了`HttpClient`和`Router`模块，所以现在是时候编写我们的函数来看看这个模块的实际应用了。
- en: Creating the Register function
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建注册函数
- en: 'Let''s create the `Register` function. After the `constructor` function, let''s
    add the following code:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建`Register`函数。在`constructor`函数之后，添加以下代码：
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note that we are using the `pipe()`, `map()`, and `catchError()` functions from
    the **Reactive Extensions Library for JavaScript** (**RxJS**) that's included
    in Angular.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们在这里使用了**Reactive Extensions Library for JavaScript**（**RxJS**）中包含的`pipe()`、`map()`和`catchError()`函数。
- en: Before using the RxJS library, it was very common in AngularJS applications
    to use a library called Lodash to manipulate the results.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用RxJS库之前，在AngularJS应用程序中使用一个叫做Lodash的库来操作结果是非常常见的。
- en: You can read more about the RxJS library in the official documentation link [https://rxjs-dev.firebaseapp.com/api](https://rxjs-dev.firebaseapp.com/api).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在官方文档链接[https://rxjs-dev.firebaseapp.com/api](https://rxjs-dev.firebaseapp.com/api)中阅读更多关于RxJS库的信息。
- en: We are using the `pipe()` function which allows us to chain other functions,
    and this is pretty interesting when we are working with observables. Inside the
    `pipe()` function, this is exactly what we're doing with the `map()` and `catchError()`
    functions.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`pipe()`函数，它允许我们链接其他函数，当我们使用可观察对象时，这是非常有趣的。在`pipe()`函数内部，这正是我们在`map()`和`catchError()`函数中所做的。
- en: In addition, we are using three more local functions called `setToken()`,  `getUser()`, and
    `handleError()`, which we will look at later.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还使用了三个名为`setToken()`、`getUser()`和`handleError()`的本地函数，我们稍后会看到它们。
- en: Keep in mind that function names are extremely important. Try to use self-explanatory
    names like we did in `setToken` and `getUser`.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，函数名非常重要。尽量使用像我们在`setToken`和`getUser`中所做的那样自解释的名称。
- en: Creating the Login function
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建登录函数
- en: The `Login` function follows almost the same structure as the `Register` function.
    The difference here is that we are just sending the email  address and password
    to the server.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`Login`函数的结构几乎与`Register`函数相同。不同之处在于我们只是将电子邮件地址和密码发送到服务器。'
- en: 'Add the following code right after the `onRegister()` function:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在`onRegister()`函数之后添加以下代码：
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note that we are saving the user token using the `setToken()` function and getting
    the user's details using the `getUser()` function. We will see this in detail
    later in this section.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们使用`setToken()`函数保存用户令牌，并使用`getUser()`函数获取用户的详细信息。我们将在本节后面详细介绍这一点。
- en: Creating the Logout function
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建注销函数
- en: For the Logout function, we will use a different approach. Instead of using
    the `map()` operator, we will use the `tap()` operator.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对于注销函数，我们将使用不同的方法。我们将使用`tap()`操作符，而不是使用`map()`操作符。
- en: 'Add the following code right after the `onLogin()` function:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在`onLogin()`函数之后添加以下代码：
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In the previous code, we just remove the token from `localStorage` and redirect
    the user to the home page. Now, it is time to create the local functions to deal
    with data.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，我们只是从`localStorage`中删除令牌，并将用户重定向到主页。现在，是时候创建处理数据的本地函数了。
- en: Creating the setToken and getToken functions
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建设置令牌和获取令牌函数
- en: We are almost at the end of our authentication service, but we still need to
    create some helper functions that we will use in other application blocks.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们几乎已经完成了我们的身份验证服务，但我们仍然需要创建一些辅助函数，这些函数将在其他应用程序块中使用。
- en: Let's create the functions to handle the user token. Recreating call from our
    backend with Laravel that we are using the `jwt-auth` library to authenticate
    our users.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建处理用户令牌的函数。重新创建我们在Laravel后端中使用的`jwt-auth`库来进行调用，用于验证我们的用户。
- en: In this example, we are using `localStorage` to store the user's token. So,
    let's create two very simple functions to write and retrieve this token.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们使用`localStorage`来存储用户的令牌。因此，让我们创建两个非常简单的函数来写入和检索此令牌。
- en: 'Right after the `logout()` function, add the following block of code:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在`logout()`函数之后，添加以下代码块：
- en: '[PRE18]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Creating the getUser function
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建获取用户函数
- en: Now, we will see how to get the information of the logged-in user. Remember
    that our API has an endpoint that gives us the information of the logged-in user
    based on the authentication token.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到如何获取已登录用户的信息。请记住，我们的API有一个端点，根据认证令牌为我们提供已登录用户的信息。
- en: Let's see how we can do this in a simple way.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何以简单的方式做到这一点。
- en: 'Add the following code right after the `getToken()` function:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在`getToken()`函数之后添加以下代码：
- en: '[PRE19]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The previous code receives the user's information from the API and applies this
    to the `currentUser` property.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码从API接收用户信息，并将其应用于`currentUser`属性。
- en: Creating the isAuthenticated function
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建isAuthenticated函数
- en: Now, we will create just one more function. This function will help us to identify
    if the user is logged in.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个额外的函数。这个函数将帮助我们确定用户是否已登录。
- en: 'Add the following code right after the `getUser()` function:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在`getUser()`函数之后添加以下代码：
- en: '[PRE20]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now, we can use this information anywhere we want just by using the `AuthService.currentUser`
    and `AuthService.isAuthenticated` methods.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以在任何地方使用`AuthService.currentUser`和`AuthService.isAuthenticated`方法来使用这些信息。
- en: Creating the handleError function
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建handleError函数
- en: You should have noticed that the `login()` and `register()` functions have a
    `catchError` function that points to another function called the `handleError`. At
    this moment in time, we are going to create this function, which is in charge
    of showing the possible errors that our request may have.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该已经注意到`login()`和`register()`函数具有指向另一个名为`handleError`的函数的`catchError`函数。此刻，我们将创建这个函数，负责显示我们的请求可能出现的错误。
- en: 'Add the following code right after the **`getUser()`** function:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在**`getUser()`**函数之后添加以下代码：
- en: '[PRE21]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: We are logging the error messages to the browser console, just for this example.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将错误消息记录到浏览器控制台，仅供本示例使用。
- en: Creating the bikes service
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自行车服务
- en: 'Now, we are going to create the service to hold all bike operations. Remember,
    for both bikes and builders, our service must have methods for listing, details,
    creation, updating, and deletion:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个服务来保存所有自行车操作。请记住，对于自行车和建造者，我们的服务必须具有用于列出、详细信息、创建、更新和删除的方法：
- en: 'Still in your Terminal, type the following command:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仍然在您的终端中，键入以下命令：
- en: '[PRE22]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The previous command will create a new folder and file in `./app/pages/bikes/_services/bike.service.ts`.
    Now, let's add some pieces of code.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将在`./app/pages/bikes/_services/bike.service.ts`中创建一个新的文件夹和文件。现在，让我们添加一些代码片段。
- en: 'Open `./app/pages/bikes/_services/bike.service.ts` and add the following imports
    to the top of the file:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`./app/pages/bikes/_services/bike.service.ts`并将以下导入添加到文件顶部：
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Inside the `bikesService` class, add the following properties:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`bikesService`类中，添加以下属性：
- en: '[PRE24]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now, let''s create our `constructor` function. Inside the `constructor` function,
    add the following code:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们创建我们的`constructor`函数。在`constructor`函数中，添加以下代码：
- en: '[PRE25]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Now, we are ready to create the functions of our bike service.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备创建我们的自行车服务的函数。
- en: Creating CRUD functions
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建CRUD函数
- en: As we mentioned earlier, **CRUD** stands for `Create`, `Read`, `Update`, and
    `Delete`. We will add the code for the operations all at once, and then we will
    make the necessary comments.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，**CRUD**代表`Create`，`Read`，`Update`和`Delete`。我们将一次性添加操作的代码，然后进行必要的注释。
- en: 'Add the following blocks of code right after the `constructor()` function:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在`constructor()`函数之后添加以下代码块：
- en: '[PRE26]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The previous code does not have anything particularly different from what we
    used in our authentication service, except for the use of the template string:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码与我们在身份验证服务中使用的内容没有特别不同，除了使用模板字符串：
- en: '[PRE27]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: These are represented by back-tick ([PRE28]
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这些由反引号（[PRE28]）表示
- en: /** Vote on bike */
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: /** 对自行车进行投票 */
- en: 'voteOnBike (vote:  number, bike:  number):  Observable<any> {'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 'voteOnBike (vote:  number, bike:  number):  Observable<any> {'
- en: const  rating  =  vote;
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: const  rating  =  vote;
- en: return  this.http.post(this.bikesUrl  +
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.post(this.bikesUrl  +
- en: '`/${bike}/ratings`, {rating})'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`/${bike}/ratings`, {rating})'
- en: .pipe(
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(error  =>  this.handleError(error))
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(error  =>  this.handleError(error))
- en: );
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE29]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: /** Error handler */
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: /** Error handler */
- en: 'private  handleError(error:  HttpErrorResponse) {'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 'private  handleError(error:  HttpErrorResponse) {'
- en: if (error.error  instanceof  ErrorEvent) {
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: if (error.error  instanceof  ErrorEvent) {
- en: // A client-side error.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: // A client-side error.
- en: console.error('An error occurred:',
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: console.error('An error occurred:',
- en: error.error.message);
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: error.error.message);
- en: '} else {'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: // The backend error.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: // The backend error.
- en: return  throwError(error);
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: return  throwError(error);
- en: '}'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: // return a custom error message
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: // return a custom error message
- en: return  throwError('Something bad happened; please try
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: return  throwError('Something bad happened; please try
- en: again later.');
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: again later.');
- en: '}'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE30]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: ng g service pages/builders/_services/builder
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: ng g service pages/builders/_services/builder
- en: '[PRE31]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: import { Injectable } from  '@angular/core';
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: import { Injectable } from  '@angular/core';
- en: import { HttpClient, HttpParams, HttpErrorResponse } from
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpClient, HttpParams, HttpErrorResponse } from
- en: '''@angular/common/http'';'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '''@angular/common/http'';'
- en: import { HttpHeaders } from  '@angular/common/http';
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpHeaders } from  '@angular/common/http';
- en: import { Observable, throwError } from  'rxjs';
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: import { Observable, throwError } from  'rxjs';
- en: import { catchError } from  'rxjs/operators';
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: import { catchError } from  'rxjs/operators';
- en: // App import
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: // App import
- en: import { environment } from
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: import { environment } from
- en: '''../../../../environments/environment'';'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '''../../../../environments/environment'';'
- en: import { Builder } from  '../builder';
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: import { Builder } from  '../builder';
- en: '@Injectable({'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '@Injectable({'
- en: 'providedIn: ''root'''
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 'providedIn: ''root'''
- en: '})'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: export  class  BuildersService {
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: export  class  BuildersService {
- en: private  readonly  apiUrl  =  environment.apiUrl;
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: private  readonly  apiUrl  =  environment.apiUrl;
- en: private  buildersUrl  =  this.apiUrl  +
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: private  buildersUrl  =  this.apiUrl  +
- en: '''/builders'';'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '''/builders'';'
- en: 'constructor(private  http:  HttpClient) { }'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(private  http:  HttpClient) { }'
- en: /** GET builders from builders endpoint */
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: /** GET builders from builders endpoint */
- en: 'getBuilders ():  Observable<Builder[]> {'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 'getBuilders ():  Observable<Builder[]> {'
- en: return  this.http.get<Builder[]>
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.get<Builder[]>
- en: (this.buildersUrl)
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: (this.buildersUrl)
- en: .pipe(
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(error  =>
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(error  =>
- en: this.handleError(error))
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError(error))
- en: );
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** GET builder detail from builder-detail endpoint
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: /** GET builder detail from builder-detail endpoint */
- en: '*/'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '*/'
- en: 'getBuilderDetail (id:  number):'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 'getBuilderDetail (id:  number):'
- en: Observable<Builder[]> {
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: Observable<Builder[]> {
- en: return  this.http.get<Builder[]>(this.buildersUrl  +
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.get<Builder[]>(this.buildersUrl  +
- en: '`/${id}`)'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`/${id}`)'
- en: .pipe(
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(error  =>
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(error  =>
- en: this.handleError(error))
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError(error))
- en: );
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** POST builder to builders endpoint */
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: /** POST builder to builders endpoint */
- en: 'addBuilder (builder:  Builder):  Observable<Builder>'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 'addBuilder (builder:  Builder):  Observable<Builder>'
- en: '{'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: return  this.http.post<Builder>
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.post<Builder>
- en: (this.buildersUrl, builder)
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: (this.buildersUrl, builder)
- en: .pipe(
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(error  =>
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(error  =>
- en: this.handleError(error))
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError(error))
- en: );
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** PUT builder to builders endpoint */
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: /** PUT builder to builders endpoint */
- en: 'updateBuilder (builder:  Builder, id:  number):'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 'updateBuilder (builder:  Builder, id:  number):'
- en: Observable<Builder> {
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: Observable<Builder> {
- en: return  this.http.put<Builder>
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.put<Builder>
- en: (this.buildersUrl  +  `/${id}`, builder)
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: (this.buildersUrl  +  `/${id}`, builder)
- en: .pipe(
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(error  =>
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(error  =>
- en: this.handleError(error))
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError(error))
- en: );
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** DELETE builder builder endpoint */
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: /** DELETE builder builder endpoint */
- en: 'deleteBuilder (id:  number):  Observable<Builder[]>'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 'deleteBuilder (id:  number):  Observable<Builder[]>'
- en: '{'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: return  this.http.delete<Builder[]>
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.delete<Builder[]>
- en: (this.buildersUrl  +  `/${id}`)
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: (this.buildersUrl  +  `/${id}`)
- en: .pipe(
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(error  =>
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(error  =>
- en: this.handleError(error))
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError(error))
- en: );
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** Error handler */
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: /** Error handler */
- en: 'private  handleError(error:  HttpErrorResponse) {'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 'private  handleError(error:  HttpErrorResponse) {'
- en: if (error.error  instanceof  ErrorEvent) {
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: if (error.error  instanceof  ErrorEvent) {
- en: // A client-side error.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: // A client-side error.
- en: console.error('An error occurred:',
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: console.error('An error occurred:',
- en: error.error.message);
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: error.error.message);
- en: '} else {'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: // The backend error.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: // The backend error.
- en: return  throwError(error);
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: return  throwError(error);
- en: '}'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: // return a custom error message
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: // return a custom error message
- en: return  throwError('Something bad happened;
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: return  throwError('Something bad happened;
- en: please try again later.');
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 请稍后再试。');
- en: '}'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE32]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: ng g service pages/shared/_services/httpHandleError
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: ng g service pages/shared/_services/httpHandleError
- en: '[PRE33]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: import { HttpErrorResponse } from  '@angular/common/http';
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpErrorResponse } from  '@angular/common/http';
- en: import { Observable, of } from  'rxjs';
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: import { Observable, of } from  'rxjs';
- en: '[PRE34]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: export  type  HandleError  =
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: export  type  HandleError  =
- en: '<T> (operation?:  string, result?:  T) => (error:  HttpErrorResponse) =>  Observable<T>;'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '<T> (operation?:  string, result?:  T) => (error:  HttpErrorResponse) =>  Observable<T>;'
- en: '[PRE35]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: /** Pass the service name to map errors */
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: /** Pass the service name to map errors */
- en: createHandleError  = (serviceName  =  '') => <T>
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: createHandleError  = (serviceName  =  '') => <T>
- en: (operation  =  'operation', result  = {} as  T) =>
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: (operation  =  'operation', result  = {} as  T) =>
- en: this.handleError(serviceName, operation, result)
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError(serviceName, operation, result)
- en: handleError<T> (serviceName  =  '', operation  =
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: handleError<T> (serviceName  =  '', operation  =
- en: '''operation'', result  = {} as  T) {'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '''operation'', result  = {} as  T) {'
- en: 'return (response:  HttpErrorResponse):'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 'return (response:  HttpErrorResponse):'
- en: Observable<T> => {
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: Observable<T> => {
- en: // Optionally send the error to a third part
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: // Optionally send the error to a third part
- en: error logging service
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: error logging service
- en: console.error(response);
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: console.error(response);
- en: // Show a simple alert if error
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: // Show a simple alert if error
- en: const  message  = (response.error
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: const  message  = (response.error
- en: instanceof  ErrorEvent) ?
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: instanceof  ErrorEvent) ?
- en: 'response.error.message  :'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 'response.error.message  :'
- en: '`server returned code ${response.status}'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '`server returned code ${response.status}'
- en: with body "${response.error.error}"`;
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: with body "${response.error.error}"`;
- en: // We are using alert just for example, on
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: // We are using alert just for example, on
- en: real world avoid this pratice
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 现实世界避免这种做法
- en: alert(message);
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: alert(message);
- en: // Keep running and returning a safe result.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: // Keep running and returning a safe result.
- en: return  of( result );
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: return  of( result );
- en: '};'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '}'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE36]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: import { HttpErrorHandler } from  './shared/_services/http-handle-error.service';
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpErrorHandler } from  './shared/_services/http-handle-error.service';
- en: '[PRE37]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'providers: ['
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 'providers: ['
- en: Title,
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 标题，
- en: HttpErrorHandler,
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: HttpErrorHandler,
- en: '],'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '[PRE38]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: import { Injectable } from  '@angular/core';
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: import { Injectable } from  '@angular/core';
- en: import { HttpClient, HttpParams, HttpErrorResponse } from
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpClient, HttpParams, HttpErrorResponse } from
- en: '''@angular/common/http'';'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '''@angular/common/http'';'
- en: import { HttpHeaders } from  '@angular/common/http';
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpHeaders } from  '@angular/common/http';
- en: import { Observable, throwError } from  'rxjs';
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: import { Observable, throwError } from  'rxjs';
- en: import { catchError } from  'rxjs/operators';
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: import { catchError } from  'rxjs/operators';
- en: // App import
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: // App import
- en: import { environment } from
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: import { environment } from
- en: '''../../../../environments/environment'';'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '''../../../../environments/environment'';'
- en: import { Builder } from  '../builder';
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: import { Builder } from  '../builder';
- en: import { HttpErrorHandler, HandleError } from
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpErrorHandler, HandleError } from
- en: '''../../../shared/_services/http-handle-error.service'';'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '''../../../shared/_services/http-handle-error.service'';'
- en: '@Injectable({'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '@Injectable({'
- en: 'providedIn: ''root'''
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 'providedIn: ''root'''
- en: '})'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: export  class  BuildersService {
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: export  class  BuildersService {
- en: private  readonly  apiUrl  =  environment.apiUrl;
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: private  readonly  apiUrl  =  environment.apiUrl;
- en: private  buildersUrl  =  this.apiUrl  +
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: private  buildersUrl  =  this.apiUrl  +
- en: '''/builders'';'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '''/builders'';'
- en: 'private  handleError:  HandleError;'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 'private  handleError:  HandleError;'
- en: constructor(
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: constructor(
- en: 'private  http:  HttpClient,'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 'private  http:  HttpClient,'
- en: 'httpErrorHandler:  HttpErrorHandler ) {'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 'httpErrorHandler:  HttpErrorHandler ) {'
- en: this.handleError  =
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError  =
- en: httpErrorHandler.createHandleError('BuildersService');
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: httpErrorHandler.createHandleError('BuildersService');
- en: '}'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** GET builders from builders endpoint */
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: /** GET builders from builders endpoint */
- en: 'getBuilders ():  Observable<Builder[]> {'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 'getBuilders ():  Observable<Builder[]> {'
- en: return  this.http.get<Builder[]>
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.get<Builder[]>
- en: (this.buildersUrl)
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: (this.buildersUrl)
- en: .pipe(
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('getBuilders', []))
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('getBuilders', []))
- en: );
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** GET builder detail from builder-detail endpoint
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: /** GET builder detail from builder-detail endpoint
- en: '*/'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '*/'
- en: 'getBuilderDetail (id:  number):'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 'getBuilderDetail (id:  number):'
- en: Observable<Builder[]> {
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: Observable<Builder[]> {
- en: return  this.http.get<Builder[]>
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.get<Builder[]>
- en: (this.buildersUrl  +  `/${id}`)
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: (this.buildersUrl  +  `/${id}`)
- en: .pipe(
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('getBuilderDetail', []))
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('getBuilderDetail', []))
- en: );
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** POST builder to builders endpoint */
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: /** POST builder to builders endpoint */
- en: 'addBuilder (builder:  Builder):  Observable<Builder> {'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 'addBuilder (builder:  Builder):  Observable<Builder> {'
- en: return  this.http.post<Builder>
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.post<Builder>
- en: (this.buildersUrl, builder)
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: (this.buildersUrl, builder)
- en: .pipe(
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('addBuilder', builder))
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('addBuilder', builder))
- en: );
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** PUT builder to builders endpoint */
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: /** PUT builder to builders endpoint */
- en: 'updateBuilder (builder:  Builder, id:  number):'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 'updateBuilder (builder:  Builder, id:  number):'
- en: Observable<Builder> {
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: Observable<Builder> {
- en: return  this.http.put<Builder>(this.buildersUrl
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.put<Builder>(this.buildersUrl
- en: +  `/${id}`, builder).pipe(
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: +  `/${id}`, builder).pipe(
- en: catchError(this.handleError('updateBuilder', builder))
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('updateBuilder', builder))
- en: );
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** DELETE builder builder endpoint */
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: /** DELETE builder builder endpoint */
- en: 'deleteBuilder (id:  number):  Observable<Builder[]> {'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 'deleteBuilder (id:  number):  Observable<Builder[]> {'
- en: return  this.http.delete<Builder[]>
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.delete<Builder[]>
- en: (this.buildersUrl  +  `/${id}`)
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: (this.buildersUrl  +  `/${id}`)
- en: .pipe(
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('deleteBuilder'))
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('deleteBuilder'))
- en: );
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE39]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: this.handleError = httpErrorHandler.createHandleError ('BuildersService');
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError = httpErrorHandler.createHandleError ('BuildersService');
- en: '[PRE40]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: import { Injectable } from  '@angular/core';
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: import { Injectable } from  '@angular/core';
- en: import { HttpClient, HttpParams, HttpErrorResponse } from  '@angular/common/http';
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpClient, HttpParams, HttpErrorResponse } from  '@angular/common/http';
- en: import { HttpHeaders } from  '@angular/common/http';
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpHeaders } from  '@angular/common/http';
- en: import { Observable, throwError } from  'rxjs';
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: import { Observable, throwError } from  'rxjs';
- en: import { catchError } from  'rxjs/operators';
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: import { catchError } from  'rxjs/operators';
- en: // App import
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: // App import
- en: import { environment } from  '../../../../environments/environment';
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: import { environment } from  '../../../../environments/environment';
- en: import { Bike } from  '../bike';
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: import { Bike } from  '../bike';
- en: import { HttpErrorHandler, HandleError } from  '../../../shared/_services/http-handle-error.service';
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpErrorHandler, HandleError } from  '../../../shared/_services/http-handle-error.service';
- en: '@Injectable({'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '@Injectable({'
- en: 'providedIn: ''root'''
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 'providedIn: ''root'''
- en: '})'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: export  class  BikesService {
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: export  class  BikesService {
- en: private  readonly  apiUrl  =  environment.apiUrl;
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: private  readonly  apiUrl  =  environment.apiUrl;
- en: private  bikesUrl  =  this.apiUrl  +  '/bikes';
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: private  bikesUrl  =  this.apiUrl  +  '/bikes';
- en: 'private  handleError:  HandleError;'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 'private  handleError:  HandleError;'
- en: constructor(
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: constructor(
- en: 'private  http:  HttpClient,'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 'private  http:  HttpClient,'
- en: 'httpErrorHandler:  HttpErrorHandler ) {'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 'httpErrorHandler:  HttpErrorHandler ) {'
- en: this.handleError  =
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: this.handleError  =
- en: httpErrorHandler.createHandleError('BikesService');
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: httpErrorHandler.createHandleError('BikesService');
- en: '}'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** GET bikes from bikes endpoint */
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: /** GET bikes from bikes endpoint */
- en: 'getBikes ():  Observable<Bike[]> {'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 'getBikes ():  Observable<Bike[]> {'
- en: return  this.http.get<Bike[]>(this.bikesUrl)
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.get<Bike[]>(this.bikesUrl)
- en: .pipe(
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('getBikes', []))
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('getBikes', []))
- en: );
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** GET bike detail from bike-detail endpoint */
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: /** GET bike detail from bike-detail endpoint */
- en: 'getBikeDetail (id:  number):  Observable<Bike[]> {'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 'getBikeDetail (id:  number):  Observable<Bike[]> {'
- en: return  this.http.get<Bike[]>(this.bikesUrl  +
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.get<Bike[]>(this.bikesUrl  +
- en: '`/${id}`)'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '`/${id}`)'
- en: .pipe(
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('getBikeDetail', []))
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('getBikeDetail', []))
- en: );
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** POST bike to bikes endpoint */
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: /** POST bike to bikes endpoint */
- en: 'addBike (bike:  Bike):  Observable<Bike> {'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 'addBike (bike:  Bike):  Observable<Bike> {'
- en: return  this.http.post<Bike>(this.bikesUrl,
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.post<Bike>(this.bikesUrl,
- en: bike)
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: bike)
- en: .pipe(
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('addBike', bike))
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('addBike', bike))
- en: );
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** PUT bike to bikes endpoint */
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: /** PUT bike to bikes endpoint */
- en: 'updateBike (bike:  Bike, id:  number):'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 'updateBike (bike:  Bike, id:  number):'
- en: Observable<Bike> {
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: Observable<Bike> {
- en: return  this.http.put<Bike>(this.bikesUrl  +
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.put<Bike>(this.bikesUrl  +
- en: '`/${id}`, bike)'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '`/${id}`, bike)'
- en: .pipe(
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('updateBike', bike))
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('updateBike', bike))
- en: );
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** DELETE bike bike endpoint */
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: /** DELETE bike bike endpoint */
- en: 'deleteBike (id:  number):  Observable<Bike[]> {'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 'deleteBike (id:  number):  Observable<Bike[]> {'
- en: return  this.http.delete<Bike[]>(this.bikesUrl
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.delete<Bike[]>(this.bikesUrl
- en: +  `/${id}`)
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: +  `/${id}`)
- en: .pipe(
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('deleteBike'))
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('deleteBike'))
- en: );
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: '}'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: /** Vote on bike */
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: /** Vote on bike */
- en: 'voteOnBike (vote:  number, bike:  number):'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 'voteOnBike (vote:  number, bike:  number):'
- en: Observable<any> {
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: Observable<any> {
- en: const  rating  =  vote;
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: const  rating  =  vote;
- en: return  this.http.post(this.bikesUrl  +
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: return  this.http.post(this.bikesUrl  +
- en: '`/${bike}/ratings`, {rating})'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '`/${bike}/ratings`, {rating})'
- en: .pipe(
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: .pipe(
- en: catchError(this.handleError('voteOnBike', []))
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: catchError(this.handleError('voteOnBike', []))
- en: );
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '}'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE41]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: ng g service shared/_services/http-interceptor
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: ng g service shared/_services/http-interceptor
- en: '[PRE42]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: import { Injectable, Injector } from  '@angular/core';
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: import { Injectable, Injector } from  '@angular/core';
- en: import { HttpEvent, HttpHeaders, HttpInterceptor, HttpHandler, HttpRequest,
    HttpErrorResponse, HttpResponse } from  '@angular/common/http';
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpEvent, HttpHeaders, HttpInterceptor, HttpHandler, HttpRequest,
    HttpErrorResponse, HttpResponse } from  '@angular/common/http';
- en: import { Observable } from  'rxjs';
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: import { Observable } from  'rxjs';
- en: import { catchError, map, tap } from  'rxjs/operators';
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: import { catchError, map, tap } from  'rxjs/operators';
- en: import { Router } from  '@angular/router';
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: import { Router } from  '@angular/router';
- en: // App import
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: // App import
- en: import { AuthService } from
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: import { AuthService } from
- en: '''../../pages/auth/_services/auth.service'';'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '''../../pages/auth/_services/auth.service'';'
- en: '@Injectable()'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: '@Injectable()'
- en: export  class  AppHttpInterceptorService  implements
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: export  class  AppHttpInterceptorService  implements
- en: HttpInterceptor {
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: HttpInterceptor {
- en: 'constructor(public  auth:  AuthService, private  router:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 'constructor(public  auth:  AuthService, private  router:'
- en: Router ) { }
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: Router ) { }
- en: 'intercept(req:  HttpRequest<any>, next:  HttpHandler):'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 'intercept(req:  HttpRequest<any>, next:  HttpHandler):'
- en: Observable<HttpEvent<any>> {
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: Observable<HttpEvent<any>> {
- en: console.log('interceptor running');
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('interceptor running');
- en: // Get the token from auth service.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: // Get the token from auth service.
- en: const  authToken  =  this.auth.getToken();
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: const  authToken  =  this.auth.getToken();
- en: if (authToken) {
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: if (authToken) {
- en: // Clone the request to add the new header.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: // Clone the request to add the new header.
- en: const  authReq  =  req.clone(
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: const  authReq  =  req.clone(
- en: '{ headers:'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '{ headers:'
- en: req.headers.set('Authorization', `Bearer ${authToken}`)}
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: req.headers.set('Authorization', `Bearer ${authToken}`)}
- en: );
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: console.log('interceptor running with new
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('interceptor running with new
- en: headers');
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: headers');
- en: // send the newly created request
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: // 发送新创建的请求
- en: return  next.handle(authReq).pipe(
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: return  next.handle(authReq).pipe(
- en: 'tap((event:  HttpEvent<any>) => {'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 'tap((event:  HttpEvent<any>) => {'
- en: if (event instanceof
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: if (event instanceof
- en: HttpResponse) {
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: HttpResponse) {
- en: // Response wiht
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: // Response wiht
- en: HttpResponse type
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: HttpResponse type
- en: console.log('TAP function',
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('TAP function',
- en: event);
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: event);
- en: '}'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}, (err:  any) => {'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '}, (err:  any) => {'
- en: console.log(err);
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(err);
- en: if (err  instanceof
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: if (err  instanceof
- en: HttpErrorResponse) {
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: HttpErrorResponse) {
- en: if (err.status ===  401) {
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: if (err.status ===  401) {
- en: localStorage.removeItem('token');
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: localStorage.removeItem('token');
- en: this.router.navigate(['/']);
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: this.router.navigate(['/']);
- en: '}'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '})'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: );
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '} else {'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: console.log('interceptor without changes');
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: console.log('interceptor without changes');
- en: '[PRE43]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: return  next.handle(req);
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: return  next.handle(req);
- en: '}'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE44]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: const  authReq  =  req.clone(
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: const  authReq  =  req.clone(
- en: '{ headers: req.headers.set(''Authorization'', `Bearer ${authToken}`)}'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: '{ headers: req.headers.set(''Authorization'', `Bearer ${authToken}`)}'
- en: );
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: '[PRE45]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: this.router.navigate(['/']);
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: this.router.navigate(['/']);
- en: '[PRE46]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: import { AppHttpInterceptorService } from  './shared/_services/app-http-interceptor.service';
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: import { AppHttpInterceptorService } from  './shared/_services/app-http-interceptor.service';
- en: '[PRE47]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '{'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'provide: HTTP_INTERCEPTORS,'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 'provide: HTTP_INTERCEPTORS,'
- en: 'useClass: AppHttpInterceptorService ,'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 'useClass: AppHttpInterceptorService ,'
- en: 'multi: true'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 'multi: true'
- en: '}'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE48]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: import { BrowserModule, Title } from  '@angular/platform-browser';
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: import { BrowserModule, Title } from  '@angular/platform-browser';
- en: import { NgModule } from  '@angular/core';
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: import { NgModule } from  '@angular/core';
- en: import { HttpClientModule, HTTP_INTERCEPTORS } from  '@angular/common/http';
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpClientModule, HTTP_INTERCEPTORS } from  '@angular/common/http';
- en: import { AppRoutingModule } from  './app-routing.module';
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: import { AppRoutingModule } from  './app-routing.module';
- en: import { ServiceWorkerModule } from  '@angular/service-worker';
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: import { ServiceWorkerModule } from  '@angular/service-worker';
- en: // Application modules
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: // 应用模块
- en: import { AppComponent } from  './app.component';
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: import { AppComponent } from  './app.component';
- en: import { environment } from  '../environments/environment';
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: import { environment } from  '../environments/environment';
- en: import { HomeModule } from  './pages/home/home.module';
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: import { HomeModule } from  './pages/home/home.module';
- en: import { BikesModule } from  './pages/bikes/bikes.module';
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: import { BikesModule } from  './pages/bikes/bikes.module';
- en: import { BuildersModule } from  './pages/builders/builders.module';
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: import { BuildersModule } from  './pages/builders/builders.module';
- en: import { AuthModule } from  './pages/auth/auth.module';
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: import { AuthModule } from  './pages/auth/auth.module';
- en: import { NavComponent } from  './layout/nav/nav.component';
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: import { NavComponent } from  './layout/nav/nav.component';
- en: import { HttpErrorHandler } from  './shared/_services/http-handle-error.service';
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: import { HttpErrorHandler } from  './shared/_services/http-handle-error.service';
- en: import { AppHttpInterceptorService } from  './shared/_services/app-http-interceptor.service';
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: import { AppHttpInterceptorService } from  './shared/_services/app-http-interceptor.service';
- en: '@NgModule({'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: '@NgModule({'
- en: 'declarations: ['
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 'declarations: ['
- en: AppComponent,
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: AppComponent,
- en: NavComponent
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: NavComponent
- en: '],'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: 'imports: ['
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 'imports: ['
- en: BrowserModule,
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: BrowserModule,
- en: AppRoutingModule,
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: AppRoutingModule,
- en: HttpClientModule,
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: HttpClientModule,
- en: HomeModule,
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: HomeModule,
- en: BikesModule,
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: BikesModule,
- en: BuildersModule,
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: BuildersModule,
- en: AuthModule,
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: AuthModule,
- en: 'ServiceWorkerModule.register(''/ngsw-worker.js'', { enabled: environment.production
    })'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 'ServiceWorkerModule.register(''/ngsw-worker.js'', { enabled: environment.production
    })'
- en: '],'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: 'providers: ['
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 'providers: ['
- en: Title,
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: Title,
- en: HttpErrorHandler,
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: HttpErrorHandler,
- en: '{'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'provide: HTTP_INTERCEPTORS,'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 'provide: HTTP_INTERCEPTORS,'
- en: 'useClass: AppHttpInterceptorService ,'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 'useClass: AppHttpInterceptorService ,'
- en: 'multi: true'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 'multi: true'
- en: '}'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '],'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: 'bootstrap: [AppComponent]'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 'bootstrap: [AppComponent]'
- en: '})'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: '})'
- en: export  class  AppModule { }
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: export  class  AppModule { }
- en: '[PRE49]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: /**
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: /**
- en: '* Protect update and delete methods, only for authenticated'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '* Protect update and delete methods, only for authenticated'
- en: users.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: users.
- en: '*'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '*'
- en: '* @return  Unauthorized'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: '* @return  Unauthorized'
- en: '*/'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '*/'
- en: public  function  __construct()
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: public  function  __construct()
- en: '{'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: $this->middleware('auth:api')->except(['index']);
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: $this->middleware('auth:api')->except(['index']);
- en: '}'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE50]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: ng g guard pages/auth/_guards/auth
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: ng g guard pages/auth/_guards/auth
- en: '[PRE51]'
  id: totrans-565
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: import { AuthService } from  '../_services/auth.service';
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: import { AuthService } from  '../_services/auth.service';
- en: '[PRE52]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: constructor(
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: constructor(
- en: 'private  router:  Router,'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 'private  router:  Router,'
- en: 'private  auth:  AuthService) {}'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 'private  auth:  AuthService) {}'
- en: '[PRE53]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: if (this.auth.isAuthenticated()) {
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: if (this.auth.isAuthenticated()) {
- en: // logged in so return true
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: // logged in so return true
- en: return  true;
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: return  true;
- en: '}'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: // not logged in so redirect to login page with the return url
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: // not logged in so redirect to login page with the return url
- en: 'this.router.navigate([''/login''], { queryParams: { returnUrl: state.url }});'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 'this.router.navigate([''/login''], { queryParams: { returnUrl: state.url }});'
- en: '[PRE54]'
  id: totrans-578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: import { AuthGuard } from '../auth/_guards/auth.guard';
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: import { AuthGuard } from '../auth/_guards/auth.guard';
- en: '[PRE55]'
  id: totrans-580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '{'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'path: '':id'','
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 'path: '':id'','
- en: 'component: BikeDetailComponent,'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 'component: BikeDetailComponent,'
- en: 'canActivate: [AuthGuard]'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 'canActivate: [AuthGuard]'
- en: '}'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '```'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Voilà! Our `bike-detail` route is now protected.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 看！我们的`bike-detail`路由现在受到了保护。
- en: Summary
  id: totrans-588
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Summary
- en: Now, we are very close to seeing our application in a working state. However,
    we still need to perform some steps that we will look at in the following chapters.
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们离看到我们的应用程序处于工作状态非常接近。然而，我们仍然需要执行一些步骤，我们将在接下来的章节中进行讨论。
- en: In the meantime, we have learned some important points for building modern web
    applications, such as creating services to handle XHR requests, learning how to
    protect our routes, as well as creating a route interceptor and a service for
    handling errors.
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，我们已经学习了一些构建现代Web应用程序的重要要点，比如创建服务来处理XHR请求，学习如何保护我们的路由，以及创建路由拦截器和处理错误的服务。
- en: In the next chapter, we are going to delve deeply into how to use the services
    we have just created within our components, and we will also apply a visual layer
    to our application.
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨如何在我们的组件中使用我们刚刚创建的服务，并且我们还将为我们的应用程序应用一个视觉层。
