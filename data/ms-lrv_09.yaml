- en: Chapter 9. Scaling Laravel
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。扩展Laravel
- en: A characteristic of frameworks built in any programming language is the use
    of various components. As we saw in the previous chapters, frameworks provide
    a software developer with many different prebuilt tools to accomplish tasks such
    as authentication, database interaction, and RESTful API creation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 任何编程语言中构建的框架的特点是使用各种组件。正如我们在前几章中看到的，框架为软件开发人员提供了许多不同的预构建工具，以完成诸如身份验证、数据库交互和RESTful
    API创建等任务。
- en: However, regarding frameworks, scalability issues are always the worst fears
    of any manager in the information technology field. As with any library that uses
    existing code, there will be always some amount of overhead, some amount of bloat,
    something more than is actually needed.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，就框架而言，可扩展性问题总是信息技术领域任何经理最担心的问题。与使用现有代码的任何库一样，总会有一定程度的开销，一定程度的膨胀，总会有比实际需要的更多的东西。
- en: Scalability issues
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可扩展性问题
- en: 'There are many reasons why a framework could not easily scale. Let''s look
    at a short list of issues:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 框架无法轻松扩展的原因有很多。让我们来看一下问题的简要列表：
- en: One issue is unnecessary code and packages that are not directly related to
    the actual application being built. Not every project needs authentication, for
    example, a database drivers per MySQL. Packages that are part of the core of the
    framework must be monitored for compatibility issues.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个问题是不必要的代码和与实际构建的应用程序无直接关系的包。例如，并非每个项目都需要身份验证，数据库驱动程序也不一定是MySQL。框架核心的包必须监控兼容性问题。
- en: Design patterns, opinions, and learning curves often prevent new team members
    from getting familiar quickly. As the project expands, the day-to-day development
    needs to grow, and a software development group must continually recruit members
    who are either already somewhat familiar with a framework or at least understand
    its basic concepts.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计模式、观点和学习曲线经常阻碍新团队成员快速熟悉。随着项目的扩大，日常开发需求也需要增长，软件开发团队必须不断招募那些对框架已经有一定了解或至少了解其基本概念的成员。
- en: Framework security issues require continual monitoring of the framework community's
    website or repository to gather information regarding emergency security updates
    that are required. Even the underlying web server and operating system itself
    need to be monitored. At the time of writing, Laravel 5.1 is nearing its release
    and it will require PHP 5.5, since PHP 5.4 will be declared end-of-life later
    in 2015.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 框架安全问题需要持续监控框架社区的网站或存储库，以收集有关所需的紧急安全更新的信息。甚至底层的Web服务器和操作系统本身也需要监控。在撰写本文时，Laravel
    5.1即将发布，它将需要PHP 5.5，因为PHP 5.4将在2015年晚些时候宣布终止生命周期。
- en: ORMs such as Eloquent always add a slight amount of overhead, since the code
    needs to be converted first from Eloquent into the fluent query builder and then
    into PDO code. Obviously, using an object-oriented approach to query the database
    is a wise choice, but it has a cost.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 诸如Eloquent之类的ORM总是会增加一些开销，因为代码首先需要从Eloquent转换为流畅的查询构建器，然后再转换为PDO代码。显然，使用面向对象的方法来查询数据库是明智的选择，但它是有成本的。
- en: Towards the enterprise
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 走向企业
- en: Despite possible roadblocks, Laravel will continue to be a strong option in
    the future of enterprise. PHP 7 is going to be very fast, and frameworks such
    as Zend Framework 3 have already announced PHP 7 optimization in their road map.
    Also, by using the **FastCGI Process Manager** (**FPM**), NGINX web server, and
    allowing PHP's caching mechanisms to work properly, application scalability will
    continue to become more accepted in the enterprise space as its renaissance continues
    and new developers contribute to its core.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可能会遇到一些障碍，Laravel在未来的企业中仍将是一个强大的选择。PHP 7将会非常快，而Zend Framework 3等框架已经宣布了他们在PHP
    7优化方面的路线图。此外，通过使用**FastCGI进程管理器**（**FPM**）、NGINX Web服务器，并允许PHP的缓存机制正常工作，应用程序的可扩展性将继续在企业空间中得到更多的认可，因为它的复兴持续进行，新的开发人员也在为其核心做出贡献。
- en: In this chapter, you will learn how to allow Laravel to perform better in the
    enterprise setting where scalability issues are paramount. First, router caching
    will be discussed. Then, you will learn about the many tools, techniques, and
    even new microframeworks that are being developed with scalability at the forefront.
    Specifically, we will discuss an official microframework derived from Laravel,
    **Lumen**. Finally, you will learn how to use the database efficiently through
    a technique called *read* and *write*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何让Laravel在企业环境中表现更好，其中可扩展性问题至关重要。首先，将讨论路由器缓存。然后，您将了解许多工具、技术，甚至是正在开发的以可扩展性为重点的新微框架。具体来说，我们将讨论从Laravel派生的官方微框架**Lumen**。最后，您将学习如何通过一种称为*读*和*写*的技术有效地使用数据库。
- en: In terms of the size of the code base, Laravel has one of the smallest code
    bases as compared to Zend or Symfony, although it does use some Symfony components.
    As mentioned in previous chapters, different packages were removed to lighten
    up the footprint, taking cues from Symfony's component-based ideology. For example,
    the HTML, SSH, and annotations packages are no longer included by default.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码库的大小方面，与Zend或Symfony相比，Laravel的代码库是最小的之一，尽管它确实使用了一些Symfony组件。如前几章所述，不同的包被移除以减轻占用空间，这是从Symfony的基于组件的思想中得到的启示。例如，默认情况下不再包括HTML、SSH和注释包。
- en: Route caching
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 路由缓存
- en: Route caching helps to speed things up. In Laravel 5, a caching mechanism was
    introduced to speed up the execution.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 路由缓存有助于加快速度。在Laravel 5中，引入了一种缓存机制来加快执行速度。
- en: 'The example `routes.php` is shown here:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示了一个示例`routes.php`：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'By running the following command, Laravel will cache the routes:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行以下命令，Laravel将缓存路由：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, place them into the following directory:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将它们放入以下目录中：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here is a small portion of the resultant file:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这是结果文件的一小部分：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As the DocBlock states, the routes are encoded in base64 and then serialized:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如DocBlock所述，路由被编码为base64，然后进行序列化：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This performs some precompilation. If we base64 decode the contents of the
    file, we obtain the serialized data. The following code is an extract of the file:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这执行一些预编译。如果我们对文件的内容进行base64解码，我们将获得序列化的数据。以下代码是文件的一部分：
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If the `/vendor/routes.php` file exists, it is used instead of the `routes.php`
    file that is located at `/app/Http/routes.php`. If at some point using the route
    caching file is no longer desired, use the following `artisan` command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`/vendor/routes.php`文件存在，则使用它，而不是位于`/app/Http/routes.php`的`routes.php`文件。如果在某个时候不再希望使用路由缓存文件，则使用以下`artisan`命令：
- en: '[PRE6]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This command will delete the cached `routes` file and Laravel will begin using
    the `/app/Http/routes.php` file again.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将删除缓存的`routes`文件，Laravel将重新开始使用`/app/Http/routes.php`文件。
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'It is important to note that if there are any closures used in the `routes.php`
    file, then caching will fail. Here is an example of a closure in a route:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，如果在`routes.php`文件中使用了任何闭包，缓存将失败。以下是路由中闭包的一个示例：
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It is inadvisable to use closure in the `routes.php` file for any reason. To
    be able to use route caching, relocate the code used within the closure into a
    controller.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 出于任何原因，在`routes.php`文件中使用闭包是不可取的。为了能够使用路由缓存，将闭包中使用的代码移到控制器中。
- en: Illuminate routing
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Illuminate路由
- en: 'All of this work speeds up an important part of the request life cycle, the
    routing. In Laravel, the routing class is located inside the `illuminate/routing`
    namespace:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些工作都加快了请求生命周期中的一个重要部分，即路由。在Laravel中，路由类位于`illuminate/routing`命名空间中：
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Examining the `use` operators, it is clear that the routing mechanism consists
    of quite a few classes. The most important line is as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 检查`use`操作符，可以清楚地看出路由机制由许多类组成。最重要的一行是：
- en: '[PRE9]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Laravel uses Symfony's routing class. However, a new routing package written
    by Nikita Popov has emerged. `FastRoute` is a fast request router that is faster
    than other routing packages and addresses some of the issues of the existing routing
    packages. This component is one of the major advantages of the of the Lumen microframework.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Laravel使用Symfony的路由类。然而，Nikita Popov编写了一个新的路由软件包。`FastRoute`是一个快速的请求路由器，比其他路由软件包更快，并解决了现有路由软件包的一些问题。这个组件是Lumen微框架的主要优势之一。
- en: Lumen
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lumen
- en: In soda marketing terms, Lumen could be considered Laravel *Light* or Laravel
    *Zero*. In addition to using the `FastRoute` routing package, many packages have
    been removed from Lumen, allowing it to be minimal and reduce its footprint.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 从苏打营销的角度来看，Lumen可以被认为是Laravel *Light*或Laravel *Zero*。除了使用`FastRoute`路由软件包外，许多软件包已从Lumen中删除，使其变得最小化并减少其占用空间。
- en: Comparison between Laravel and Lumen
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Laravel和Lumen之间的比较
- en: 'The packages in Laravel and Lumen were compared and listed in the following
    table. These packages are installed when the following command is run:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在下表中列出了Laravel和Lumen中的软件包，并进行了比较。运行以下命令时，将安装这些软件包：
- en: '[PRE10]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The preceding command is used when the development is completed and the application
    is ready for deployment on the server. Tools such as PHPUnit and PHPSpec are obviously
    excluded at this stage.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令是在开发完成并且应用程序准备好部署到服务器时使用的。在这个阶段，诸如PHPUnit和PHPSpec之类的工具显然被排除在外。
- en: 'The package names are aligned to illustrate where the packages are present
    in both Laravel and Lumen:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 软件包名称对齐，以说明这些软件包在Laravel和Lumen中的位置：
- en: '| Laravel Packages | Lumen Packages |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| Laravel软件包 | Lumen软件包 |'
- en: '| --- | --- |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| - | `nikic/fast-route` |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| - | `nikic/fast-route` |'
- en: '| `illuminate/cache` | - |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/cache` | - |'
- en: '| `illuminate/config` | `illuminate/config` |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/config` | `illuminate/config` |'
- en: '| `illuminate/console` | `illuminate/console` |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/console` | `illuminate/console` |'
- en: '| `illuminate/container` | `illuminate/container` |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/container` | `illuminate/container` |'
- en: '| `illuminate/contracts` | `illuminate/contracts` |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/contracts` | `illuminate/contracts` |'
- en: '| `illuminate/cookie` | `illuminate/cookie` |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/cookie` | `illuminate/cookie` |'
- en: '| `illuminate/database` | `illuminate/database` |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/database` | `illuminate/database` |'
- en: '| `illuminate/encryption` | `illuminate/encryption` |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/encryption` | `illuminate/encryption` |'
- en: '| `illuminate/events` | `illuminate/events` |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/events` | `illuminate/events` |'
- en: '| `illuminate/exception` | - |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/exception` | - |'
- en: '| `illuminate/filesystem` | `illuminate/filesystem` |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/filesystem` | `illuminate/filesystem` |'
- en: '| `illuminate/foundation` | - |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/foundation` | - |'
- en: '| `illuminate/hashing` | `illuminate/hashing` |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/hashing` | `illuminate/hashing` |'
- en: '| `illuminate/http` | `illuminate/http` |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/http` | `illuminate/http` |'
- en: '| `illuminate/log` | - |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/log` | - |'
- en: '| `illuminate/mail` | - |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/mail` | - |'
- en: '| `illuminate/pagination` | `illuminate/pagination` |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/pagination` | `illuminate/pagination` |'
- en: '| `illuminate/pipeline` | - |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/pipeline` | - |'
- en: '| `illuminate/queue` | `illuminate/queue` |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/queue` | `illuminate/queue` |'
- en: '| `illuminate/redis` | - |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/redis` | - |'
- en: '| `illuminate/routing` | - |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/routing` | - |'
- en: '| `illuminate/session` | `illuminate/session` |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/session` | `illuminate/session` |'
- en: '| `illuminate/support` | `illuminate/support` |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/support` | `illuminate/support` |'
- en: '| `illuminate/translation` | `illuminate/translation` |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/translation` | `illuminate/translation` |'
- en: '| `illuminate/validation` | `illuminate/validation` |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/validation` | `illuminate/validation` |'
- en: '| `illuminate/view` | `illuminate/view` |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| `illuminate/view` | `illuminate/view` |'
- en: '| `jeremeamia/superclosure` | - |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| `jeremeamia/superclosure` | - |'
- en: '| `league/flysystem` | - |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| `league/flysystem` | - |'
- en: '| `monolog/monolog` | `monolog/monolog` |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `monolog/monolog` | `monolog/monolog` |'
- en: '| `mtdowling/cron-expression` | `mtdowling/cron-expression` |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `mtdowling/cron-expression` | `mtdowling/cron-expression` |'
- en: '| `nesbot/carbon` | - |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `nesbot/carbon` | - |'
- en: '| `psy/psysh` | - |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `psy/psysh` | - |'
- en: '| `swiftmailer/swiftmailer` | - |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `swiftmailer/swiftmailer` | - |'
- en: '| `symfony/console` | - |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/console` | - |'
- en: '| `symfony/css-selector` | - |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/css-selector` | - |'
- en: '| `symfony/debug` | - |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/debug` | - |'
- en: '| `symfony/dom-crawler` | - |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/dom-crawler` | - |'
- en: '| `symfony/finder` | - |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/finder` | - |'
- en: '| `symfony/http-foundation` | `symfony/http-foundation` |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/http-foundation` | `symfony/http-foundation` |'
- en: '| `symfony/http-kernel` | `symfony/http-kernel` |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/http-kernel` | `symfony/http-kernel` |'
- en: '| `symfony/process` | - |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/process` | - |'
- en: '| `symfony/routing` | - |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/routing` | - |'
- en: '| `symfony/security-core` | `symfony/security-core` |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/security-core` | `symfony/security-core` |'
- en: '| `symfony/var-dumper` | `symfony/var-dumper` |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `symfony/var-dumper` | `symfony/var-dumper` |'
- en: '| `vlucas/phpdotenv` | - |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `vlucas/phpdotenv` | - |'
- en: '| `classpreloader/classpreloader` | - |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `classpreloader/classpreloader` | - |'
- en: '| `danielstjules/stringy` | - |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `danielstjules/stringy` | - |'
- en: '| `doctrine/inflector` | - |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `doctrine/inflector` | - |'
- en: '| `ext-mbstring` | - |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `ext-mbstring` | - |'
- en: '| `ext-mcrypt` | - |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `ext-mcrypt` | - |'
- en: At the time of writing, there are 51 packages (shown in the left column) that
    are installed in Laravel 5.0 using the nondevelopment configuration. Compare this
    number of packages to the number of packages installed in Lumen (shown in the
    right column)—there are just 24.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，使用非开发配置在Laravel 5.0中安装了51个包（显示在左列）。将此包数量与Lumen中安装的包数量进行比较（显示在右列）-只有24个。
- en: The aforementioned `nikic/fast-route` package is the only package that Lumen
    has which Laravel does not. The `symfony/routing` package is the complimentary
    package found in Laravel.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 前述的`nikic/fast-route`包是Lumen拥有而Laravel没有的唯一包。`symfony/routing`包是Laravel中的补充包。
- en: Lean application development
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精简应用程序开发
- en: 'We will use an example, a simple public-facing RESTful API. This RESTful API
    displays the names and addresses of a list of accommodations in JSON format to
    any user via `GET`:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个示例，一个简单的面向公众的RESTful API。这个RESTful API以JSON格式向任何用户显示一系列住宿的名称和地址，通过`GET`：
- en: If no passwords are to be used, then `ext/mcrypt` is not needed.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果不需要使用密码，则不需要`ext/mcrypt`。
- en: If no date calculations are to performed, then `nesbot/carbon` is not needed.
    Since there is no HTML interface, then the following libraries involved in testing
    the HTML of an application, `symfony/css-selector` and `symfony/dom-crawler`,
    will not be needed.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果不需要进行日期计算，则不需要`nesbot/carbon`。由于没有HTML界面，因此不需要涉及测试应用程序的HTML的以下库，`symfony/css-selector`和`symfony/dom-crawler`。
- en: If no e-mail is to be sent to the user, then neither `illuminate/mail` nor `swiftmailer/swiftmailer`
    is needed.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果不需要向用户发送电子邮件，则不需要`illuminate/mail`或`swiftmailer/swiftmailer`。
- en: If no special interaction with the filesystem is needed, then there is no need
    for `league/flysystem`.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果不需要与文件系统进行特殊交互，则不需要`league/flysystem`。
- en: If not commands that are to run from the command line, then the `symfony/console`
    is not needed.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果不是从命令行运行的命令，则不需要`symfony/console`。
- en: If Redis is not needed, then `illuminate/redis` may be left out.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果不需要Redis，则可以不使用`illuminate/redis`。
- en: If specific configuration values will not be needed for different environments,
    then `vlucas/phpdotenv` is not needed.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果不需要不同环境的特定配置值，则不需要`vlucas/phpdotenv`。
- en: Tip
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The `vlucas/phpdotenv` package is a suggested package in the `composer.json`
    file.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`vlucas/phpdotenv`包是`composer.json`文件中的一个建议包。'
- en: It is clear that the decision to remove certain packages has been done carefully
    so as to lighten up Lumen as needed with the simplest of applications in mind.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，删除某些包的决定是经过慎重考虑的，以便根据最简单的应用程序需要简化Lumen。
- en: Read/write
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读/写
- en: 'Laravel has another great mechanism for helping its performance in the enterprise:
    read and write. This is related to database performance, but the functionality
    is so easy to set up that any application can take advantage of its usefulness.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Laravel还有另一个帮助其在企业中提高性能的机制：读/写。这与数据库性能有关，但功能如此易于设置，以至于任何应用程序都可以利用其有用性。
- en: Regarding MySQL, the original MyISAM database engine required a lock on the
    entire table during inserts, updates, and deletes. This caused massive bottlenecks
    during large operations that modified the data and select queries waited to access
    these tables. With the introduction of InnoDB, `UPDATE`, `INSERT`, and `DELETE`
    SQL statements required a lock only at the row-level. This tremendously impacted
    performance, since selects could read from various parts of a table where other
    operations were taking place.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 关于MySQL，原始的MyISAM数据库引擎在插入、更新和删除期间需要锁定整个表。这在修改数据的大型操作期间造成了严重瓶颈，而选择查询等待访问这些表。随着InnoDB的引入，`UPDATE`、`INSERT`和`DELETE`
    SQL语句只需要在行级别上锁定。这对性能产生了巨大影响，因为选择可以从表的各个部分读取，而其他操作正在进行。
- en: MariaDB, a MySQL fork, claims faster performance than the traditional MySQL.
    Replacing the database engine with TokuDB will give even higher performance, especially
    in a big data setting.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: MariaDB，一个MySQL分支，声称比传统的MySQL性能更快。将数据库引擎替换为TokuDB将提供更高的性能，特别是在大数据环境中。
- en: Another mechanism to speed up performance of the database is the use of a master/slave
    configuration. In the following diagram, all of the operations are performed on
    a single table. The inserts and updates will lock down single rows and the select
    statements will be performed as allocated.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 加速数据库性能的另一种机制是使用主/从配置。在下图中，所有操作都在单个表上执行。插入和更新将锁定单行，选择语句将按分配执行。
- en: '![Read/write](graphics/B04559_09_01.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![读/写](graphics/B04559_09_01.jpg)'
- en: Traditional database table actions
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 传统数据库表操作
- en: Master table
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主表
- en: 'The master/slave configuration uses a master table that allows `SELECT`, `UPDATE`,
    and `DELETE` statements. These statements modify the table or write to it. There
    may also be multiple master tables. Each master table is kept continually synchronized:
    changes made to any table needs to be communicated to the master table.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 主/从配置使用允许`SELECT`、`UPDATE`和`DELETE`语句的主表。这些语句修改表或向其写入。也可能有多个主表。每个主表都保持持续同步：对任何表所做的更改需要通知主表。
- en: Slave table
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从表
- en: 'The slave table is a slave to the master. It depends on the master table for
    its changes. SQL clients can only perform read operations (`SELECT`) from it.
    There may also be multiple slaves that depend on one or more multiple master tables.
    The master table communicates all of its changes to all the slaves. The following
    diagram shows the basic architecture of a master/slave setup:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据库表是主数据库表的从属。它依赖于主数据库表进行更改。SQL客户端只能从中执行读操作（`SELECT`）。可能还有多个从数据库依赖于一个或多个主数据库表。主数据库表将其所有更改通知给所有从数据库。以下图表显示了主/从设置的基本架构：
- en: '![Slave table](graphics/B04559_09_02.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![从数据库表](graphics/B04559_09_02.jpg)'
- en: Master and slave (read/write setup)
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 主从（读/写设置）
- en: 'This continual synchronization adds slight overhead to the database structure;
    however, it presents important advantages:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这种持续的同步会给数据库结构增加一些开销；然而，它提供了重要的优势：
- en: Since only `SELECT` statements can be performed on the slave table while `INSERT`,
    `UPDATE`, and `DELETE` statements can be performed on the master table, the slave
    table is free to accept many `SELECT` statements freely, without having to "wait"
    for any operations involving the same rows to finish.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 由于从数据库表只能执行`SELECT`语句，而主数据库表可以执行`INSERT`、`UPDATE`和`DELETE`语句，因此从数据库表可以自由接受许多`SELECT`语句，而无需等待涉及相同行的任何操作完成。
- en: An example of this would be a currency exchange rate or stock price table. This
    table would be continually updated in real time with the latest values, possibly
    even many times per second. Obviously, a website that allows many users to access
    this information could potentially have thousands of visitors. Also, the web page
    used to display this data may make continual multiple requests per user.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是货币汇率或股票价格表。这个表将实时不断地更新最新值，甚至可能每秒更新多次。显然，一个允许许多用户访问这些信息的网站可能会有成千上万的访问者。此外，用于显示这些数据的网页可能会为每个用户不断发出多个请求。
- en: Performing many `SELECT` statements would be slightly slower when there are
    `UPDATE` statements that need to access the same data at the same time.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 当有`UPDATE`语句需要同时访问相同数据时，执行许多`SELECT`语句会稍微慢一些。
- en: By using a master/slave configuration, the `SELECT` statements would be performed
    only on the slave table. This table receives only the data that has changed in
    an extremely optimized way.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用主/从配置，`SELECT`语句将仅在从数据库表上执行。这个表只以极其优化的方式接收已更改的数据。
- en: 'In plain PHP using a library such as `mysqli`, there could be two database
    connections configured:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在纯PHP中使用诸如`mysqli`之类的库，可以配置两个数据库连接：
- en: '[PRE11]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In this simplified example, the slave is set up on the same server machine.
    In a real application, it would most likely be set up on another server machine
    to take advantage of separate hardware.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简化的例子中，从数据库设置在同一台服务器上。在实际应用中，它很可能会设置在另一台服务器上，以利用独立的硬件。
- en: Then, all of the SQL statements which involve a *write* statement would be performed
    on the slave and *read* would be performed on the master.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，所有涉及*写*语句的SQL语句将在从数据库上执行，*读*将在主数据库上执行。
- en: 'This would add some overhead to the programming efforts, as a different connection
    would need to be passed into each SQL statement:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这将增加一些编程工作量，因为每个SQL语句都需要传入不同的连接：
- en: '[PRE12]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In the preceding code example, it would be prudent to remember which SQL statements
    should be used for the master and which SQL statements should be used for the
    slave.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码示例中，应该记住哪些SQL语句应该用于主数据库，哪些SQL语句应该用于从数据库。
- en: Configuring read/write
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置读/写
- en: As stated before, code written in Eloquent is converted into fluent query-builder
    code. This code is then converted to PDO, which is a standard wrapper around the
    various database drivers.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，用Eloquent编写的代码会转换为流畅的查询构建器代码。然后，该代码将转换为PDO，这是各种数据库驱动程序的标准封装。
- en: Laravel provides the ability to manage master/slave configurations though its
    read/write configuration. This allows programmers to write Eloquent and fluent
    query-builder code without having to worry about whether the queries will be executed
    on the master or slave table. Also, a software project that starts out with a
    non-master/slave configuration and later needs to scale up to a master/slave setup
    will only need to change one aspect of the database configuration. The database
    configuration file is located at `config/database.php`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: Laravel通过其读/写配置提供了管理主/从配置的能力。这使程序员能够编写Eloquent和流畅的查询构建器代码，而不必担心查询是在主数据库表还是从数据库表上执行。此外，一个最初没有主/从配置的软件项目，后来需要扩展到主/从设置，只需要改变数据库配置的一个方面。数据库配置文件位于`config/database.php`。
- en: 'As an element of the `connections` array, an entry with the key `mysql` will
    be created with the following configuration:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 作为`connections`数组的一个元素，将创建一个带有键`mysql`的条目，其配置如下：
- en: '[PRE13]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The read and write represent slave and master respectively. Since the parameters
    cascade, if the username, password, and database name are the same, then only
    the IP address of the host name needs to be listed. However, any values can be
    overridden. In this example, the read has a password that is different from that
    of the master and the write has a username that is different from the slave.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 读和写分别代表从和主。由于参数级联，如果用户名、密码和数据库名称相同，则只需要列出主机名的IP地址。但是，任何值都可以被覆盖。在这个例子中，读取的密码与主数据库不同，写入的用户名与从数据库不同。
- en: Creating a master/slave database configuration
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建主/从数据库配置
- en: To set up a master/slave database, perform the following steps from the command
    line.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置主/从数据库，请从命令行执行以下步骤。
- en: 'The first step is to determine which address the MySQL server is bound to.
    To do this, locate the line of the MySQL configuration file that contains the
    bind-address parameter:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是确定MySQL服务器绑定到哪个地址。为此，请找到包含bind-address参数的MySQL配置文件的行：
- en: '[PRE16]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This IP address will be set to whichever IP address the master server uses.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 此IP地址将设置为主服务器使用的IP地址。
- en: Next, uncomment the line of the MySQL configuration file that contains the `server-id`,
    which is most probably located at `/etc/my.cn` or `/etc/mysql/mysql.conf.d/mysqld.cnf`.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，取消注释包含`server-id`的MySQL配置文件中的行，该文件很可能位于`/etc/my.cn`或`/etc/mysql/mysql.conf.d/mysqld.cnf`。
- en: 'The Unix `sed` command can perform this easily:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Unix的`sed`命令可以轻松执行此操作：
- en: '[PRE17]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Tip
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The `/etc/mysql/my.cnf` string will need to be substituted with the correct
    filename.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/mysql/my.cnf`字符串需要替换为正确的文件名。'
- en: 'Uncomment the line of the MySQL configuration file that contains the `server-id`:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消注释包含`server-id`的MySQL配置文件中的行：
- en: '[PRE18]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Tip
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Again, the `/etc/mysql/my.cnf` string will need to be substituted with the correct
    filename.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`/etc/mysql/my.cnf`字符串需要替换为正确的文件名。
- en: 'Now, MySQL needs to be restarted. You can do this using the following command:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，需要重新启动MySQL。您可以使用以下命令执行此操作：
- en: '[PRE19]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The following placeholders should be substituted with the actual values:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下占位符应替换为实际值：
- en: '[PRE20]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Master server set up
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置主服务器
- en: 'The following are the steps for setting up a master server:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 设置主服务器的步骤如下：
- en: 'Grant permission to the slave database user:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授予从数据库用户权限：
- en: '[PRE21]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Next, the permissions must be flushed using the following command:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，必须使用以下命令刷新权限：
- en: '[PRE22]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Next, switch to the master database using the following command:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用以下命令切换到主数据库：
- en: '[PRE23]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Next, flush the tables using the following command:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用以下命令刷新表：
- en: '[PRE24]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Display the master database status using the following command:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令显示主数据库状态：
- en: '[PRE25]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Take note of the position and filename from the output:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 注意输出中的位置和文件名：
- en: '[PRE26]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Dump the master database using the following command:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令转储主数据库：
- en: '[PRE27]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Unlock the tables using the following command:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令解锁表：
- en: '[PRE28]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Slave server set up
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置从服务器
- en: 'The following are the steps for setting up a slave server:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 设置从服务器的步骤如下：
- en: 'On the slave server, create the slave database using the following command:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在从服务器上，使用以下命令创建从数据库：
- en: '[PRE29]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Import the dump file created from the master database using the following command:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令导入从主数据库创建的转储文件：
- en: '[PRE30]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now, the MySQL configuration file uses server-id 2:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，MySQL配置文件使用server-id 2：
- en: '[PRE31]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'In the MySQL configuration file, two lines should be uncommented, as follows:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在MySQL配置文件中，应取消注释两行，如下所示：
- en: '[PRE32]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'You will get the following result:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将得到以下结果：
- en: '[PRE33]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Additionally, the following line needs to be added below `binglog_do_db`:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，需要在`binglog_do_db`下面添加以下行：
- en: '[PRE34]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Now, MySQL needs to be restarted using the following command:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，需要使用以下命令重新启动MySQL：
- en: '[PRE35]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Finally, the master password is set. The master log file and positions are
    to be set to the filename and the position recorded in step 5\. Run the following
    command:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，设置主密码。主日志文件和位置将设置为步骤5中记录的文件名和位置。运行以下命令：
- en: '[PRE36]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Summary
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to speed up the routing through route caching.
    You also learned how to replace Laravel entirely with Lumen, the microframework
    entirely derived from Laravel. Finally, we discussed how Laravel can use a read
    and write configuration to take full advantage of a master and slave configuration.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学会了如何通过路由缓存加快路由速度。您还学会了如何完全用Lumen替换Laravel，这是完全源自Laravel的微框架。最后，我们讨论了Laravel如何使用读写配置充分利用主从配置。
- en: Symfony 2.7 was released in May, 2015\. It is a long-term support version. This
    version will be supported for 36 months. Shortly after that, Taylor Otwell made
    the decision to create the first LTS version of Laravel. This is the first sign
    that Laravel is firmly positioned in the enterprise space. There is no formal
    company behind Laravel yet, as there is in the case of Symfony and Zend. Yet there
    is a large ecosystem of community packages and services such as Laracasts, run
    by Jeffrey Way who works very closely with Taylor to provide official training
    videos.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: Symfony 2.7于2015年5月发布。这是一个长期支持版本。该版本将得到36个月的支持。在那之后不久，Taylor Otwell决定创建Laravel的第一个LTS版本。这是Laravel牢固地定位在企业空间的第一个迹象。与Symfony和Zend的情况不同，Laravel背后还没有正式的公司。然而，有一个庞大的社区包和服务生态系统，比如由Jeffrey
    Way运营的Laracasts，他与Taylor密切合作提供官方培训视频。
- en: Also, Taylor Otwell runs a service called Envoyer that removes any and all of
    the initial barriers to Laravel deployment and provides *zero downtime* deployment
    for Laravel as well as other types of modern PHP projects.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Taylor Otwell还运行一个名为Envoyer的服务，该服务消除了Laravel部署的所有初始障碍，并为Laravel以及其他类型的现代PHP项目提供*零停机*部署。
- en: With the arrival of Laravel 5.1 LTS, many new and exciting things will be happening
    for Laravel. The decision to use many community packages allows Taylor and his
    community to focus on the most important aspects of the framework without having
    to reinvent the wheel and maintain many redundant packages. Also, Laravel Collective
    maintained the packages that have been deprecated—even packages that are eventually
    removed from Laravel will continue to be supported for many years to come.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Laravel 5.1 LTS的到来，Laravel将会发生许多新的令人兴奋的事情。使用许多社区包的决定使Taylor和他的社区能够专注于框架的最重要方面，而无需重新发明轮子并维护许多冗余的包。此外，Laravel
    Collective维护了已被弃用的包，即使最终从Laravel中删除的包也将继续得到多年的支持。
- en: 'In addition to convenient services, such as Envoyer, the next chapter will
    present a great automation tool that has recently emerged: Elixir.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 除了方便的服务，比如Envoyer，下一章还将介绍一个最近出现的优秀自动化工具：Elixir。
